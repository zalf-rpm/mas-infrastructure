// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: web-berest-data-import.capnp

package de.zalf.mas;

public final class WebBerestDWDImport {
  public static class DWLABImport {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class importData {
          public interface Request extends org.capnproto.Request<ImportDataParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<ImportDataResults.Reader>
              implements ImportDataResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(ImportDataResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.importData.Request importDataRequest() {
        var result = newCall(ImportDataParams.factory, 0xa1a4ad9d143eaa6fL, (short)0);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xa1a4ad9d143eaa6fL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("DWLABImport", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.importData(org.capnproto.Capability.Server.internalGetTypedContext(
            ImportDataParams.factory, ImportDataResults.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("DWLABImport", 0xa1a4ad9d143eaa6fL, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> importData(org.capnproto.CallContext<ImportDataParams.Reader, ImportDataResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "web-berest-data-import.capnp:DWLABImport", "importData", 0xa1a4ad9d143eaa6fL, (short)0);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class ImportDataParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)3);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DWLABImport.ImportDataParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasId() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getId() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setId(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setId(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initId(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean hasDwla() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.Text.Builder getDwla() {
          return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
        }
        public final void setDwla(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 1, value);
        }
        public final void setDwla(String value) {
          _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initDwla(int size) {
          return _initPointerField(org.capnproto.Text.factory, 1, size);
        }
        public final boolean hasDwlb() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.Text.Builder getDwlb() {
          return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
        }
        public final void setDwlb(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 2, value);
        }
        public final void setDwlb(String value) {
          _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initDwlb(int size) {
          return _initPointerField(org.capnproto.Text.factory, 2, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasId() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getId() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public boolean hasDwla() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.Text.Reader getDwla() {
          return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
        }

        public boolean hasDwlb() {
          return !_pointerFieldIsNull(2);
        }
        public org.capnproto.Text.Reader getDwlb() {
          return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class ImportDataResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return DWLABImport.ImportDataResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasId() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getId() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setId(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setId(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initId(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean getSuccessA() {
          return _getBooleanField(0);
        }
        public final void setSuccessA(boolean value) {
          _setBooleanField(0, value);
        }

        public final boolean getSuccessB() {
          return _getBooleanField(1);
        }
        public final void setSuccessB(boolean value) {
          _setBooleanField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasId() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getId() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final boolean getSuccessA() {
          return _getBooleanField(0);
        }

        public final boolean getSuccessB() {
          return _getBooleanField(1);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
  }


public static final class Schemas {
public static final org.capnproto.SegmentReader b_a1a4ad9d143eaa6f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006f\u00aa\u003e\u0014\u009d\u00ad\u00a4\u00a1" +
   "\u001d\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u009b\u00b7\u006b\u0082\u00a2\u0068\u00b4\u00c4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0065\u0062\u002d\u0062\u0065\u0072\u0065" +
   "\u0073\u0074\u002d\u0064\u0061\u0074\u0061\u002d" +
   "\u0069\u006d\u0070\u006f\u0072\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0044\u0057\u004c" +
   "\u0041\u0042\u0049\u006d\u0070\u006f\u0072\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d2\u00c7\u0023\u00aa\u002c\u0097\u0003\u00eb" +
   "\u0007\u00ca\u00fc\u0049\u008c\u0056\u00bc\u00b9" +
   "\u0011\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0069\u006d\u0070\u006f\u0072\u0074\u0044\u0061" +
   "\u0074\u0061\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_eb03972caa23c7d2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d2\u00c7\u0023\u00aa\u002c\u0097\u0003\u00eb" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0065\u0062\u002d\u0062\u0065\u0072\u0065" +
   "\u0073\u0074\u002d\u0064\u0061\u0074\u0061\u002d" +
   "\u0069\u006d\u0070\u006f\u0072\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0044\u0057\u004c" +
   "\u0041\u0042\u0049\u006d\u0070\u006f\u0072\u0074" +
   "\u002e\u0069\u006d\u0070\u006f\u0072\u0074\u0044" +
   "\u0061\u0074\u0061\u0024\u0050\u0061\u0072\u0061" +
   "\u006d\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0077\u006c\u0061\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0077\u006c\u0062\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b9bc568c49fcca07 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0007\u00ca\u00fc\u0049\u008c\u0056\u00bc\u00b9" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0065\u0062\u002d\u0062\u0065\u0072\u0065" +
   "\u0073\u0074\u002d\u0064\u0061\u0074\u0061\u002d" +
   "\u0069\u006d\u0070\u006f\u0072\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0044\u0057\u004c" +
   "\u0041\u0042\u0049\u006d\u0070\u006f\u0072\u0074" +
   "\u002e\u0069\u006d\u0070\u006f\u0072\u0074\u0044" +
   "\u0061\u0074\u0061\u0024\u0052\u0065\u0073\u0075" +
   "\u006c\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0041" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0042" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

