@using System.Text;

@namespace Mas.Infrastructure.BlazorComponents

@inject IJSRuntime jsRuntime
@inject IChartService chartService

@implements IDisposable

<div id="basicLine"></div>

@code {

    private ChartObject BasicLineGraph = new ChartObject()
    {
        Legend = new Legend(true, Layout.Vertical, Allegiance.Blazor.Highcharts.Constants.Align.Right, VerticalAlign.Middle),
        PlotOptions = new PlotOptions(new PlotOptionsSeries(new Label(false), 2010)),
        Responsive = new Responsive(
            new Rule(
                new Condition(500),
                new Allegiance.Blazor.Highcharts.Options.ChartOptions(
                        new Legend(true, Layout.Vertical, Allegiance.Blazor.Highcharts.Constants.Align.Right, VerticalAlign.Middle)
                    )
                )
            ),
        Series = new List<SeriesElement>()
{
            new SeriesElement("Installation", new List<object>()
{
                43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175
            }),
            new SeriesElement("Manufacturing", new List<object>()
{
                24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434
            }),
            new SeriesElement("Sales & Distribution", new List<object>()
{
                11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387
            }),
            new SeriesElement("Project Development", new List<object>()
{
                null, null, 7988, 12169, 15112, 22452, 34400, 34227
            }),
            new SeriesElement("Other", new List<object>()
{
                12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111
            }),
        },
        Subtitle = new Title("Source: thesolarfoundation.com"),
        Title = new Title("Solar Employment Growth by Sector, 2010-2016"),
        YAxis = new YAxis(
            new Title("Number of Employees")
            ),
        XAxis = new XAxis(
            new Accessibility("Range: 2010 to 2017")
            )
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            chartService.RenderChart("basicLine", BasicLineGraph.Generate());
            //jsRuntime.InvokeVoidAsync("prettyPrint");
        }
    }

    public void Dispose()
    {
        BasicLineGraph.DisposeChart(jsRuntime, "basicLine");
    }
}
