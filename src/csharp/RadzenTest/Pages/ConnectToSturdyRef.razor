@using Capnp.Rpc
@using Mas.Infrastructure.Common
@inject Mas.Infrastructure.Common.ConnectionManager ConMan
@typeparam TCapnpInterface

<h3>ConnectToSturdyRef</h3>

<p>
    <input type="text" @bind="sturdyRef" @bind:event="onchange" oninput="ClearButton"/>
</p>

<p>SturdyRef: @sturdyRef</p>
<p>
    <button class="btn @bootstrapButtonType" @onclick="Connect">@buttonLabel</button>
</p>

@code {
    private String sturdyRef = "capnp://localhost:56081/";

    private bool connected = false;

    private String buttonLabel = "Connect";
    private String bootstrapButtonType = "btn-primary";

    [Parameter]
    public TCapnpInterface Capability { get; set; }

    [Parameter]
    public EventCallback<TCapnpInterface> CapabilityChanged { get; set; }

    private async Task Connect()
    {
        try
        {
            Capability = await ConMan.Connect<TCapnpInterface>(sturdyRef);
            bootstrapButtonType = "btn-success";
            buttonLabel = "Connected";
        }
        catch(Capnp.Rpc.RpcException e)
        {
            bootstrapButtonType = "btn-danger";
            buttonLabel = "Connect";
        }

        await CapabilityChanged.InvokeAsync(Capability);
    }

    private void ClearButton()
    {
        Console.WriteLine("bla");
        bootstrapButtonType = "btn-primary";
        buttonLabel = "Connect";
    }
}
