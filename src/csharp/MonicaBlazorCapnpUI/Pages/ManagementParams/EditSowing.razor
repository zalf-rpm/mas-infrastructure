@namespace Mas.Infrastructure.BlazorComponents

@using MudBlazor
@using Mgmt = Rpc.Management
@using Reg = Rpc.Registry
@using Crop = Rpc.Crop
@using Monica = Mas.Models.Monica 

<MudCard>
    <MudCardContent>
        <MudSelect @bind-Value=Params.Cultivar Label="Sow cultivar ...">
            @foreach (Mgmt.Cultivar cult in Enum.GetValues(typeof(Mgmt.Cultivar)))
            {
                <MudSelectItem Value="@cult">@cult.ToString()</MudSelectItem>
            }
        </MudSelect>
        <!--
    <MudSelect @bind-Value=Params.Cultivar Label="Sow cultivar ...">
        @foreach (Mgmt.Cultivar cult in Enum.GetValues(typeof(Mgmt.Cultivar)))
        {
            <MudSelectItem Value="@cult">@cult.ToString()</MudSelectItem>
        }
    </MudSelect>
    -->
        <!--
    <MudTextField @bind-Value=Params.PlantDensity
                  Label="Plant density"
                  HelperText="> 0 overwrites plant density from species parameters"
                  Adornment="Adornment.End"
                  AdornmentText="plants m-2" />
    -->
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public Mgmt.Params.Sowing Params { get; set; } = new();

    [Parameter]
    public Reg.IRegistry CropRegistryServiceCap { get; set; }

    private bool cropRegistryCapUpdated = false;

    private IEnumerable<Reg.Registry.Entry> allCultivarEntries = new List<Reg.Registry.Entry>();

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        cropRegistryCapUpdated = parameters.GetValueOrDefault<Reg.IRegistry>("CropRegistryServiceCap", null) != CropRegistryServiceCap;
        await base.SetParametersAsync(parameters);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (cropRegistryCapUpdated) await LoadCultivars();
    }

    private async Task LoadCultivars()
    {
        if (CropRegistryServiceCap == null) return;

        var entries = await CropRegistryServiceCap.Entries(null, true);
        allCultivarEntries = entries.OrderBy(e => $"{e.CategoryId}_{e.RefInfo.Name}");
    }
}