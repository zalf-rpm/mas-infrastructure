// Code generated by capnpc-go. DO NOT EDIT.

package monica

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	math "math"
)

type SoilCharacteristicData struct{ capnp.Struct }

// SoilCharacteristicData_TypeID is the unique identifier for the type SoilCharacteristicData.
const SoilCharacteristicData_TypeID = 0xfc682227304e2281

func NewSoilCharacteristicData(s *capnp.Segment) (SoilCharacteristicData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicData{st}, err
}

func NewRootSoilCharacteristicData(s *capnp.Segment) (SoilCharacteristicData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicData{st}, err
}

func ReadRootSoilCharacteristicData(msg *capnp.Message) (SoilCharacteristicData, error) {
	root, err := msg.Root()
	return SoilCharacteristicData{root.Struct()}, err
}

func (s SoilCharacteristicData) String() string {
	str, _ := text.Marshal(0xfc682227304e2281, s.Struct)
	return str
}

func (s SoilCharacteristicData) List() (SoilCharacteristicData_Data_List, error) {
	p, err := s.Struct.Ptr(0)
	return SoilCharacteristicData_Data_List{List: p.List()}, err
}

func (s SoilCharacteristicData) HasList() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicData) SetList(v SoilCharacteristicData_Data_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewList sets the list field to a newly
// allocated SoilCharacteristicData_Data_List, preferring placement in s's segment.
func (s SoilCharacteristicData) NewList(n int32) (SoilCharacteristicData_Data_List, error) {
	l, err := NewSoilCharacteristicData_Data_List(s.Struct.Segment(), n)
	if err != nil {
		return SoilCharacteristicData_Data_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// SoilCharacteristicData_List is a list of SoilCharacteristicData.
type SoilCharacteristicData_List struct{ capnp.List }

// NewSoilCharacteristicData creates a new list of SoilCharacteristicData.
func NewSoilCharacteristicData_List(s *capnp.Segment, sz int32) (SoilCharacteristicData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SoilCharacteristicData_List{l}, err
}

func (s SoilCharacteristicData_List) At(i int) SoilCharacteristicData {
	return SoilCharacteristicData{s.List.Struct(i)}
}

func (s SoilCharacteristicData_List) Set(i int, v SoilCharacteristicData) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicData_List) String() string {
	str, _ := text.MarshalList(0xfc682227304e2281, s.List)
	return str
}

// SoilCharacteristicData_Future is a wrapper for a SoilCharacteristicData promised by a client call.
type SoilCharacteristicData_Future struct{ *capnp.Future }

func (p SoilCharacteristicData_Future) Struct() (SoilCharacteristicData, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicData{s}, err
}

type SoilCharacteristicData_Data struct{ capnp.Struct }

// SoilCharacteristicData_Data_TypeID is the unique identifier for the type SoilCharacteristicData_Data.
const SoilCharacteristicData_Data_TypeID = 0xeafaab57e025db63

func NewSoilCharacteristicData_Data(s *capnp.Segment) (SoilCharacteristicData_Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicData_Data{st}, err
}

func NewRootSoilCharacteristicData_Data(s *capnp.Segment) (SoilCharacteristicData_Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicData_Data{st}, err
}

func ReadRootSoilCharacteristicData_Data(msg *capnp.Message) (SoilCharacteristicData_Data, error) {
	root, err := msg.Root()
	return SoilCharacteristicData_Data{root.Struct()}, err
}

func (s SoilCharacteristicData_Data) String() string {
	str, _ := text.Marshal(0xeafaab57e025db63, s.Struct)
	return str
}

func (s SoilCharacteristicData_Data) SoilType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SoilCharacteristicData_Data) HasSoilType() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicData_Data) SoilTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SoilCharacteristicData_Data) SetSoilType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SoilCharacteristicData_Data) SoilRawDensity() int16 {
	return int16(s.Struct.Uint16(0))
}

func (s SoilCharacteristicData_Data) SetSoilRawDensity(v int16) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s SoilCharacteristicData_Data) AirCapacity() uint8 {
	return s.Struct.Uint8(2)
}

func (s SoilCharacteristicData_Data) SetAirCapacity(v uint8) {
	s.Struct.SetUint8(2, v)
}

func (s SoilCharacteristicData_Data) FieldCapacity() uint8 {
	return s.Struct.Uint8(3)
}

func (s SoilCharacteristicData_Data) SetFieldCapacity(v uint8) {
	s.Struct.SetUint8(3, v)
}

func (s SoilCharacteristicData_Data) NFieldCapacity() uint8 {
	return s.Struct.Uint8(4)
}

func (s SoilCharacteristicData_Data) SetNFieldCapacity(v uint8) {
	s.Struct.SetUint8(4, v)
}

// SoilCharacteristicData_Data_List is a list of SoilCharacteristicData_Data.
type SoilCharacteristicData_Data_List struct{ capnp.List }

// NewSoilCharacteristicData_Data creates a new list of SoilCharacteristicData_Data.
func NewSoilCharacteristicData_Data_List(s *capnp.Segment, sz int32) (SoilCharacteristicData_Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SoilCharacteristicData_Data_List{l}, err
}

func (s SoilCharacteristicData_Data_List) At(i int) SoilCharacteristicData_Data {
	return SoilCharacteristicData_Data{s.List.Struct(i)}
}

func (s SoilCharacteristicData_Data_List) Set(i int, v SoilCharacteristicData_Data) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicData_Data_List) String() string {
	str, _ := text.MarshalList(0xeafaab57e025db63, s.List)
	return str
}

// SoilCharacteristicData_Data_Future is a wrapper for a SoilCharacteristicData_Data promised by a client call.
type SoilCharacteristicData_Data_Future struct{ *capnp.Future }

func (p SoilCharacteristicData_Data_Future) Struct() (SoilCharacteristicData_Data, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicData_Data{s}, err
}

type SoilCharacteristicModifier struct{ capnp.Struct }

// SoilCharacteristicModifier_TypeID is the unique identifier for the type SoilCharacteristicModifier.
const SoilCharacteristicModifier_TypeID = 0xe4eb0a9bb0e5bb53

func NewSoilCharacteristicModifier(s *capnp.Segment) (SoilCharacteristicModifier, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicModifier{st}, err
}

func NewRootSoilCharacteristicModifier(s *capnp.Segment) (SoilCharacteristicModifier, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicModifier{st}, err
}

func ReadRootSoilCharacteristicModifier(msg *capnp.Message) (SoilCharacteristicModifier, error) {
	root, err := msg.Root()
	return SoilCharacteristicModifier{root.Struct()}, err
}

func (s SoilCharacteristicModifier) String() string {
	str, _ := text.Marshal(0xe4eb0a9bb0e5bb53, s.Struct)
	return str
}

func (s SoilCharacteristicModifier) List() (SoilCharacteristicModifier_Data_List, error) {
	p, err := s.Struct.Ptr(0)
	return SoilCharacteristicModifier_Data_List{List: p.List()}, err
}

func (s SoilCharacteristicModifier) HasList() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicModifier) SetList(v SoilCharacteristicModifier_Data_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewList sets the list field to a newly
// allocated SoilCharacteristicModifier_Data_List, preferring placement in s's segment.
func (s SoilCharacteristicModifier) NewList(n int32) (SoilCharacteristicModifier_Data_List, error) {
	l, err := NewSoilCharacteristicModifier_Data_List(s.Struct.Segment(), n)
	if err != nil {
		return SoilCharacteristicModifier_Data_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// SoilCharacteristicModifier_List is a list of SoilCharacteristicModifier.
type SoilCharacteristicModifier_List struct{ capnp.List }

// NewSoilCharacteristicModifier creates a new list of SoilCharacteristicModifier.
func NewSoilCharacteristicModifier_List(s *capnp.Segment, sz int32) (SoilCharacteristicModifier_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SoilCharacteristicModifier_List{l}, err
}

func (s SoilCharacteristicModifier_List) At(i int) SoilCharacteristicModifier {
	return SoilCharacteristicModifier{s.List.Struct(i)}
}

func (s SoilCharacteristicModifier_List) Set(i int, v SoilCharacteristicModifier) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicModifier_List) String() string {
	str, _ := text.MarshalList(0xe4eb0a9bb0e5bb53, s.List)
	return str
}

// SoilCharacteristicModifier_Future is a wrapper for a SoilCharacteristicModifier promised by a client call.
type SoilCharacteristicModifier_Future struct{ *capnp.Future }

func (p SoilCharacteristicModifier_Future) Struct() (SoilCharacteristicModifier, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicModifier{s}, err
}

type SoilCharacteristicModifier_Data struct{ capnp.Struct }

// SoilCharacteristicModifier_Data_TypeID is the unique identifier for the type SoilCharacteristicModifier_Data.
const SoilCharacteristicModifier_Data_TypeID = 0xa968a46ccde8b1b4

func NewSoilCharacteristicModifier_Data(s *capnp.Segment) (SoilCharacteristicModifier_Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicModifier_Data{st}, err
}

func NewRootSoilCharacteristicModifier_Data(s *capnp.Segment) (SoilCharacteristicModifier_Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicModifier_Data{st}, err
}

func ReadRootSoilCharacteristicModifier_Data(msg *capnp.Message) (SoilCharacteristicModifier_Data, error) {
	root, err := msg.Root()
	return SoilCharacteristicModifier_Data{root.Struct()}, err
}

func (s SoilCharacteristicModifier_Data) String() string {
	str, _ := text.Marshal(0xa968a46ccde8b1b4, s.Struct)
	return str
}

func (s SoilCharacteristicModifier_Data) SoilType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SoilCharacteristicModifier_Data) HasSoilType() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicModifier_Data) SoilTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SoilCharacteristicModifier_Data) SetSoilType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SoilCharacteristicModifier_Data) OrganicMatter() float32 {
	return math.Float32frombits(s.Struct.Uint32(0))
}

func (s SoilCharacteristicModifier_Data) SetOrganicMatter(v float32) {
	s.Struct.SetUint32(0, math.Float32bits(v))
}

func (s SoilCharacteristicModifier_Data) AirCapacity() uint8 {
	return s.Struct.Uint8(4)
}

func (s SoilCharacteristicModifier_Data) SetAirCapacity(v uint8) {
	s.Struct.SetUint8(4, v)
}

func (s SoilCharacteristicModifier_Data) FieldCapacity() uint8 {
	return s.Struct.Uint8(5)
}

func (s SoilCharacteristicModifier_Data) SetFieldCapacity(v uint8) {
	s.Struct.SetUint8(5, v)
}

func (s SoilCharacteristicModifier_Data) NFieldCapacity() uint8 {
	return s.Struct.Uint8(6)
}

func (s SoilCharacteristicModifier_Data) SetNFieldCapacity(v uint8) {
	s.Struct.SetUint8(6, v)
}

// SoilCharacteristicModifier_Data_List is a list of SoilCharacteristicModifier_Data.
type SoilCharacteristicModifier_Data_List struct{ capnp.List }

// NewSoilCharacteristicModifier_Data creates a new list of SoilCharacteristicModifier_Data.
func NewSoilCharacteristicModifier_Data_List(s *capnp.Segment, sz int32) (SoilCharacteristicModifier_Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SoilCharacteristicModifier_Data_List{l}, err
}

func (s SoilCharacteristicModifier_Data_List) At(i int) SoilCharacteristicModifier_Data {
	return SoilCharacteristicModifier_Data{s.List.Struct(i)}
}

func (s SoilCharacteristicModifier_Data_List) Set(i int, v SoilCharacteristicModifier_Data) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicModifier_Data_List) String() string {
	str, _ := text.MarshalList(0xa968a46ccde8b1b4, s.List)
	return str
}

// SoilCharacteristicModifier_Data_Future is a wrapper for a SoilCharacteristicModifier_Data promised by a client call.
type SoilCharacteristicModifier_Data_Future struct{ *capnp.Future }

func (p SoilCharacteristicModifier_Data_Future) Struct() (SoilCharacteristicModifier_Data, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicModifier_Data{s}, err
}

type CapillaryRiseRate struct{ capnp.Struct }

// CapillaryRiseRate_TypeID is the unique identifier for the type CapillaryRiseRate.
const CapillaryRiseRate_TypeID = 0x9b169bc96bb3d24b

func NewCapillaryRiseRate(s *capnp.Segment) (CapillaryRiseRate, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapillaryRiseRate{st}, err
}

func NewRootCapillaryRiseRate(s *capnp.Segment) (CapillaryRiseRate, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapillaryRiseRate{st}, err
}

func ReadRootCapillaryRiseRate(msg *capnp.Message) (CapillaryRiseRate, error) {
	root, err := msg.Root()
	return CapillaryRiseRate{root.Struct()}, err
}

func (s CapillaryRiseRate) String() string {
	str, _ := text.Marshal(0x9b169bc96bb3d24b, s.Struct)
	return str
}

func (s CapillaryRiseRate) List() (CapillaryRiseRate_Data_List, error) {
	p, err := s.Struct.Ptr(0)
	return CapillaryRiseRate_Data_List{List: p.List()}, err
}

func (s CapillaryRiseRate) HasList() bool {
	return s.Struct.HasPtr(0)
}

func (s CapillaryRiseRate) SetList(v CapillaryRiseRate_Data_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewList sets the list field to a newly
// allocated CapillaryRiseRate_Data_List, preferring placement in s's segment.
func (s CapillaryRiseRate) NewList(n int32) (CapillaryRiseRate_Data_List, error) {
	l, err := NewCapillaryRiseRate_Data_List(s.Struct.Segment(), n)
	if err != nil {
		return CapillaryRiseRate_Data_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// CapillaryRiseRate_List is a list of CapillaryRiseRate.
type CapillaryRiseRate_List struct{ capnp.List }

// NewCapillaryRiseRate creates a new list of CapillaryRiseRate.
func NewCapillaryRiseRate_List(s *capnp.Segment, sz int32) (CapillaryRiseRate_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return CapillaryRiseRate_List{l}, err
}

func (s CapillaryRiseRate_List) At(i int) CapillaryRiseRate {
	return CapillaryRiseRate{s.List.Struct(i)}
}

func (s CapillaryRiseRate_List) Set(i int, v CapillaryRiseRate) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s CapillaryRiseRate_List) String() string {
	str, _ := text.MarshalList(0x9b169bc96bb3d24b, s.List)
	return str
}

// CapillaryRiseRate_Future is a wrapper for a CapillaryRiseRate promised by a client call.
type CapillaryRiseRate_Future struct{ *capnp.Future }

func (p CapillaryRiseRate_Future) Struct() (CapillaryRiseRate, error) {
	s, err := p.Future.Struct()
	return CapillaryRiseRate{s}, err
}

type CapillaryRiseRate_Data struct{ capnp.Struct }

// CapillaryRiseRate_Data_TypeID is the unique identifier for the type CapillaryRiseRate_Data.
const CapillaryRiseRate_Data_TypeID = 0xb78a89c58fad885d

func NewCapillaryRiseRate_Data(s *capnp.Segment) (CapillaryRiseRate_Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CapillaryRiseRate_Data{st}, err
}

func NewRootCapillaryRiseRate_Data(s *capnp.Segment) (CapillaryRiseRate_Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CapillaryRiseRate_Data{st}, err
}

func ReadRootCapillaryRiseRate_Data(msg *capnp.Message) (CapillaryRiseRate_Data, error) {
	root, err := msg.Root()
	return CapillaryRiseRate_Data{root.Struct()}, err
}

func (s CapillaryRiseRate_Data) String() string {
	str, _ := text.Marshal(0xb78a89c58fad885d, s.Struct)
	return str
}

func (s CapillaryRiseRate_Data) SoilType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s CapillaryRiseRate_Data) HasSoilType() bool {
	return s.Struct.HasPtr(0)
}

func (s CapillaryRiseRate_Data) SoilTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s CapillaryRiseRate_Data) SetSoilType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s CapillaryRiseRate_Data) Distance() uint8 {
	return s.Struct.Uint8(0)
}

func (s CapillaryRiseRate_Data) SetDistance(v uint8) {
	s.Struct.SetUint8(0, v)
}

func (s CapillaryRiseRate_Data) Rate() float32 {
	return math.Float32frombits(s.Struct.Uint32(4))
}

func (s CapillaryRiseRate_Data) SetRate(v float32) {
	s.Struct.SetUint32(4, math.Float32bits(v))
}

// CapillaryRiseRate_Data_List is a list of CapillaryRiseRate_Data.
type CapillaryRiseRate_Data_List struct{ capnp.List }

// NewCapillaryRiseRate_Data creates a new list of CapillaryRiseRate_Data.
func NewCapillaryRiseRate_Data_List(s *capnp.Segment, sz int32) (CapillaryRiseRate_Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return CapillaryRiseRate_Data_List{l}, err
}

func (s CapillaryRiseRate_Data_List) At(i int) CapillaryRiseRate_Data {
	return CapillaryRiseRate_Data{s.List.Struct(i)}
}

func (s CapillaryRiseRate_Data_List) Set(i int, v CapillaryRiseRate_Data) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s CapillaryRiseRate_Data_List) String() string {
	str, _ := text.MarshalList(0xb78a89c58fad885d, s.List)
	return str
}

// CapillaryRiseRate_Data_Future is a wrapper for a CapillaryRiseRate_Data promised by a client call.
type CapillaryRiseRate_Data_Future struct{ *capnp.Future }

func (p CapillaryRiseRate_Data_Future) Struct() (CapillaryRiseRate_Data, error) {
	s, err := p.Future.Struct()
	return CapillaryRiseRate_Data{s}, err
}

const schema_f83caca0747996ab = "x\xda\xbcT\xcdk\x14I\x1c\xfd\xbd\xaa\xee\x99%d" +
	"7\xdb\xf4\xb0\xcb\x9e\xb2\x04%\x90C\x12\xf5 ~\xc0" +
	"\x083\x0a~D\xa6\x12\x83\x1e\x0cR\xf6tLag" +
	"\xa6\xe9n\x90\x09z\x10\x0cD1(\xa2\xa2\xc4@\x0e" +
	"\x0a\x86(*\x0aB<{\xc8\xc1K\x8ezQQ\xf0" +
	"\xe3\x1fP\x11Zjf\xec\x8ca\x82\xce\xc5[\xf1\xea" +
	"W\xf5^\xbd\xf7\xba\xfb\x97\xb1\x83m0\xbb\x0d\"\xd1" +
	"o\xa6\xe2\xbd\xcb\x0f\x8f/\xcd\xfc3C\xd6\xff\x88\x17" +
	"\xaeV\xa2\xb9;\xdb?\x91\x894\xd1\xa6\xcf\xb8\x04\xdb" +
	"b\xff\x12\xd9\xff\xb1,!~\xf4\xe0\xdd3\xef\xe6\xd8" +
	"<\x89m@<\xf4\xe4\xed\xfd\x99\xb6\x8fo\xea\xd3\xbb" +
	"\x19c\xb6\xcb\xf4R\xb2N\x10\xe2\x91\xa9\xbb\x17\x9e\x9e" +
	"=\xf7\x98\xc4F`\x85\xa96>\xc9\x17a\xcf\xf24" +
	"\x91}\x9d\xdf\xa3\x86\xeb\x9a(\xd9b<\x87=lh" +
	"%#\x86V\xe2\xbcX\xff\xf2\xe0\xc2\x97\x0f$6\x03" +
	"\xf1\xe9\xae\xfd\xfd\xdd]c_\xeb\xd3\xd3\xc6k\xd8\xf3" +
	"\x86^\xde2\xaaJ\x92\x81&w/\x99\x8b\xb0_\x99" +
	"\xfa\xee\xf7f\x96r\xf1x\xb9\xe8za\xdf\xb8Y." +
	")G\xf6\x85e\xe5\x1d\xf1e \xc7\xc3^G\xfa%" +
	"\x7fkN\xfa\xca\xf3dP\x19T\xa1;(#\xb8\xc2" +
	"@\xc3s-\xf4t\xe4e$\x85\xc1\x0d\"\x03D\xd6" +
	"\x9f=D\xe2\x0f\x0e\xb1\x8e\xa1\xc3Sa\x84\xbf\x08\x05" +
	"\x0e\xfc\xbdr\x8c\xa0\xc1\x84>\xbd\x16\xfdPYy\xb9" +
	"1\x19H'r\x03\x15F\xca\x19(\x17\xd5\xa8r\x83" +
	"^\xcdJ\x05@d\x12\xe6S{\x88\xc4I\x0e1\xc5" +
	"\x00d\xa0\xb1\xc9\x80H\x9c\xe1\x10\x17\x19,fd\xc0" +
	"\x88\xac\xe9\xa3D\xe2<\x87\xb8\xc6`q3\x03Nd" +
	"]\xd1\x93\x979\xc4\x1c\x83e\xa420\x88\xac\xd9\x09" +
	"\"q\x83C\xdcf\x88\xb5\xbe\x03\x15\xdf%\"\xb4\x13" +
	"C;!.\x07\xc7dI9\x03\xd4)\xa3\xc8\x0d\xd0" +
	"F\x0cm\x84X\xaa '}\xe9PZE\x15\xa4\x88" +
	"!E\x88G\x95\xeb\x15s\xd2\xa7N\xe94\xe2\xa5]" +
	"\xb5\x0d\xca\xfa?n\xb4\x1cP\xd6\xad:\xa3\x8diO" +
	"\x8c\xd9\xa9\x8d\xc9s\x88\xc2\x8a1\x03\x1a\xdb\xc7!\x0e" +
	"icP3fXgW\xe0\x10\x87\xd7xnQ\x85" +
	"\x91,9U\xac\xae\xb1#\x90\x91\x9b\xbc\xfb\xbb\xe0T" +
	"\xab\x91r7\xa8V+\xf9\xf0Z\xabVrlU\xb5" +
	"Z\xd0\xa1\xc9z\xf3\xe9\xba{?\xa9\xd5Dc\xadX" +
	"\xb3Z\xf1f\xb52~\xb1V\x1a\x1b\x94'\xf2\x94u" +
	"K\xa1.\x04'\x06\xfe\x1b{\xb5\xda\x9el\xcd\x9fj" +
	"D\xc9\x1f\xa9\xb5\x88\x92c\xb5\x88\xbe\x05\x00\x00\xff\xff" +
	"\x15\xc9\x84e"

func init() {
	schemas.Register(schema_f83caca0747996ab,
		0x9b169bc96bb3d24b,
		0xa968a46ccde8b1b4,
		0xb78a89c58fad885d,
		0xe4eb0a9bb0e5bb53,
		0xeafaab57e025db63,
		0xfc682227304e2281)
}
