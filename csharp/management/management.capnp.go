// Code generated by capnpc-go. DO NOT EDIT.

package management

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/common"
	crop "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/crop"
	geo "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/geo"
	math "math"
	strconv "strconv"
)

type MineralFertilizer uint16

// MineralFertilizer_TypeID is the unique identifier for the type MineralFertilizer.
const MineralFertilizer_TypeID = 0xf95ca008c46a4b3b

// Values of MineralFertilizer.
const (
	MineralFertilizer_ahls  MineralFertilizer = 0
	MineralFertilizer_alzon MineralFertilizer = 1
	MineralFertilizer_an    MineralFertilizer = 2
	MineralFertilizer_ap    MineralFertilizer = 3
	MineralFertilizer_as    MineralFertilizer = 4
	MineralFertilizer_ash   MineralFertilizer = 5
	MineralFertilizer_cf4   MineralFertilizer = 6
	MineralFertilizer_cp1   MineralFertilizer = 7
	MineralFertilizer_cp2   MineralFertilizer = 8
	MineralFertilizer_cp3   MineralFertilizer = 9
	MineralFertilizer_npk   MineralFertilizer = 10
	MineralFertilizer_ns    MineralFertilizer = 11
	MineralFertilizer_u     MineralFertilizer = 12
	MineralFertilizer_uan   MineralFertilizer = 13
	MineralFertilizer_uas   MineralFertilizer = 14
	MineralFertilizer_uni   MineralFertilizer = 15
)

// String returns the enum's constant name.
func (c MineralFertilizer) String() string {
	switch c {
	case MineralFertilizer_ahls:
		return "ahls"
	case MineralFertilizer_alzon:
		return "alzon"
	case MineralFertilizer_an:
		return "an"
	case MineralFertilizer_ap:
		return "ap"
	case MineralFertilizer_as:
		return "as"
	case MineralFertilizer_ash:
		return "ash"
	case MineralFertilizer_cf4:
		return "cf4"
	case MineralFertilizer_cp1:
		return "cp1"
	case MineralFertilizer_cp2:
		return "cp2"
	case MineralFertilizer_cp3:
		return "cp3"
	case MineralFertilizer_npk:
		return "npk"
	case MineralFertilizer_ns:
		return "ns"
	case MineralFertilizer_u:
		return "u"
	case MineralFertilizer_uan:
		return "uan"
	case MineralFertilizer_uas:
		return "uas"
	case MineralFertilizer_uni:
		return "uni"

	default:
		return ""
	}
}

// MineralFertilizerFromString returns the enum value with a name,
// or the zero value if there's no such value.
func MineralFertilizerFromString(c string) MineralFertilizer {
	switch c {
	case "ahls":
		return MineralFertilizer_ahls
	case "alzon":
		return MineralFertilizer_alzon
	case "an":
		return MineralFertilizer_an
	case "ap":
		return MineralFertilizer_ap
	case "as":
		return MineralFertilizer_as
	case "ash":
		return MineralFertilizer_ash
	case "cf4":
		return MineralFertilizer_cf4
	case "cp1":
		return MineralFertilizer_cp1
	case "cp2":
		return MineralFertilizer_cp2
	case "cp3":
		return MineralFertilizer_cp3
	case "npk":
		return MineralFertilizer_npk
	case "ns":
		return MineralFertilizer_ns
	case "u":
		return MineralFertilizer_u
	case "uan":
		return MineralFertilizer_uan
	case "uas":
		return MineralFertilizer_uas
	case "uni":
		return MineralFertilizer_uni

	default:
		return 0
	}
}

type MineralFertilizer_List struct{ capnp.List }

func NewMineralFertilizer_List(s *capnp.Segment, sz int32) (MineralFertilizer_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return MineralFertilizer_List{l.List}, err
}

func (l MineralFertilizer_List) At(i int) MineralFertilizer {
	ul := capnp.UInt16List{List: l.List}
	return MineralFertilizer(ul.At(i))
}

func (l MineralFertilizer_List) Set(i int, v MineralFertilizer) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type OrganicFertilizer uint16

// OrganicFertilizer_TypeID is the unique identifier for the type OrganicFertilizer.
const OrganicFertilizer_TypeID = 0x84acb8f8eab508b9

// Values of OrganicFertilizer.
const (
	OrganicFertilizer_ash   OrganicFertilizer = 0
	OrganicFertilizer_cadlm OrganicFertilizer = 1
	OrganicFertilizer_cam   OrganicFertilizer = 2
	OrganicFertilizer_cas   OrganicFertilizer = 3
	OrganicFertilizer_cau   OrganicFertilizer = 4
	OrganicFertilizer_dgdlm OrganicFertilizer = 5
	OrganicFertilizer_gwc   OrganicFertilizer = 6
	OrganicFertilizer_hodlm OrganicFertilizer = 7
	OrganicFertilizer_mc    OrganicFertilizer = 8
	OrganicFertilizer_ms    OrganicFertilizer = 9
	OrganicFertilizer_oic   OrganicFertilizer = 10
	OrganicFertilizer_pidlm OrganicFertilizer = 11
	OrganicFertilizer_pim   OrganicFertilizer = 12
	OrganicFertilizer_pis   OrganicFertilizer = 13
	OrganicFertilizer_piu   OrganicFertilizer = 14
	OrganicFertilizer_piudk OrganicFertilizer = 15
	OrganicFertilizer_plw   OrganicFertilizer = 16
	OrganicFertilizer_podlm OrganicFertilizer = 17
	OrganicFertilizer_pom   OrganicFertilizer = 18
	OrganicFertilizer_soy   OrganicFertilizer = 19
	OrganicFertilizer_ss    OrganicFertilizer = 20
	OrganicFertilizer_tudlm OrganicFertilizer = 21
	OrganicFertilizer_weeds OrganicFertilizer = 22
	OrganicFertilizer_ws    OrganicFertilizer = 23
)

// String returns the enum's constant name.
func (c OrganicFertilizer) String() string {
	switch c {
	case OrganicFertilizer_ash:
		return "ash"
	case OrganicFertilizer_cadlm:
		return "cadlm"
	case OrganicFertilizer_cam:
		return "cam"
	case OrganicFertilizer_cas:
		return "cas"
	case OrganicFertilizer_cau:
		return "cau"
	case OrganicFertilizer_dgdlm:
		return "dgdlm"
	case OrganicFertilizer_gwc:
		return "gwc"
	case OrganicFertilizer_hodlm:
		return "hodlm"
	case OrganicFertilizer_mc:
		return "mc"
	case OrganicFertilizer_ms:
		return "ms"
	case OrganicFertilizer_oic:
		return "oic"
	case OrganicFertilizer_pidlm:
		return "pidlm"
	case OrganicFertilizer_pim:
		return "pim"
	case OrganicFertilizer_pis:
		return "pis"
	case OrganicFertilizer_piu:
		return "piu"
	case OrganicFertilizer_piudk:
		return "piudk"
	case OrganicFertilizer_plw:
		return "plw"
	case OrganicFertilizer_podlm:
		return "podlm"
	case OrganicFertilizer_pom:
		return "pom"
	case OrganicFertilizer_soy:
		return "soy"
	case OrganicFertilizer_ss:
		return "ss"
	case OrganicFertilizer_tudlm:
		return "tudlm"
	case OrganicFertilizer_weeds:
		return "weeds"
	case OrganicFertilizer_ws:
		return "ws"

	default:
		return ""
	}
}

// OrganicFertilizerFromString returns the enum value with a name,
// or the zero value if there's no such value.
func OrganicFertilizerFromString(c string) OrganicFertilizer {
	switch c {
	case "ash":
		return OrganicFertilizer_ash
	case "cadlm":
		return OrganicFertilizer_cadlm
	case "cam":
		return OrganicFertilizer_cam
	case "cas":
		return OrganicFertilizer_cas
	case "cau":
		return OrganicFertilizer_cau
	case "dgdlm":
		return OrganicFertilizer_dgdlm
	case "gwc":
		return OrganicFertilizer_gwc
	case "hodlm":
		return OrganicFertilizer_hodlm
	case "mc":
		return OrganicFertilizer_mc
	case "ms":
		return OrganicFertilizer_ms
	case "oic":
		return OrganicFertilizer_oic
	case "pidlm":
		return OrganicFertilizer_pidlm
	case "pim":
		return OrganicFertilizer_pim
	case "pis":
		return OrganicFertilizer_pis
	case "piu":
		return OrganicFertilizer_piu
	case "piudk":
		return OrganicFertilizer_piudk
	case "plw":
		return OrganicFertilizer_plw
	case "podlm":
		return OrganicFertilizer_podlm
	case "pom":
		return OrganicFertilizer_pom
	case "soy":
		return OrganicFertilizer_soy
	case "ss":
		return OrganicFertilizer_ss
	case "tudlm":
		return OrganicFertilizer_tudlm
	case "weeds":
		return OrganicFertilizer_weeds
	case "ws":
		return OrganicFertilizer_ws

	default:
		return 0
	}
}

type OrganicFertilizer_List struct{ capnp.List }

func NewOrganicFertilizer_List(s *capnp.Segment, sz int32) (OrganicFertilizer_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return OrganicFertilizer_List{l.List}, err
}

func (l OrganicFertilizer_List) At(i int) OrganicFertilizer {
	ul := capnp.UInt16List{List: l.List}
	return OrganicFertilizer(ul.At(i))
}

func (l OrganicFertilizer_List) Set(i int, v OrganicFertilizer) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type EventType uint16

// EventType_TypeID is the unique identifier for the type EventType.
const EventType_TypeID = 0x82a74595175b71a3

// Values of EventType.
const (
	EventType_sowing               EventType = 0
	EventType_automaticSowing      EventType = 1
	EventType_harvest              EventType = 2
	EventType_automaticHarvest     EventType = 3
	EventType_irrigation           EventType = 4
	EventType_tillage              EventType = 5
	EventType_organicFertilization EventType = 6
	EventType_mineralFertilization EventType = 7
	EventType_nDemandFertilization EventType = 8
	EventType_cutting              EventType = 9
	EventType_setValue             EventType = 10
	EventType_saveState            EventType = 11
)

// String returns the enum's constant name.
func (c EventType) String() string {
	switch c {
	case EventType_sowing:
		return "sowing"
	case EventType_automaticSowing:
		return "automaticSowing"
	case EventType_harvest:
		return "harvest"
	case EventType_automaticHarvest:
		return "automaticHarvest"
	case EventType_irrigation:
		return "irrigation"
	case EventType_tillage:
		return "tillage"
	case EventType_organicFertilization:
		return "organicFertilization"
	case EventType_mineralFertilization:
		return "mineralFertilization"
	case EventType_nDemandFertilization:
		return "nDemandFertilization"
	case EventType_cutting:
		return "cutting"
	case EventType_setValue:
		return "setValue"
	case EventType_saveState:
		return "saveState"

	default:
		return ""
	}
}

// EventTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func EventTypeFromString(c string) EventType {
	switch c {
	case "sowing":
		return EventType_sowing
	case "automaticSowing":
		return EventType_automaticSowing
	case "harvest":
		return EventType_harvest
	case "automaticHarvest":
		return EventType_automaticHarvest
	case "irrigation":
		return EventType_irrigation
	case "tillage":
		return EventType_tillage
	case "organicFertilization":
		return EventType_organicFertilization
	case "mineralFertilization":
		return EventType_mineralFertilization
	case "nDemandFertilization":
		return EventType_nDemandFertilization
	case "cutting":
		return EventType_cutting
	case "setValue":
		return EventType_setValue
	case "saveState":
		return EventType_saveState

	default:
		return 0
	}
}

type EventType_List struct{ capnp.List }

func NewEventType_List(s *capnp.Segment, sz int32) (EventType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return EventType_List{l.List}, err
}

func (l EventType_List) At(i int) EventType {
	ul := capnp.UInt16List{List: l.List}
	return EventType(ul.At(i))
}

func (l EventType_List) Set(i int, v EventType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type PlantOrgan uint16

// PlantOrgan_TypeID is the unique identifier for the type PlantOrgan.
const PlantOrgan_TypeID = 0xc2d50914b83d42de

// Values of PlantOrgan.
const (
	PlantOrgan_root   PlantOrgan = 0
	PlantOrgan_leaf   PlantOrgan = 1
	PlantOrgan_shoot  PlantOrgan = 2
	PlantOrgan_fruit  PlantOrgan = 3
	PlantOrgan_strukt PlantOrgan = 4
	PlantOrgan_sugar  PlantOrgan = 5
)

// String returns the enum's constant name.
func (c PlantOrgan) String() string {
	switch c {
	case PlantOrgan_root:
		return "root"
	case PlantOrgan_leaf:
		return "leaf"
	case PlantOrgan_shoot:
		return "shoot"
	case PlantOrgan_fruit:
		return "fruit"
	case PlantOrgan_strukt:
		return "strukt"
	case PlantOrgan_sugar:
		return "sugar"

	default:
		return ""
	}
}

// PlantOrganFromString returns the enum value with a name,
// or the zero value if there's no such value.
func PlantOrganFromString(c string) PlantOrgan {
	switch c {
	case "root":
		return PlantOrgan_root
	case "leaf":
		return PlantOrgan_leaf
	case "shoot":
		return PlantOrgan_shoot
	case "fruit":
		return PlantOrgan_fruit
	case "strukt":
		return PlantOrgan_strukt
	case "sugar":
		return PlantOrgan_sugar

	default:
		return 0
	}
}

type PlantOrgan_List struct{ capnp.List }

func NewPlantOrgan_List(s *capnp.Segment, sz int32) (PlantOrgan_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return PlantOrgan_List{l.List}, err
}

func (l PlantOrgan_List) At(i int) PlantOrgan {
	ul := capnp.UInt16List{List: l.List}
	return PlantOrgan(ul.At(i))
}

func (l PlantOrgan_List) Set(i int, v PlantOrgan) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event struct{ capnp.Struct }
type Event_at Event
type Event_between Event
type Event_after Event
type Event_Which uint16

const (
	Event_Which_at      Event_Which = 0
	Event_Which_between Event_Which = 1
	Event_Which_after   Event_Which = 2
)

func (w Event_Which) String() string {
	const s = "atbetweenafter"
	switch w {
	case Event_Which_at:
		return s[0:2]
	case Event_Which_between:
		return s[2:9]
	case Event_Which_after:
		return s[9:14]

	}
	return "Event_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Event_TypeID is the unique identifier for the type Event.
const Event_TypeID = 0x9c5dedfd679ac842

func NewEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Event{st}, err
}

func NewRootEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Event{st}, err
}

func ReadRootEvent(msg *capnp.Message) (Event, error) {
	root, err := msg.Root()
	return Event{root.Struct()}, err
}

func (s Event) String() string {
	str, _ := text.Marshal(0x9c5dedfd679ac842, s.Struct)
	return str
}

func (s Event) Which() Event_Which {
	return Event_Which(s.Struct.Uint16(2))
}
func (s Event) Type() Event_ExternalType {
	return Event_ExternalType(s.Struct.Uint16(0))
}

func (s Event) SetType(v Event_ExternalType) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Event) Info() (common.IdInformation, error) {
	p, err := s.Struct.Ptr(0)
	return common.IdInformation{Struct: p.Struct()}, err
}

func (s Event) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s Event) SetInfo(v common.IdInformation) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated common.IdInformation struct, preferring placement in s's segment.
func (s Event) NewInfo() (common.IdInformation, error) {
	ss, err := common.NewIdInformation(s.Struct.Segment())
	if err != nil {
		return common.IdInformation{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) At() Event_at { return Event_at(s) }

func (s Event) SetAt() {
	s.Struct.SetUint16(2, 0)
}

func (s Event_at) Date() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_at) HasDate() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_at) SetDate(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDate sets the date field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_at) NewDate() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) Between() Event_between { return Event_between(s) }

func (s Event) SetBetween() {
	s.Struct.SetUint16(2, 1)
}

func (s Event_between) Earliest() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_between) HasEarliest() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_between) SetEarliest(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEarliest sets the earliest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_between) NewEarliest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event_between) Latest() (common.Date, error) {
	p, err := s.Struct.Ptr(2)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_between) HasLatest() bool {
	return s.Struct.HasPtr(2)
}

func (s Event_between) SetLatest(v common.Date) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewLatest sets the latest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_between) NewLatest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) After() Event_after { return Event_after(s) }

func (s Event) SetAfter() {
	s.Struct.SetUint16(2, 2)
}

func (s Event_after) Event() (Event_Type, error) {
	p, err := s.Struct.Ptr(1)
	return Event_Type{Struct: p.Struct()}, err
}

func (s Event_after) HasEvent() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_after) SetEvent(v Event_Type) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated Event_Type struct, preferring placement in s's segment.
func (s Event_after) NewEvent() (Event_Type, error) {
	ss, err := NewEvent_Type(s.Struct.Segment())
	if err != nil {
		return Event_Type{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event_after) Days() uint16 {
	return s.Struct.Uint16(4)
}

func (s Event_after) SetDays(v uint16) {
	s.Struct.SetUint16(4, v)
}

func (s Event) Params() (capnp.Ptr, error) {
	return s.Struct.Ptr(3)
}

func (s Event) HasParams() bool {
	return s.Struct.HasPtr(3)
}

func (s Event) SetParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(3, v)
}

func (s Event) RunAtStartOfDay() bool {
	return s.Struct.Bit(48)
}

func (s Event) SetRunAtStartOfDay(v bool) {
	s.Struct.SetBit(48, v)
}

// Event_List is a list of Event.
type Event_List struct{ capnp.List }

// NewEvent creates a new list of Event.
func NewEvent_List(s *capnp.Segment, sz int32) (Event_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Event_List{l}, err
}

func (s Event_List) At(i int) Event { return Event{s.List.Struct(i)} }

func (s Event_List) Set(i int, v Event) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_List) String() string {
	str, _ := text.MarshalList(0x9c5dedfd679ac842, s.List)
	return str
}

// Event_Future is a wrapper for a Event promised by a client call.
type Event_Future struct{ *capnp.Future }

func (p Event_Future) Struct() (Event, error) {
	s, err := p.Future.Struct()
	return Event{s}, err
}

func (p Event_Future) Info() common.IdInformation_Future {
	return common.IdInformation_Future{Future: p.Future.Field(0, nil)}
}

func (p Event_Future) At() Event_at_Future { return Event_at_Future{p.Future} }

// Event_at_Future is a wrapper for a Event_at promised by a client call.
type Event_at_Future struct{ *capnp.Future }

func (p Event_at_Future) Struct() (Event_at, error) {
	s, err := p.Future.Struct()
	return Event_at{s}, err
}

func (p Event_at_Future) Date() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_Future) Between() Event_between_Future { return Event_between_Future{p.Future} }

// Event_between_Future is a wrapper for a Event_between promised by a client call.
type Event_between_Future struct{ *capnp.Future }

func (p Event_between_Future) Struct() (Event_between, error) {
	s, err := p.Future.Struct()
	return Event_between{s}, err
}

func (p Event_between_Future) Earliest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_between_Future) Latest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(2, nil)}
}

func (p Event_Future) After() Event_after_Future { return Event_after_Future{p.Future} }

// Event_after_Future is a wrapper for a Event_after promised by a client call.
type Event_after_Future struct{ *capnp.Future }

func (p Event_after_Future) Struct() (Event_after, error) {
	s, err := p.Future.Struct()
	return Event_after{s}, err
}

func (p Event_after_Future) Event() Event_Type_Future {
	return Event_Type_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_Future) Params() *capnp.Future {
	return p.Future.Field(3, nil)
}

type Event_ExternalType uint16

// Event_ExternalType_TypeID is the unique identifier for the type Event_ExternalType.
const Event_ExternalType_TypeID = 0xf082ec2d0eb50c9b

// Values of Event_ExternalType.
const (
	Event_ExternalType_sowing               Event_ExternalType = 0
	Event_ExternalType_automaticSowing      Event_ExternalType = 1
	Event_ExternalType_harvest              Event_ExternalType = 2
	Event_ExternalType_automaticHarvest     Event_ExternalType = 3
	Event_ExternalType_irrigation           Event_ExternalType = 4
	Event_ExternalType_tillage              Event_ExternalType = 5
	Event_ExternalType_organicFertilization Event_ExternalType = 6
	Event_ExternalType_mineralFertilization Event_ExternalType = 7
	Event_ExternalType_nDemandFertilization Event_ExternalType = 8
	Event_ExternalType_cutting              Event_ExternalType = 9
)

// String returns the enum's constant name.
func (c Event_ExternalType) String() string {
	switch c {
	case Event_ExternalType_sowing:
		return "sowing"
	case Event_ExternalType_automaticSowing:
		return "automaticSowing"
	case Event_ExternalType_harvest:
		return "harvest"
	case Event_ExternalType_automaticHarvest:
		return "automaticHarvest"
	case Event_ExternalType_irrigation:
		return "irrigation"
	case Event_ExternalType_tillage:
		return "tillage"
	case Event_ExternalType_organicFertilization:
		return "organicFertilization"
	case Event_ExternalType_mineralFertilization:
		return "mineralFertilization"
	case Event_ExternalType_nDemandFertilization:
		return "nDemandFertilization"
	case Event_ExternalType_cutting:
		return "cutting"

	default:
		return ""
	}
}

// Event_ExternalTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Event_ExternalTypeFromString(c string) Event_ExternalType {
	switch c {
	case "sowing":
		return Event_ExternalType_sowing
	case "automaticSowing":
		return Event_ExternalType_automaticSowing
	case "harvest":
		return Event_ExternalType_harvest
	case "automaticHarvest":
		return Event_ExternalType_automaticHarvest
	case "irrigation":
		return Event_ExternalType_irrigation
	case "tillage":
		return Event_ExternalType_tillage
	case "organicFertilization":
		return Event_ExternalType_organicFertilization
	case "mineralFertilization":
		return Event_ExternalType_mineralFertilization
	case "nDemandFertilization":
		return Event_ExternalType_nDemandFertilization
	case "cutting":
		return Event_ExternalType_cutting

	default:
		return 0
	}
}

type Event_ExternalType_List struct{ capnp.List }

func NewEvent_ExternalType_List(s *capnp.Segment, sz int32) (Event_ExternalType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Event_ExternalType_List{l.List}, err
}

func (l Event_ExternalType_List) At(i int) Event_ExternalType {
	ul := capnp.UInt16List{List: l.List}
	return Event_ExternalType(ul.At(i))
}

func (l Event_ExternalType_List) Set(i int, v Event_ExternalType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event_PhenoStage uint16

// Event_PhenoStage_TypeID is the unique identifier for the type Event_PhenoStage.
const Event_PhenoStage_TypeID = 0x8fa09457bc1bfc34

// Values of Event_PhenoStage.
const (
	Event_PhenoStage_emergence Event_PhenoStage = 0
	Event_PhenoStage_flowering Event_PhenoStage = 1
	Event_PhenoStage_anthesis  Event_PhenoStage = 2
	Event_PhenoStage_maturity  Event_PhenoStage = 3
)

// String returns the enum's constant name.
func (c Event_PhenoStage) String() string {
	switch c {
	case Event_PhenoStage_emergence:
		return "emergence"
	case Event_PhenoStage_flowering:
		return "flowering"
	case Event_PhenoStage_anthesis:
		return "anthesis"
	case Event_PhenoStage_maturity:
		return "maturity"

	default:
		return ""
	}
}

// Event_PhenoStageFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Event_PhenoStageFromString(c string) Event_PhenoStage {
	switch c {
	case "emergence":
		return Event_PhenoStage_emergence
	case "flowering":
		return Event_PhenoStage_flowering
	case "anthesis":
		return Event_PhenoStage_anthesis
	case "maturity":
		return Event_PhenoStage_maturity

	default:
		return 0
	}
}

type Event_PhenoStage_List struct{ capnp.List }

func NewEvent_PhenoStage_List(s *capnp.Segment, sz int32) (Event_PhenoStage_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Event_PhenoStage_List{l.List}, err
}

func (l Event_PhenoStage_List) At(i int) Event_PhenoStage {
	ul := capnp.UInt16List{List: l.List}
	return Event_PhenoStage(ul.At(i))
}

func (l Event_PhenoStage_List) Set(i int, v Event_PhenoStage) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event_Type struct{ capnp.Struct }
type Event_Type_Which uint16

const (
	Event_Type_Which_external Event_Type_Which = 0
	Event_Type_Which_internal Event_Type_Which = 1
)

func (w Event_Type_Which) String() string {
	const s = "externalinternal"
	switch w {
	case Event_Type_Which_external:
		return s[0:8]
	case Event_Type_Which_internal:
		return s[8:16]

	}
	return "Event_Type_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Event_Type_TypeID is the unique identifier for the type Event_Type.
const Event_Type_TypeID = 0xe1ed73d59c8ce359

func NewEvent_Type(s *capnp.Segment) (Event_Type, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Event_Type{st}, err
}

func NewRootEvent_Type(s *capnp.Segment) (Event_Type, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Event_Type{st}, err
}

func ReadRootEvent_Type(msg *capnp.Message) (Event_Type, error) {
	root, err := msg.Root()
	return Event_Type{root.Struct()}, err
}

func (s Event_Type) String() string {
	str, _ := text.Marshal(0xe1ed73d59c8ce359, s.Struct)
	return str
}

func (s Event_Type) Which() Event_Type_Which {
	return Event_Type_Which(s.Struct.Uint16(2))
}
func (s Event_Type) External() Event_ExternalType {
	if s.Struct.Uint16(2) != 0 {
		panic("Which() != external")
	}
	return Event_ExternalType(s.Struct.Uint16(0))
}

func (s Event_Type) SetExternal(v Event_ExternalType) {
	s.Struct.SetUint16(2, 0)
	s.Struct.SetUint16(0, uint16(v))
}

func (s Event_Type) Internal() Event_PhenoStage {
	if s.Struct.Uint16(2) != 1 {
		panic("Which() != internal")
	}
	return Event_PhenoStage(s.Struct.Uint16(0))
}

func (s Event_Type) SetInternal(v Event_PhenoStage) {
	s.Struct.SetUint16(2, 1)
	s.Struct.SetUint16(0, uint16(v))
}

// Event_Type_List is a list of Event_Type.
type Event_Type_List struct{ capnp.List }

// NewEvent_Type creates a new list of Event_Type.
func NewEvent_Type_List(s *capnp.Segment, sz int32) (Event_Type_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Event_Type_List{l}, err
}

func (s Event_Type_List) At(i int) Event_Type { return Event_Type{s.List.Struct(i)} }

func (s Event_Type_List) Set(i int, v Event_Type) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_Type_List) String() string {
	str, _ := text.MarshalList(0xe1ed73d59c8ce359, s.List)
	return str
}

// Event_Type_Future is a wrapper for a Event_Type promised by a client call.
type Event_Type_Future struct{ *capnp.Future }

func (p Event_Type_Future) Struct() (Event_Type, error) {
	s, err := p.Future.Struct()
	return Event_Type{s}, err
}

type Params struct{ capnp.Struct }

// Params_TypeID is the unique identifier for the type Params.
const Params_TypeID = 0x9d247c812334c917

func NewParams(s *capnp.Segment) (Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Params{st}, err
}

func NewRootParams(s *capnp.Segment) (Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Params{st}, err
}

func ReadRootParams(msg *capnp.Message) (Params, error) {
	root, err := msg.Root()
	return Params{root.Struct()}, err
}

func (s Params) String() string {
	str, _ := text.Marshal(0x9d247c812334c917, s.Struct)
	return str
}

// Params_List is a list of Params.
type Params_List struct{ capnp.List }

// NewParams creates a new list of Params.
func NewParams_List(s *capnp.Segment, sz int32) (Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Params_List{l}, err
}

func (s Params_List) At(i int) Params { return Params{s.List.Struct(i)} }

func (s Params_List) Set(i int, v Params) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_List) String() string {
	str, _ := text.MarshalList(0x9d247c812334c917, s.List)
	return str
}

// Params_Future is a wrapper for a Params promised by a client call.
type Params_Future struct{ *capnp.Future }

func (p Params_Future) Struct() (Params, error) {
	s, err := p.Future.Struct()
	return Params{s}, err
}

type Params_Sowing struct{ capnp.Struct }

// Params_Sowing_TypeID is the unique identifier for the type Params_Sowing.
const Params_Sowing_TypeID = 0x80ce153f3bc9a9e8

func NewParams_Sowing(s *capnp.Segment) (Params_Sowing, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Sowing{st}, err
}

func NewRootParams_Sowing(s *capnp.Segment) (Params_Sowing, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Sowing{st}, err
}

func ReadRootParams_Sowing(msg *capnp.Message) (Params_Sowing, error) {
	root, err := msg.Root()
	return Params_Sowing{root.Struct()}, err
}

func (s Params_Sowing) String() string {
	str, _ := text.Marshal(0x80ce153f3bc9a9e8, s.Struct)
	return str
}

func (s Params_Sowing) Cultivar() crop.Cultivar {
	return crop.Cultivar(s.Struct.Uint16(0))
}

func (s Params_Sowing) SetCultivar(v crop.Cultivar) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Params_Sowing) PlantDensity() uint16 {
	return s.Struct.Uint16(2)
}

func (s Params_Sowing) SetPlantDensity(v uint16) {
	s.Struct.SetUint16(2, v)
}

func (s Params_Sowing) Crop() crop.Crop {
	p, _ := s.Struct.Ptr(0)
	return crop.Crop{Client: p.Interface().Client()}
}

func (s Params_Sowing) HasCrop() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Sowing) SetCrop(v crop.Crop) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Params_Sowing_List is a list of Params_Sowing.
type Params_Sowing_List struct{ capnp.List }

// NewParams_Sowing creates a new list of Params_Sowing.
func NewParams_Sowing_List(s *capnp.Segment, sz int32) (Params_Sowing_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Sowing_List{l}, err
}

func (s Params_Sowing_List) At(i int) Params_Sowing { return Params_Sowing{s.List.Struct(i)} }

func (s Params_Sowing_List) Set(i int, v Params_Sowing) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Sowing_List) String() string {
	str, _ := text.MarshalList(0x80ce153f3bc9a9e8, s.List)
	return str
}

// Params_Sowing_Future is a wrapper for a Params_Sowing promised by a client call.
type Params_Sowing_Future struct{ *capnp.Future }

func (p Params_Sowing_Future) Struct() (Params_Sowing, error) {
	s, err := p.Future.Struct()
	return Params_Sowing{s}, err
}

func (p Params_Sowing_Future) Crop() crop.Crop {
	return crop.Crop{Client: p.Future.Field(0, nil).Client()}
}

type Params_AutomaticSowing struct{ capnp.Struct }

// Params_AutomaticSowing_TypeID is the unique identifier for the type Params_AutomaticSowing.
const Params_AutomaticSowing_TypeID = 0xcfcf44997e7ceab4

func NewParams_AutomaticSowing(s *capnp.Segment) (Params_AutomaticSowing, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2})
	return Params_AutomaticSowing{st}, err
}

func NewRootParams_AutomaticSowing(s *capnp.Segment) (Params_AutomaticSowing, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2})
	return Params_AutomaticSowing{st}, err
}

func ReadRootParams_AutomaticSowing(msg *capnp.Message) (Params_AutomaticSowing, error) {
	root, err := msg.Root()
	return Params_AutomaticSowing{root.Struct()}, err
}

func (s Params_AutomaticSowing) String() string {
	str, _ := text.Marshal(0xcfcf44997e7ceab4, s.Struct)
	return str
}

func (s Params_AutomaticSowing) Sowing() (Params_Sowing, error) {
	p, err := s.Struct.Ptr(1)
	return Params_Sowing{Struct: p.Struct()}, err
}

func (s Params_AutomaticSowing) HasSowing() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_AutomaticSowing) SetSowing(v Params_Sowing) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewSowing sets the sowing field to a newly
// allocated Params_Sowing struct, preferring placement in s's segment.
func (s Params_AutomaticSowing) NewSowing() (Params_Sowing, error) {
	ss, err := NewParams_Sowing(s.Struct.Segment())
	if err != nil {
		return Params_Sowing{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_AutomaticSowing) MinTempThreshold() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_AutomaticSowing) SetMinTempThreshold(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_AutomaticSowing) DaysInTempWindow() uint16 {
	return s.Struct.Uint16(8)
}

func (s Params_AutomaticSowing) SetDaysInTempWindow(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Params_AutomaticSowing) MinPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticSowing) SetMinPercentASW(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_AutomaticSowing) MaxPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(24) ^ 0x4059000000000000)
}

func (s Params_AutomaticSowing) SetMaxPercentASW(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v)^0x4059000000000000)
}

func (s Params_AutomaticSowing) Max3dayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_AutomaticSowing) SetMax3dayPrecipSum(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

func (s Params_AutomaticSowing) MaxCurrentDayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(40))
}

func (s Params_AutomaticSowing) SetMaxCurrentDayPrecipSum(v float64) {
	s.Struct.SetUint64(40, math.Float64bits(v))
}

func (s Params_AutomaticSowing) TempSumAboveBaseTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(48))
}

func (s Params_AutomaticSowing) SetTempSumAboveBaseTemp(v float64) {
	s.Struct.SetUint64(48, math.Float64bits(v))
}

func (s Params_AutomaticSowing) BaseTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(56))
}

func (s Params_AutomaticSowing) SetBaseTemp(v float64) {
	s.Struct.SetUint64(56, math.Float64bits(v))
}

func (s Params_AutomaticSowing) AvgSoilTemp() (Params_AutomaticSowing_AvgSoilTemp, error) {
	p, err := s.Struct.Ptr(0)
	return Params_AutomaticSowing_AvgSoilTemp{Struct: p.Struct()}, err
}

func (s Params_AutomaticSowing) HasAvgSoilTemp() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_AutomaticSowing) SetAvgSoilTemp(v Params_AutomaticSowing_AvgSoilTemp) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAvgSoilTemp sets the avgSoilTemp field to a newly
// allocated Params_AutomaticSowing_AvgSoilTemp struct, preferring placement in s's segment.
func (s Params_AutomaticSowing) NewAvgSoilTemp() (Params_AutomaticSowing_AvgSoilTemp, error) {
	ss, err := NewParams_AutomaticSowing_AvgSoilTemp(s.Struct.Segment())
	if err != nil {
		return Params_AutomaticSowing_AvgSoilTemp{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_AutomaticSowing_List is a list of Params_AutomaticSowing.
type Params_AutomaticSowing_List struct{ capnp.List }

// NewParams_AutomaticSowing creates a new list of Params_AutomaticSowing.
func NewParams_AutomaticSowing_List(s *capnp.Segment, sz int32) (Params_AutomaticSowing_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2}, sz)
	return Params_AutomaticSowing_List{l}, err
}

func (s Params_AutomaticSowing_List) At(i int) Params_AutomaticSowing {
	return Params_AutomaticSowing{s.List.Struct(i)}
}

func (s Params_AutomaticSowing_List) Set(i int, v Params_AutomaticSowing) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticSowing_List) String() string {
	str, _ := text.MarshalList(0xcfcf44997e7ceab4, s.List)
	return str
}

// Params_AutomaticSowing_Future is a wrapper for a Params_AutomaticSowing promised by a client call.
type Params_AutomaticSowing_Future struct{ *capnp.Future }

func (p Params_AutomaticSowing_Future) Struct() (Params_AutomaticSowing, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticSowing{s}, err
}

func (p Params_AutomaticSowing_Future) Sowing() Params_Sowing_Future {
	return Params_Sowing_Future{Future: p.Future.Field(1, nil)}
}

func (p Params_AutomaticSowing_Future) AvgSoilTemp() Params_AutomaticSowing_AvgSoilTemp_Future {
	return Params_AutomaticSowing_AvgSoilTemp_Future{Future: p.Future.Field(0, nil)}
}

type Params_AutomaticSowing_AvgSoilTemp struct{ capnp.Struct }

// Params_AutomaticSowing_AvgSoilTemp_TypeID is the unique identifier for the type Params_AutomaticSowing_AvgSoilTemp.
const Params_AutomaticSowing_AvgSoilTemp_TypeID = 0x9d81d2bf4cd0f868

func NewParams_AutomaticSowing_AvgSoilTemp(s *capnp.Segment) (Params_AutomaticSowing_AvgSoilTemp, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_AutomaticSowing_AvgSoilTemp{st}, err
}

func NewRootParams_AutomaticSowing_AvgSoilTemp(s *capnp.Segment) (Params_AutomaticSowing_AvgSoilTemp, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_AutomaticSowing_AvgSoilTemp{st}, err
}

func ReadRootParams_AutomaticSowing_AvgSoilTemp(msg *capnp.Message) (Params_AutomaticSowing_AvgSoilTemp, error) {
	root, err := msg.Root()
	return Params_AutomaticSowing_AvgSoilTemp{root.Struct()}, err
}

func (s Params_AutomaticSowing_AvgSoilTemp) String() string {
	str, _ := text.Marshal(0x9d81d2bf4cd0f868, s.Struct)
	return str
}

func (s Params_AutomaticSowing_AvgSoilTemp) SoilDepthForAveraging() float64 {
	return math.Float64frombits(s.Struct.Uint64(0) ^ 0x3fd3333333333333)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetSoilDepthForAveraging(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v)^0x3fd3333333333333)
}

func (s Params_AutomaticSowing_AvgSoilTemp) DaysInSoilTempWindow() uint16 {
	return s.Struct.Uint16(8)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetDaysInSoilTempWindow(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SowingIfAboveAvgSoilTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetSowingIfAboveAvgSoilTemp(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// Params_AutomaticSowing_AvgSoilTemp_List is a list of Params_AutomaticSowing_AvgSoilTemp.
type Params_AutomaticSowing_AvgSoilTemp_List struct{ capnp.List }

// NewParams_AutomaticSowing_AvgSoilTemp creates a new list of Params_AutomaticSowing_AvgSoilTemp.
func NewParams_AutomaticSowing_AvgSoilTemp_List(s *capnp.Segment, sz int32) (Params_AutomaticSowing_AvgSoilTemp_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_AutomaticSowing_AvgSoilTemp_List{l}, err
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) At(i int) Params_AutomaticSowing_AvgSoilTemp {
	return Params_AutomaticSowing_AvgSoilTemp{s.List.Struct(i)}
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) Set(i int, v Params_AutomaticSowing_AvgSoilTemp) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) String() string {
	str, _ := text.MarshalList(0x9d81d2bf4cd0f868, s.List)
	return str
}

// Params_AutomaticSowing_AvgSoilTemp_Future is a wrapper for a Params_AutomaticSowing_AvgSoilTemp promised by a client call.
type Params_AutomaticSowing_AvgSoilTemp_Future struct{ *capnp.Future }

func (p Params_AutomaticSowing_AvgSoilTemp_Future) Struct() (Params_AutomaticSowing_AvgSoilTemp, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticSowing_AvgSoilTemp{s}, err
}

type Params_Harvest struct{ capnp.Struct }

// Params_Harvest_TypeID is the unique identifier for the type Params_Harvest.
const Params_Harvest_TypeID = 0xeed4e55bb04289ef

func NewParams_Harvest(s *capnp.Segment) (Params_Harvest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Harvest{st}, err
}

func NewRootParams_Harvest(s *capnp.Segment) (Params_Harvest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Harvest{st}, err
}

func ReadRootParams_Harvest(msg *capnp.Message) (Params_Harvest, error) {
	root, err := msg.Root()
	return Params_Harvest{root.Struct()}, err
}

func (s Params_Harvest) String() string {
	str, _ := text.Marshal(0xeed4e55bb04289ef, s.Struct)
	return str
}

func (s Params_Harvest) Exported() bool {
	return !s.Struct.Bit(0)
}

func (s Params_Harvest) SetExported(v bool) {
	s.Struct.SetBit(0, !v)
}

func (s Params_Harvest) OptCarbMgmtData() (Params_Harvest_OptCarbonMgmtData, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Harvest_OptCarbonMgmtData{Struct: p.Struct()}, err
}

func (s Params_Harvest) HasOptCarbMgmtData() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Harvest) SetOptCarbMgmtData(v Params_Harvest_OptCarbonMgmtData) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewOptCarbMgmtData sets the optCarbMgmtData field to a newly
// allocated Params_Harvest_OptCarbonMgmtData struct, preferring placement in s's segment.
func (s Params_Harvest) NewOptCarbMgmtData() (Params_Harvest_OptCarbonMgmtData, error) {
	ss, err := NewParams_Harvest_OptCarbonMgmtData(s.Struct.Segment())
	if err != nil {
		return Params_Harvest_OptCarbonMgmtData{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_Harvest_List is a list of Params_Harvest.
type Params_Harvest_List struct{ capnp.List }

// NewParams_Harvest creates a new list of Params_Harvest.
func NewParams_Harvest_List(s *capnp.Segment, sz int32) (Params_Harvest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Harvest_List{l}, err
}

func (s Params_Harvest_List) At(i int) Params_Harvest { return Params_Harvest{s.List.Struct(i)} }

func (s Params_Harvest_List) Set(i int, v Params_Harvest) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Harvest_List) String() string {
	str, _ := text.MarshalList(0xeed4e55bb04289ef, s.List)
	return str
}

// Params_Harvest_Future is a wrapper for a Params_Harvest promised by a client call.
type Params_Harvest_Future struct{ *capnp.Future }

func (p Params_Harvest_Future) Struct() (Params_Harvest, error) {
	s, err := p.Future.Struct()
	return Params_Harvest{s}, err
}

func (p Params_Harvest_Future) OptCarbMgmtData() Params_Harvest_OptCarbonMgmtData_Future {
	return Params_Harvest_OptCarbonMgmtData_Future{Future: p.Future.Field(0, nil)}
}

type Params_Harvest_CropUsage uint16

// Params_Harvest_CropUsage_TypeID is the unique identifier for the type Params_Harvest_CropUsage.
const Params_Harvest_CropUsage_TypeID = 0x8f0cbec420589373

// Values of Params_Harvest_CropUsage.
const (
	Params_Harvest_CropUsage_greenManure       Params_Harvest_CropUsage = 0
	Params_Harvest_CropUsage_biomassProduction Params_Harvest_CropUsage = 1
)

// String returns the enum's constant name.
func (c Params_Harvest_CropUsage) String() string {
	switch c {
	case Params_Harvest_CropUsage_greenManure:
		return "greenManure"
	case Params_Harvest_CropUsage_biomassProduction:
		return "biomassProduction"

	default:
		return ""
	}
}

// Params_Harvest_CropUsageFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Harvest_CropUsageFromString(c string) Params_Harvest_CropUsage {
	switch c {
	case "greenManure":
		return Params_Harvest_CropUsage_greenManure
	case "biomassProduction":
		return Params_Harvest_CropUsage_biomassProduction

	default:
		return 0
	}
}

type Params_Harvest_CropUsage_List struct{ capnp.List }

func NewParams_Harvest_CropUsage_List(s *capnp.Segment, sz int32) (Params_Harvest_CropUsage_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Harvest_CropUsage_List{l.List}, err
}

func (l Params_Harvest_CropUsage_List) At(i int) Params_Harvest_CropUsage {
	ul := capnp.UInt16List{List: l.List}
	return Params_Harvest_CropUsage(ul.At(i))
}

func (l Params_Harvest_CropUsage_List) Set(i int, v Params_Harvest_CropUsage) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Harvest_OptCarbonMgmtData struct{ capnp.Struct }

// Params_Harvest_OptCarbonMgmtData_TypeID is the unique identifier for the type Params_Harvest_OptCarbonMgmtData.
const Params_Harvest_OptCarbonMgmtData_TypeID = 0x8cb6b3e3c50d3665

func NewParams_Harvest_OptCarbonMgmtData(s *capnp.Segment) (Params_Harvest_OptCarbonMgmtData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return Params_Harvest_OptCarbonMgmtData{st}, err
}

func NewRootParams_Harvest_OptCarbonMgmtData(s *capnp.Segment) (Params_Harvest_OptCarbonMgmtData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return Params_Harvest_OptCarbonMgmtData{st}, err
}

func ReadRootParams_Harvest_OptCarbonMgmtData(msg *capnp.Message) (Params_Harvest_OptCarbonMgmtData, error) {
	root, err := msg.Root()
	return Params_Harvest_OptCarbonMgmtData{root.Struct()}, err
}

func (s Params_Harvest_OptCarbonMgmtData) String() string {
	str, _ := text.Marshal(0x8cb6b3e3c50d3665, s.Struct)
	return str
}

func (s Params_Harvest_OptCarbonMgmtData) OptCarbonConservation() bool {
	return s.Struct.Bit(0)
}

func (s Params_Harvest_OptCarbonMgmtData) SetOptCarbonConservation(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Params_Harvest_OptCarbonMgmtData) CropImpactOnHumusBalance() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Harvest_OptCarbonMgmtData) SetCropImpactOnHumusBalance(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) CropUsage() Params_Harvest_CropUsage {
	return Params_Harvest_CropUsage(s.Struct.Uint16(2) ^ 1)
}

func (s Params_Harvest_OptCarbonMgmtData) SetCropUsage(v Params_Harvest_CropUsage) {
	s.Struct.SetUint16(2, uint16(v)^1)
}

func (s Params_Harvest_OptCarbonMgmtData) ResidueHeq() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_Harvest_OptCarbonMgmtData) SetResidueHeq(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) OrganicFertilizerHeq() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_Harvest_OptCarbonMgmtData) SetOrganicFertilizerHeq(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) MaxResidueRecoverFraction() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_Harvest_OptCarbonMgmtData) SetMaxResidueRecoverFraction(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

// Params_Harvest_OptCarbonMgmtData_List is a list of Params_Harvest_OptCarbonMgmtData.
type Params_Harvest_OptCarbonMgmtData_List struct{ capnp.List }

// NewParams_Harvest_OptCarbonMgmtData creates a new list of Params_Harvest_OptCarbonMgmtData.
func NewParams_Harvest_OptCarbonMgmtData_List(s *capnp.Segment, sz int32) (Params_Harvest_OptCarbonMgmtData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0}, sz)
	return Params_Harvest_OptCarbonMgmtData_List{l}, err
}

func (s Params_Harvest_OptCarbonMgmtData_List) At(i int) Params_Harvest_OptCarbonMgmtData {
	return Params_Harvest_OptCarbonMgmtData{s.List.Struct(i)}
}

func (s Params_Harvest_OptCarbonMgmtData_List) Set(i int, v Params_Harvest_OptCarbonMgmtData) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Harvest_OptCarbonMgmtData_List) String() string {
	str, _ := text.MarshalList(0x8cb6b3e3c50d3665, s.List)
	return str
}

// Params_Harvest_OptCarbonMgmtData_Future is a wrapper for a Params_Harvest_OptCarbonMgmtData promised by a client call.
type Params_Harvest_OptCarbonMgmtData_Future struct{ *capnp.Future }

func (p Params_Harvest_OptCarbonMgmtData_Future) Struct() (Params_Harvest_OptCarbonMgmtData, error) {
	s, err := p.Future.Struct()
	return Params_Harvest_OptCarbonMgmtData{s}, err
}

type Params_AutomaticHarvest struct{ capnp.Struct }

// Params_AutomaticHarvest_TypeID is the unique identifier for the type Params_AutomaticHarvest.
const Params_AutomaticHarvest_TypeID = 0xe3a37e340f816cd1

func NewParams_AutomaticHarvest(s *capnp.Segment) (Params_AutomaticHarvest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Params_AutomaticHarvest{st}, err
}

func NewRootParams_AutomaticHarvest(s *capnp.Segment) (Params_AutomaticHarvest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Params_AutomaticHarvest{st}, err
}

func ReadRootParams_AutomaticHarvest(msg *capnp.Message) (Params_AutomaticHarvest, error) {
	root, err := msg.Root()
	return Params_AutomaticHarvest{root.Struct()}, err
}

func (s Params_AutomaticHarvest) String() string {
	str, _ := text.Marshal(0xe3a37e340f816cd1, s.Struct)
	return str
}

func (s Params_AutomaticHarvest) Harvest() (Params_Harvest, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Harvest{Struct: p.Struct()}, err
}

func (s Params_AutomaticHarvest) HasHarvest() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_AutomaticHarvest) SetHarvest(v Params_Harvest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewHarvest sets the harvest field to a newly
// allocated Params_Harvest struct, preferring placement in s's segment.
func (s Params_AutomaticHarvest) NewHarvest() (Params_Harvest, error) {
	ss, err := NewParams_Harvest(s.Struct.Segment())
	if err != nil {
		return Params_Harvest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_AutomaticHarvest) MinPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_AutomaticHarvest) SetMinPercentASW(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) MaxPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(8) ^ 0x4059000000000000)
}

func (s Params_AutomaticHarvest) SetMaxPercentASW(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v)^0x4059000000000000)
}

func (s Params_AutomaticHarvest) Max3dayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticHarvest) SetMax3dayPrecipSum(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) MaxCurrentDayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_AutomaticHarvest) SetMaxCurrentDayPrecipSum(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) HarvestTime() Event_PhenoStage {
	return Event_PhenoStage(s.Struct.Uint16(32) ^ 3)
}

func (s Params_AutomaticHarvest) SetHarvestTime(v Event_PhenoStage) {
	s.Struct.SetUint16(32, uint16(v)^3)
}

// Params_AutomaticHarvest_List is a list of Params_AutomaticHarvest.
type Params_AutomaticHarvest_List struct{ capnp.List }

// NewParams_AutomaticHarvest creates a new list of Params_AutomaticHarvest.
func NewParams_AutomaticHarvest_List(s *capnp.Segment, sz int32) (Params_AutomaticHarvest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1}, sz)
	return Params_AutomaticHarvest_List{l}, err
}

func (s Params_AutomaticHarvest_List) At(i int) Params_AutomaticHarvest {
	return Params_AutomaticHarvest{s.List.Struct(i)}
}

func (s Params_AutomaticHarvest_List) Set(i int, v Params_AutomaticHarvest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticHarvest_List) String() string {
	str, _ := text.MarshalList(0xe3a37e340f816cd1, s.List)
	return str
}

// Params_AutomaticHarvest_Future is a wrapper for a Params_AutomaticHarvest promised by a client call.
type Params_AutomaticHarvest_Future struct{ *capnp.Future }

func (p Params_AutomaticHarvest_Future) Struct() (Params_AutomaticHarvest, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticHarvest{s}, err
}

func (p Params_AutomaticHarvest_Future) Harvest() Params_Harvest_Future {
	return Params_Harvest_Future{Future: p.Future.Field(0, nil)}
}

type Params_Cutting struct{ capnp.Struct }

// Params_Cutting_TypeID is the unique identifier for the type Params_Cutting.
const Params_Cutting_TypeID = 0xfec75f2ddd43431d

func NewParams_Cutting(s *capnp.Segment) (Params_Cutting, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Cutting{st}, err
}

func NewRootParams_Cutting(s *capnp.Segment) (Params_Cutting, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Cutting{st}, err
}

func ReadRootParams_Cutting(msg *capnp.Message) (Params_Cutting, error) {
	root, err := msg.Root()
	return Params_Cutting{root.Struct()}, err
}

func (s Params_Cutting) String() string {
	str, _ := text.Marshal(0xfec75f2ddd43431d, s.Struct)
	return str
}

func (s Params_Cutting) CuttingSpec() (Params_Cutting_Spec_List, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Cutting_Spec_List{List: p.List()}, err
}

func (s Params_Cutting) HasCuttingSpec() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Cutting) SetCuttingSpec(v Params_Cutting_Spec_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCuttingSpec sets the cuttingSpec field to a newly
// allocated Params_Cutting_Spec_List, preferring placement in s's segment.
func (s Params_Cutting) NewCuttingSpec(n int32) (Params_Cutting_Spec_List, error) {
	l, err := NewParams_Cutting_Spec_List(s.Struct.Segment(), n)
	if err != nil {
		return Params_Cutting_Spec_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Params_Cutting) CutMaxAssimilationRatePercentage() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Cutting) SetCutMaxAssimilationRatePercentage(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Params_Cutting_List is a list of Params_Cutting.
type Params_Cutting_List struct{ capnp.List }

// NewParams_Cutting creates a new list of Params_Cutting.
func NewParams_Cutting_List(s *capnp.Segment, sz int32) (Params_Cutting_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Cutting_List{l}, err
}

func (s Params_Cutting_List) At(i int) Params_Cutting { return Params_Cutting{s.List.Struct(i)} }

func (s Params_Cutting_List) Set(i int, v Params_Cutting) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Cutting_List) String() string {
	str, _ := text.MarshalList(0xfec75f2ddd43431d, s.List)
	return str
}

// Params_Cutting_Future is a wrapper for a Params_Cutting promised by a client call.
type Params_Cutting_Future struct{ *capnp.Future }

func (p Params_Cutting_Future) Struct() (Params_Cutting, error) {
	s, err := p.Future.Struct()
	return Params_Cutting{s}, err
}

type Params_Cutting_CL uint16

// Params_Cutting_CL_TypeID is the unique identifier for the type Params_Cutting_CL.
const Params_Cutting_CL_TypeID = 0x825bb2508c0b37b2

// Values of Params_Cutting_CL.
const (
	Params_Cutting_CL_cut  Params_Cutting_CL = 0
	Params_Cutting_CL_left Params_Cutting_CL = 1
)

// String returns the enum's constant name.
func (c Params_Cutting_CL) String() string {
	switch c {
	case Params_Cutting_CL_cut:
		return "cut"
	case Params_Cutting_CL_left:
		return "left"

	default:
		return ""
	}
}

// Params_Cutting_CLFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Cutting_CLFromString(c string) Params_Cutting_CL {
	switch c {
	case "cut":
		return Params_Cutting_CL_cut
	case "left":
		return Params_Cutting_CL_left

	default:
		return 0
	}
}

type Params_Cutting_CL_List struct{ capnp.List }

func NewParams_Cutting_CL_List(s *capnp.Segment, sz int32) (Params_Cutting_CL_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Cutting_CL_List{l.List}, err
}

func (l Params_Cutting_CL_List) At(i int) Params_Cutting_CL {
	ul := capnp.UInt16List{List: l.List}
	return Params_Cutting_CL(ul.At(i))
}

func (l Params_Cutting_CL_List) Set(i int, v Params_Cutting_CL) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Cutting_Unit uint16

// Params_Cutting_Unit_TypeID is the unique identifier for the type Params_Cutting_Unit.
const Params_Cutting_Unit_TypeID = 0xf0c763e472409ba2

// Values of Params_Cutting_Unit.
const (
	Params_Cutting_Unit_percentage Params_Cutting_Unit = 0
	Params_Cutting_Unit_biomass    Params_Cutting_Unit = 1
	Params_Cutting_Unit_lai        Params_Cutting_Unit = 2
)

// String returns the enum's constant name.
func (c Params_Cutting_Unit) String() string {
	switch c {
	case Params_Cutting_Unit_percentage:
		return "percentage"
	case Params_Cutting_Unit_biomass:
		return "biomass"
	case Params_Cutting_Unit_lai:
		return "lai"

	default:
		return ""
	}
}

// Params_Cutting_UnitFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Cutting_UnitFromString(c string) Params_Cutting_Unit {
	switch c {
	case "percentage":
		return Params_Cutting_Unit_percentage
	case "biomass":
		return Params_Cutting_Unit_biomass
	case "lai":
		return Params_Cutting_Unit_lai

	default:
		return 0
	}
}

type Params_Cutting_Unit_List struct{ capnp.List }

func NewParams_Cutting_Unit_List(s *capnp.Segment, sz int32) (Params_Cutting_Unit_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Cutting_Unit_List{l.List}, err
}

func (l Params_Cutting_Unit_List) At(i int) Params_Cutting_Unit {
	ul := capnp.UInt16List{List: l.List}
	return Params_Cutting_Unit(ul.At(i))
}

func (l Params_Cutting_Unit_List) Set(i int, v Params_Cutting_Unit) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Cutting_Spec struct{ capnp.Struct }

// Params_Cutting_Spec_TypeID is the unique identifier for the type Params_Cutting_Spec.
const Params_Cutting_Spec_TypeID = 0x9a221e04faf79efc

func NewParams_Cutting_Spec(s *capnp.Segment) (Params_Cutting_Spec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_Cutting_Spec{st}, err
}

func NewRootParams_Cutting_Spec(s *capnp.Segment) (Params_Cutting_Spec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_Cutting_Spec{st}, err
}

func ReadRootParams_Cutting_Spec(msg *capnp.Message) (Params_Cutting_Spec, error) {
	root, err := msg.Root()
	return Params_Cutting_Spec{root.Struct()}, err
}

func (s Params_Cutting_Spec) String() string {
	str, _ := text.Marshal(0x9a221e04faf79efc, s.Struct)
	return str
}

func (s Params_Cutting_Spec) Organ() PlantOrgan {
	return PlantOrgan(s.Struct.Uint16(0))
}

func (s Params_Cutting_Spec) SetOrgan(v PlantOrgan) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Params_Cutting_Spec) Value() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Cutting_Spec) SetValue(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_Cutting_Spec) Unit() Params_Cutting_Unit {
	return Params_Cutting_Unit(s.Struct.Uint16(2))
}

func (s Params_Cutting_Spec) SetUnit(v Params_Cutting_Unit) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Params_Cutting_Spec) CutOrLeft() Params_Cutting_CL {
	return Params_Cutting_CL(s.Struct.Uint16(4))
}

func (s Params_Cutting_Spec) SetCutOrLeft(v Params_Cutting_CL) {
	s.Struct.SetUint16(4, uint16(v))
}

func (s Params_Cutting_Spec) ExportPercentage() float64 {
	return math.Float64frombits(s.Struct.Uint64(16) ^ 0x4059000000000000)
}

func (s Params_Cutting_Spec) SetExportPercentage(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v)^0x4059000000000000)
}

// Params_Cutting_Spec_List is a list of Params_Cutting_Spec.
type Params_Cutting_Spec_List struct{ capnp.List }

// NewParams_Cutting_Spec creates a new list of Params_Cutting_Spec.
func NewParams_Cutting_Spec_List(s *capnp.Segment, sz int32) (Params_Cutting_Spec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_Cutting_Spec_List{l}, err
}

func (s Params_Cutting_Spec_List) At(i int) Params_Cutting_Spec {
	return Params_Cutting_Spec{s.List.Struct(i)}
}

func (s Params_Cutting_Spec_List) Set(i int, v Params_Cutting_Spec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Cutting_Spec_List) String() string {
	str, _ := text.MarshalList(0x9a221e04faf79efc, s.List)
	return str
}

// Params_Cutting_Spec_Future is a wrapper for a Params_Cutting_Spec promised by a client call.
type Params_Cutting_Spec_Future struct{ *capnp.Future }

func (p Params_Cutting_Spec_Future) Struct() (Params_Cutting_Spec, error) {
	s, err := p.Future.Struct()
	return Params_Cutting_Spec{s}, err
}

type Params_MineralFertilization struct{ capnp.Struct }

// Params_MineralFertilization_TypeID is the unique identifier for the type Params_MineralFertilization.
const Params_MineralFertilization_TypeID = 0xd3da30ea7b25d921

func NewParams_MineralFertilization(s *capnp.Segment) (Params_MineralFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_MineralFertilization{st}, err
}

func NewRootParams_MineralFertilization(s *capnp.Segment) (Params_MineralFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_MineralFertilization{st}, err
}

func ReadRootParams_MineralFertilization(msg *capnp.Message) (Params_MineralFertilization, error) {
	root, err := msg.Root()
	return Params_MineralFertilization{root.Struct()}, err
}

func (s Params_MineralFertilization) String() string {
	str, _ := text.Marshal(0xd3da30ea7b25d921, s.Struct)
	return str
}

func (s Params_MineralFertilization) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_MineralFertilization) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_MineralFertilization) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_MineralFertilization) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_MineralFertilization) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_MineralFertilization) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Params_MineralFertilization_List is a list of Params_MineralFertilization.
type Params_MineralFertilization_List struct{ capnp.List }

// NewParams_MineralFertilization creates a new list of Params_MineralFertilization.
func NewParams_MineralFertilization_List(s *capnp.Segment, sz int32) (Params_MineralFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_MineralFertilization_List{l}, err
}

func (s Params_MineralFertilization_List) At(i int) Params_MineralFertilization {
	return Params_MineralFertilization{s.List.Struct(i)}
}

func (s Params_MineralFertilization_List) Set(i int, v Params_MineralFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_MineralFertilization_List) String() string {
	str, _ := text.MarshalList(0xd3da30ea7b25d921, s.List)
	return str
}

// Params_MineralFertilization_Future is a wrapper for a Params_MineralFertilization promised by a client call.
type Params_MineralFertilization_Future struct{ *capnp.Future }

func (p Params_MineralFertilization_Future) Struct() (Params_MineralFertilization, error) {
	s, err := p.Future.Struct()
	return Params_MineralFertilization{s}, err
}

func (p Params_MineralFertilization_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_MineralFertilization_Parameters struct{ capnp.Struct }

// Params_MineralFertilization_Parameters_TypeID is the unique identifier for the type Params_MineralFertilization_Parameters.
const Params_MineralFertilization_Parameters_TypeID = 0xfcd78361390515e1

func NewParams_MineralFertilization_Parameters(s *capnp.Segment) (Params_MineralFertilization_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return Params_MineralFertilization_Parameters{st}, err
}

func NewRootParams_MineralFertilization_Parameters(s *capnp.Segment) (Params_MineralFertilization_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return Params_MineralFertilization_Parameters{st}, err
}

func ReadRootParams_MineralFertilization_Parameters(msg *capnp.Message) (Params_MineralFertilization_Parameters, error) {
	root, err := msg.Root()
	return Params_MineralFertilization_Parameters{root.Struct()}, err
}

func (s Params_MineralFertilization_Parameters) String() string {
	str, _ := text.Marshal(0xfcd78361390515e1, s.Struct)
	return str
}

func (s Params_MineralFertilization_Parameters) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Params_MineralFertilization_Parameters) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_MineralFertilization_Parameters) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Params_MineralFertilization_Parameters) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Params_MineralFertilization_Parameters) Name() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Params_MineralFertilization_Parameters) HasName() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_MineralFertilization_Parameters) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Params_MineralFertilization_Parameters) SetName(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Params_MineralFertilization_Parameters) Carbamid() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_MineralFertilization_Parameters) SetCarbamid(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_MineralFertilization_Parameters) Nh4() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_MineralFertilization_Parameters) SetNh4(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_MineralFertilization_Parameters) No3() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_MineralFertilization_Parameters) SetNo3(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// Params_MineralFertilization_Parameters_List is a list of Params_MineralFertilization_Parameters.
type Params_MineralFertilization_Parameters_List struct{ capnp.List }

// NewParams_MineralFertilization_Parameters creates a new list of Params_MineralFertilization_Parameters.
func NewParams_MineralFertilization_Parameters_List(s *capnp.Segment, sz int32) (Params_MineralFertilization_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2}, sz)
	return Params_MineralFertilization_Parameters_List{l}, err
}

func (s Params_MineralFertilization_Parameters_List) At(i int) Params_MineralFertilization_Parameters {
	return Params_MineralFertilization_Parameters{s.List.Struct(i)}
}

func (s Params_MineralFertilization_Parameters_List) Set(i int, v Params_MineralFertilization_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_MineralFertilization_Parameters_List) String() string {
	str, _ := text.MarshalList(0xfcd78361390515e1, s.List)
	return str
}

// Params_MineralFertilization_Parameters_Future is a wrapper for a Params_MineralFertilization_Parameters promised by a client call.
type Params_MineralFertilization_Parameters_Future struct{ *capnp.Future }

func (p Params_MineralFertilization_Parameters_Future) Struct() (Params_MineralFertilization_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_MineralFertilization_Parameters{s}, err
}

type Params_NDemandFertilization struct{ capnp.Struct }

// Params_NDemandFertilization_TypeID is the unique identifier for the type Params_NDemandFertilization.
const Params_NDemandFertilization_TypeID = 0x953375ac67d4f573

func NewParams_NDemandFertilization(s *capnp.Segment) (Params_NDemandFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Params_NDemandFertilization{st}, err
}

func NewRootParams_NDemandFertilization(s *capnp.Segment) (Params_NDemandFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Params_NDemandFertilization{st}, err
}

func ReadRootParams_NDemandFertilization(msg *capnp.Message) (Params_NDemandFertilization, error) {
	root, err := msg.Root()
	return Params_NDemandFertilization{root.Struct()}, err
}

func (s Params_NDemandFertilization) String() string {
	str, _ := text.Marshal(0x953375ac67d4f573, s.Struct)
	return str
}

func (s Params_NDemandFertilization) NDemand() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_NDemandFertilization) SetNDemand(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_NDemandFertilization) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_NDemandFertilization) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_NDemandFertilization) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_NDemandFertilization) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_NDemandFertilization) Depth() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_NDemandFertilization) SetDepth(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_NDemandFertilization) Stage() uint8 {
	return s.Struct.Uint8(16) ^ 1
}

func (s Params_NDemandFertilization) SetStage(v uint8) {
	s.Struct.SetUint8(16, v^1)
}

// Params_NDemandFertilization_List is a list of Params_NDemandFertilization.
type Params_NDemandFertilization_List struct{ capnp.List }

// NewParams_NDemandFertilization creates a new list of Params_NDemandFertilization.
func NewParams_NDemandFertilization_List(s *capnp.Segment, sz int32) (Params_NDemandFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1}, sz)
	return Params_NDemandFertilization_List{l}, err
}

func (s Params_NDemandFertilization_List) At(i int) Params_NDemandFertilization {
	return Params_NDemandFertilization{s.List.Struct(i)}
}

func (s Params_NDemandFertilization_List) Set(i int, v Params_NDemandFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_NDemandFertilization_List) String() string {
	str, _ := text.MarshalList(0x953375ac67d4f573, s.List)
	return str
}

// Params_NDemandFertilization_Future is a wrapper for a Params_NDemandFertilization promised by a client call.
type Params_NDemandFertilization_Future struct{ *capnp.Future }

func (p Params_NDemandFertilization_Future) Struct() (Params_NDemandFertilization, error) {
	s, err := p.Future.Struct()
	return Params_NDemandFertilization{s}, err
}

func (p Params_NDemandFertilization_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_OrganicFertilization struct{ capnp.Struct }

// Params_OrganicFertilization_TypeID is the unique identifier for the type Params_OrganicFertilization.
const Params_OrganicFertilization_TypeID = 0xe98c76fb0fb0b2cd

func NewParams_OrganicFertilization(s *capnp.Segment) (Params_OrganicFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Params_OrganicFertilization{st}, err
}

func NewRootParams_OrganicFertilization(s *capnp.Segment) (Params_OrganicFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Params_OrganicFertilization{st}, err
}

func ReadRootParams_OrganicFertilization(msg *capnp.Message) (Params_OrganicFertilization, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization{root.Struct()}, err
}

func (s Params_OrganicFertilization) String() string {
	str, _ := text.Marshal(0xe98c76fb0fb0b2cd, s.Struct)
	return str
}

func (s Params_OrganicFertilization) Params() (Params_OrganicFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_OrganicFertilization) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_OrganicFertilization) SetParams(v Params_OrganicFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_OrganicFertilization) NewParams() (Params_OrganicFertilization_Parameters, error) {
	ss, err := NewParams_OrganicFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_OrganicFertilization) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_OrganicFertilization) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_OrganicFertilization) Incorporation() bool {
	return s.Struct.Bit(64)
}

func (s Params_OrganicFertilization) SetIncorporation(v bool) {
	s.Struct.SetBit(64, v)
}

// Params_OrganicFertilization_List is a list of Params_OrganicFertilization.
type Params_OrganicFertilization_List struct{ capnp.List }

// NewParams_OrganicFertilization creates a new list of Params_OrganicFertilization.
func NewParams_OrganicFertilization_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Params_OrganicFertilization_List{l}, err
}

func (s Params_OrganicFertilization_List) At(i int) Params_OrganicFertilization {
	return Params_OrganicFertilization{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_List) Set(i int, v Params_OrganicFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_List) String() string {
	str, _ := text.MarshalList(0xe98c76fb0fb0b2cd, s.List)
	return str
}

// Params_OrganicFertilization_Future is a wrapper for a Params_OrganicFertilization promised by a client call.
type Params_OrganicFertilization_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_Future) Struct() (Params_OrganicFertilization, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization{s}, err
}

func (p Params_OrganicFertilization_Future) Params() Params_OrganicFertilization_Parameters_Future {
	return Params_OrganicFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_OrganicFertilization_OrganicMatterParameters struct{ capnp.Struct }

// Params_OrganicFertilization_OrganicMatterParameters_TypeID is the unique identifier for the type Params_OrganicFertilization_OrganicMatterParameters.
const Params_OrganicFertilization_OrganicMatterParameters_TypeID = 0x962b157a9dc85681

func NewParams_OrganicFertilization_OrganicMatterParameters(s *capnp.Segment) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0})
	return Params_OrganicFertilization_OrganicMatterParameters{st}, err
}

func NewRootParams_OrganicFertilization_OrganicMatterParameters(s *capnp.Segment) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0})
	return Params_OrganicFertilization_OrganicMatterParameters{st}, err
}

func ReadRootParams_OrganicFertilization_OrganicMatterParameters(msg *capnp.Message) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization_OrganicMatterParameters{root.Struct()}, err
}

func (s Params_OrganicFertilization_OrganicMatterParameters) String() string {
	str, _ := text.Marshal(0x962b157a9dc85681, s.Struct)
	return str
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomDryMatterContent() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomDryMatterContent(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomNH4Content() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomNH4Content(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomNO3Content() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomNO3Content(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomCarbamidContent() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomCarbamidContent(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomSlowDecCoeffStandard() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomSlowDecCoeffStandard(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomFastDecCoeffStandard() float64 {
	return math.Float64frombits(s.Struct.Uint64(40))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomFastDecCoeffStandard(v float64) {
	s.Struct.SetUint64(40, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMToAOMSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(48))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMToAOMSlow(v float64) {
	s.Struct.SetUint64(48, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMToAOMFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(56))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMToAOMFast(v float64) {
	s.Struct.SetUint64(56, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) CnRatioAOMSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(64))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetCnRatioAOMSlow(v float64) {
	s.Struct.SetUint64(64, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) CnRatioAOMFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(72))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetCnRatioAOMFast(v float64) {
	s.Struct.SetUint64(72, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMSlowToSMBSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(80))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMSlowToSMBSlow(v float64) {
	s.Struct.SetUint64(80, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMSlowToSMBFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(88))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMSlowToSMBFast(v float64) {
	s.Struct.SetUint64(88, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) NConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(96))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetNConcentration(v float64) {
	s.Struct.SetUint64(96, math.Float64bits(v))
}

// Params_OrganicFertilization_OrganicMatterParameters_List is a list of Params_OrganicFertilization_OrganicMatterParameters.
type Params_OrganicFertilization_OrganicMatterParameters_List struct{ capnp.List }

// NewParams_OrganicFertilization_OrganicMatterParameters creates a new list of Params_OrganicFertilization_OrganicMatterParameters.
func NewParams_OrganicFertilization_OrganicMatterParameters_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_OrganicMatterParameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0}, sz)
	return Params_OrganicFertilization_OrganicMatterParameters_List{l}, err
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) At(i int) Params_OrganicFertilization_OrganicMatterParameters {
	return Params_OrganicFertilization_OrganicMatterParameters{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) Set(i int, v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) String() string {
	str, _ := text.MarshalList(0x962b157a9dc85681, s.List)
	return str
}

// Params_OrganicFertilization_OrganicMatterParameters_Future is a wrapper for a Params_OrganicFertilization_OrganicMatterParameters promised by a client call.
type Params_OrganicFertilization_OrganicMatterParameters_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_OrganicMatterParameters_Future) Struct() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization_OrganicMatterParameters{s}, err
}

type Params_OrganicFertilization_Parameters struct{ capnp.Struct }

// Params_OrganicFertilization_Parameters_TypeID is the unique identifier for the type Params_OrganicFertilization_Parameters.
const Params_OrganicFertilization_Parameters_TypeID = 0xb0919989cca2fd9a

func NewParams_OrganicFertilization_Parameters(s *capnp.Segment) (Params_OrganicFertilization_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Params_OrganicFertilization_Parameters{st}, err
}

func NewRootParams_OrganicFertilization_Parameters(s *capnp.Segment) (Params_OrganicFertilization_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Params_OrganicFertilization_Parameters{st}, err
}

func ReadRootParams_OrganicFertilization_Parameters(msg *capnp.Message) (Params_OrganicFertilization_Parameters, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization_Parameters{root.Struct()}, err
}

func (s Params_OrganicFertilization_Parameters) String() string {
	str, _ := text.Marshal(0xb0919989cca2fd9a, s.Struct)
	return str
}

func (s Params_OrganicFertilization_Parameters) Params() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_OrganicMatterParameters{Struct: p.Struct()}, err
}

func (s Params_OrganicFertilization_Parameters) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_OrganicFertilization_Parameters) SetParams(v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_OrganicMatterParameters struct, preferring placement in s's segment.
func (s Params_OrganicFertilization_Parameters) NewParams() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	ss, err := NewParams_OrganicFertilization_OrganicMatterParameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_OrganicMatterParameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_OrganicFertilization_Parameters) Id() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Params_OrganicFertilization_Parameters) HasId() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_OrganicFertilization_Parameters) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Params_OrganicFertilization_Parameters) SetId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Params_OrganicFertilization_Parameters) Name() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Params_OrganicFertilization_Parameters) HasName() bool {
	return s.Struct.HasPtr(2)
}

func (s Params_OrganicFertilization_Parameters) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Params_OrganicFertilization_Parameters) SetName(v string) error {
	return s.Struct.SetText(2, v)
}

// Params_OrganicFertilization_Parameters_List is a list of Params_OrganicFertilization_Parameters.
type Params_OrganicFertilization_Parameters_List struct{ capnp.List }

// NewParams_OrganicFertilization_Parameters creates a new list of Params_OrganicFertilization_Parameters.
func NewParams_OrganicFertilization_Parameters_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Params_OrganicFertilization_Parameters_List{l}, err
}

func (s Params_OrganicFertilization_Parameters_List) At(i int) Params_OrganicFertilization_Parameters {
	return Params_OrganicFertilization_Parameters{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_Parameters_List) Set(i int, v Params_OrganicFertilization_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_Parameters_List) String() string {
	str, _ := text.MarshalList(0xb0919989cca2fd9a, s.List)
	return str
}

// Params_OrganicFertilization_Parameters_Future is a wrapper for a Params_OrganicFertilization_Parameters promised by a client call.
type Params_OrganicFertilization_Parameters_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_Parameters_Future) Struct() (Params_OrganicFertilization_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization_Parameters{s}, err
}

func (p Params_OrganicFertilization_Parameters_Future) Params() Params_OrganicFertilization_OrganicMatterParameters_Future {
	return Params_OrganicFertilization_OrganicMatterParameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_Tillage struct{ capnp.Struct }

// Params_Tillage_TypeID is the unique identifier for the type Params_Tillage.
const Params_Tillage_TypeID = 0x88a5848ef8603554

func NewParams_Tillage(s *capnp.Segment) (Params_Tillage, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Params_Tillage{st}, err
}

func NewRootParams_Tillage(s *capnp.Segment) (Params_Tillage, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Params_Tillage{st}, err
}

func ReadRootParams_Tillage(msg *capnp.Message) (Params_Tillage, error) {
	root, err := msg.Root()
	return Params_Tillage{root.Struct()}, err
}

func (s Params_Tillage) String() string {
	str, _ := text.Marshal(0x88a5848ef8603554, s.Struct)
	return str
}

func (s Params_Tillage) Depth() float64 {
	return math.Float64frombits(s.Struct.Uint64(0) ^ 0x3fd3333333333333)
}

func (s Params_Tillage) SetDepth(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v)^0x3fd3333333333333)
}

// Params_Tillage_List is a list of Params_Tillage.
type Params_Tillage_List struct{ capnp.List }

// NewParams_Tillage creates a new list of Params_Tillage.
func NewParams_Tillage_List(s *capnp.Segment, sz int32) (Params_Tillage_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Params_Tillage_List{l}, err
}

func (s Params_Tillage_List) At(i int) Params_Tillage { return Params_Tillage{s.List.Struct(i)} }

func (s Params_Tillage_List) Set(i int, v Params_Tillage) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Tillage_List) String() string {
	str, _ := text.MarshalList(0x88a5848ef8603554, s.List)
	return str
}

// Params_Tillage_Future is a wrapper for a Params_Tillage promised by a client call.
type Params_Tillage_Future struct{ *capnp.Future }

func (p Params_Tillage_Future) Struct() (Params_Tillage, error) {
	s, err := p.Future.Struct()
	return Params_Tillage{s}, err
}

type Params_Irrigation struct{ capnp.Struct }

// Params_Irrigation_TypeID is the unique identifier for the type Params_Irrigation.
const Params_Irrigation_TypeID = 0x87feb816363ff43c

func NewParams_Irrigation(s *capnp.Segment) (Params_Irrigation, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Irrigation{st}, err
}

func NewRootParams_Irrigation(s *capnp.Segment) (Params_Irrigation, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Irrigation{st}, err
}

func ReadRootParams_Irrigation(msg *capnp.Message) (Params_Irrigation, error) {
	root, err := msg.Root()
	return Params_Irrigation{root.Struct()}, err
}

func (s Params_Irrigation) String() string {
	str, _ := text.Marshal(0x87feb816363ff43c, s.Struct)
	return str
}

func (s Params_Irrigation) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Irrigation) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_Irrigation) Params() (Params_Irrigation_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Irrigation_Parameters{Struct: p.Struct()}, err
}

func (s Params_Irrigation) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Irrigation) SetParams(v Params_Irrigation_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_Irrigation_Parameters struct, preferring placement in s's segment.
func (s Params_Irrigation) NewParams() (Params_Irrigation_Parameters, error) {
	ss, err := NewParams_Irrigation_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_Irrigation_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_Irrigation_List is a list of Params_Irrigation.
type Params_Irrigation_List struct{ capnp.List }

// NewParams_Irrigation creates a new list of Params_Irrigation.
func NewParams_Irrigation_List(s *capnp.Segment, sz int32) (Params_Irrigation_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Irrigation_List{l}, err
}

func (s Params_Irrigation_List) At(i int) Params_Irrigation {
	return Params_Irrigation{s.List.Struct(i)}
}

func (s Params_Irrigation_List) Set(i int, v Params_Irrigation) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Irrigation_List) String() string {
	str, _ := text.MarshalList(0x87feb816363ff43c, s.List)
	return str
}

// Params_Irrigation_Future is a wrapper for a Params_Irrigation promised by a client call.
type Params_Irrigation_Future struct{ *capnp.Future }

func (p Params_Irrigation_Future) Struct() (Params_Irrigation, error) {
	s, err := p.Future.Struct()
	return Params_Irrigation{s}, err
}

func (p Params_Irrigation_Future) Params() Params_Irrigation_Parameters_Future {
	return Params_Irrigation_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_Irrigation_Parameters struct{ capnp.Struct }

// Params_Irrigation_Parameters_TypeID is the unique identifier for the type Params_Irrigation_Parameters.
const Params_Irrigation_Parameters_TypeID = 0xb991be9572278e2d

func NewParams_Irrigation_Parameters(s *capnp.Segment) (Params_Irrigation_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Params_Irrigation_Parameters{st}, err
}

func NewRootParams_Irrigation_Parameters(s *capnp.Segment) (Params_Irrigation_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Params_Irrigation_Parameters{st}, err
}

func ReadRootParams_Irrigation_Parameters(msg *capnp.Message) (Params_Irrigation_Parameters, error) {
	root, err := msg.Root()
	return Params_Irrigation_Parameters{root.Struct()}, err
}

func (s Params_Irrigation_Parameters) String() string {
	str, _ := text.Marshal(0xb991be9572278e2d, s.Struct)
	return str
}

func (s Params_Irrigation_Parameters) NitrateConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Irrigation_Parameters) SetNitrateConcentration(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_Irrigation_Parameters) SulfateConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Irrigation_Parameters) SetSulfateConcentration(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// Params_Irrigation_Parameters_List is a list of Params_Irrigation_Parameters.
type Params_Irrigation_Parameters_List struct{ capnp.List }

// NewParams_Irrigation_Parameters creates a new list of Params_Irrigation_Parameters.
func NewParams_Irrigation_Parameters_List(s *capnp.Segment, sz int32) (Params_Irrigation_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Params_Irrigation_Parameters_List{l}, err
}

func (s Params_Irrigation_Parameters_List) At(i int) Params_Irrigation_Parameters {
	return Params_Irrigation_Parameters{s.List.Struct(i)}
}

func (s Params_Irrigation_Parameters_List) Set(i int, v Params_Irrigation_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Irrigation_Parameters_List) String() string {
	str, _ := text.MarshalList(0xb991be9572278e2d, s.List)
	return str
}

// Params_Irrigation_Parameters_Future is a wrapper for a Params_Irrigation_Parameters promised by a client call.
type Params_Irrigation_Parameters_Future struct{ *capnp.Future }

func (p Params_Irrigation_Parameters_Future) Struct() (Params_Irrigation_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_Irrigation_Parameters{s}, err
}

type FertilizerService struct{ Client *capnp.Client }

// FertilizerService_TypeID is the unique identifier for the type FertilizerService.
const FertilizerService_TypeID = 0xbbb7aeae0d097e05

func (c FertilizerService) MineralFertilizerPartitionFor(ctx context.Context, params func(FertilizerService_mineralFertilizerPartitionFor_Params) error) (FertilizerService_mineralFertilizerPartitionFor_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbbb7aeae0d097e05,
			MethodID:      0,
			InterfaceName: "management.capnp:FertilizerService",
			MethodName:    "mineralFertilizerPartitionFor",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_mineralFertilizerPartitionFor_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_mineralFertilizerPartitionFor_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) OrganicFertilizerParametersFor(ctx context.Context, params func(FertilizerService_organicFertilizerParametersFor_Params) error) (FertilizerService_organicFertilizerParametersFor_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbbb7aeae0d097e05,
			MethodID:      1,
			InterfaceName: "management.capnp:FertilizerService",
			MethodName:    "organicFertilizerParametersFor",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_organicFertilizerParametersFor_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_organicFertilizerParametersFor_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c FertilizerService) AddRef() FertilizerService {
	return FertilizerService{
		Client: c.Client.AddRef(),
	}
}

func (c FertilizerService) Release() {
	c.Client.Release()
}

// A FertilizerService_Server is a FertilizerService with a local implementation.
type FertilizerService_Server interface {
	MineralFertilizerPartitionFor(context.Context, FertilizerService_mineralFertilizerPartitionFor) error

	OrganicFertilizerParametersFor(context.Context, FertilizerService_organicFertilizerParametersFor) error

	Info(context.Context, common.Identifiable_info) error
}

// FertilizerService_NewServer creates a new Server from an implementation of FertilizerService_Server.
func FertilizerService_NewServer(s FertilizerService_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(FertilizerService_Methods(nil, s), s, c, policy)
}

// FertilizerService_ServerToClient creates a new Client from an implementation of FertilizerService_Server.
// The caller is responsible for calling Release on the returned Client.
func FertilizerService_ServerToClient(s FertilizerService_Server, policy *server.Policy) FertilizerService {
	return FertilizerService{Client: capnp.NewClient(FertilizerService_NewServer(s, policy))}
}

// FertilizerService_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func FertilizerService_Methods(methods []server.Method, s FertilizerService_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbbb7aeae0d097e05,
			MethodID:      0,
			InterfaceName: "management.capnp:FertilizerService",
			MethodName:    "mineralFertilizerPartitionFor",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MineralFertilizerPartitionFor(ctx, FertilizerService_mineralFertilizerPartitionFor{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbbb7aeae0d097e05,
			MethodID:      1,
			InterfaceName: "management.capnp:FertilizerService",
			MethodName:    "organicFertilizerParametersFor",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OrganicFertilizerParametersFor(ctx, FertilizerService_organicFertilizerParametersFor{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// FertilizerService_mineralFertilizerPartitionFor holds the state for a server call to FertilizerService.mineralFertilizerPartitionFor.
// See server.Call for documentation.
type FertilizerService_mineralFertilizerPartitionFor struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_mineralFertilizerPartitionFor) Args() FertilizerService_mineralFertilizerPartitionFor_Params {
	return FertilizerService_mineralFertilizerPartitionFor_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_mineralFertilizerPartitionFor) AllocResults() (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{Struct: r}, err
}

// FertilizerService_organicFertilizerParametersFor holds the state for a server call to FertilizerService.organicFertilizerParametersFor.
// See server.Call for documentation.
type FertilizerService_organicFertilizerParametersFor struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_organicFertilizerParametersFor) Args() FertilizerService_organicFertilizerParametersFor_Params {
	return FertilizerService_organicFertilizerParametersFor_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_organicFertilizerParametersFor) AllocResults() (FertilizerService_organicFertilizerParametersFor_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{Struct: r}, err
}

type FertilizerService_mineralFertilizerPartitionFor_Params struct{ capnp.Struct }

// FertilizerService_mineralFertilizerPartitionFor_Params_TypeID is the unique identifier for the type FertilizerService_mineralFertilizerPartitionFor_Params.
const FertilizerService_mineralFertilizerPartitionFor_Params_TypeID = 0xc5292994de2615c2

func NewFertilizerService_mineralFertilizerPartitionFor_Params(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_mineralFertilizerPartitionFor_Params{st}, err
}

func NewRootFertilizerService_mineralFertilizerPartitionFor_Params(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_mineralFertilizerPartitionFor_Params{st}, err
}

func ReadRootFertilizerService_mineralFertilizerPartitionFor_Params(msg *capnp.Message) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizerPartitionFor_Params{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) String() string {
	str, _ := text.Marshal(0xc5292994de2615c2, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) MinFert() MineralFertilizer {
	return MineralFertilizer(s.Struct.Uint16(0))
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) SetMinFert(v MineralFertilizer) {
	s.Struct.SetUint16(0, uint16(v))
}

// FertilizerService_mineralFertilizerPartitionFor_Params_List is a list of FertilizerService_mineralFertilizerPartitionFor_Params.
type FertilizerService_mineralFertilizerPartitionFor_Params_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizerPartitionFor_Params creates a new list of FertilizerService_mineralFertilizerPartitionFor_Params.
func NewFertilizerService_mineralFertilizerPartitionFor_Params_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizerPartitionFor_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FertilizerService_mineralFertilizerPartitionFor_Params_List{l}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) At(i int) FertilizerService_mineralFertilizerPartitionFor_Params {
	return FertilizerService_mineralFertilizerPartitionFor_Params{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) Set(i int, v FertilizerService_mineralFertilizerPartitionFor_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) String() string {
	str, _ := text.MarshalList(0xc5292994de2615c2, s.List)
	return str
}

// FertilizerService_mineralFertilizerPartitionFor_Params_Future is a wrapper for a FertilizerService_mineralFertilizerPartitionFor_Params promised by a client call.
type FertilizerService_mineralFertilizerPartitionFor_Params_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizerPartitionFor_Params_Future) Struct() (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizerPartitionFor_Params{s}, err
}

type FertilizerService_mineralFertilizerPartitionFor_Results struct{ capnp.Struct }

// FertilizerService_mineralFertilizerPartitionFor_Results_TypeID is the unique identifier for the type FertilizerService_mineralFertilizerPartitionFor_Results.
const FertilizerService_mineralFertilizerPartitionFor_Results_TypeID = 0x81b1cd5c7865e185

func NewFertilizerService_mineralFertilizerPartitionFor_Results(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{st}, err
}

func NewRootFertilizerService_mineralFertilizerPartitionFor_Results(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{st}, err
}

func ReadRootFertilizerService_mineralFertilizerPartitionFor_Results(msg *capnp.Message) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizerPartitionFor_Results{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) String() string {
	str, _ := text.Marshal(0x81b1cd5c7865e185, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_mineralFertilizerPartitionFor_Results) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_mineralFertilizerPartitionFor_Results_List is a list of FertilizerService_mineralFertilizerPartitionFor_Results.
type FertilizerService_mineralFertilizerPartitionFor_Results_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizerPartitionFor_Results creates a new list of FertilizerService_mineralFertilizerPartitionFor_Results.
func NewFertilizerService_mineralFertilizerPartitionFor_Results_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizerPartitionFor_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizerPartitionFor_Results_List{l}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) At(i int) FertilizerService_mineralFertilizerPartitionFor_Results {
	return FertilizerService_mineralFertilizerPartitionFor_Results{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) Set(i int, v FertilizerService_mineralFertilizerPartitionFor_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) String() string {
	str, _ := text.MarshalList(0x81b1cd5c7865e185, s.List)
	return str
}

// FertilizerService_mineralFertilizerPartitionFor_Results_Future is a wrapper for a FertilizerService_mineralFertilizerPartitionFor_Results promised by a client call.
type FertilizerService_mineralFertilizerPartitionFor_Results_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizerPartitionFor_Results_Future) Struct() (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizerPartitionFor_Results{s}, err
}

func (p FertilizerService_mineralFertilizerPartitionFor_Results_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type FertilizerService_organicFertilizerParametersFor_Params struct{ capnp.Struct }

// FertilizerService_organicFertilizerParametersFor_Params_TypeID is the unique identifier for the type FertilizerService_organicFertilizerParametersFor_Params.
const FertilizerService_organicFertilizerParametersFor_Params_TypeID = 0xb1c2fa546f41d480

func NewFertilizerService_organicFertilizerParametersFor_Params(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_organicFertilizerParametersFor_Params{st}, err
}

func NewRootFertilizerService_organicFertilizerParametersFor_Params(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_organicFertilizerParametersFor_Params{st}, err
}

func ReadRootFertilizerService_organicFertilizerParametersFor_Params(msg *capnp.Message) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizerParametersFor_Params{root.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Params) String() string {
	str, _ := text.Marshal(0xb1c2fa546f41d480, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizerParametersFor_Params) OrgFert() OrganicFertilizer {
	return OrganicFertilizer(s.Struct.Uint16(0))
}

func (s FertilizerService_organicFertilizerParametersFor_Params) SetOrgFert(v OrganicFertilizer) {
	s.Struct.SetUint16(0, uint16(v))
}

// FertilizerService_organicFertilizerParametersFor_Params_List is a list of FertilizerService_organicFertilizerParametersFor_Params.
type FertilizerService_organicFertilizerParametersFor_Params_List struct{ capnp.List }

// NewFertilizerService_organicFertilizerParametersFor_Params creates a new list of FertilizerService_organicFertilizerParametersFor_Params.
func NewFertilizerService_organicFertilizerParametersFor_Params_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizerParametersFor_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FertilizerService_organicFertilizerParametersFor_Params_List{l}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) At(i int) FertilizerService_organicFertilizerParametersFor_Params {
	return FertilizerService_organicFertilizerParametersFor_Params{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) Set(i int, v FertilizerService_organicFertilizerParametersFor_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) String() string {
	str, _ := text.MarshalList(0xb1c2fa546f41d480, s.List)
	return str
}

// FertilizerService_organicFertilizerParametersFor_Params_Future is a wrapper for a FertilizerService_organicFertilizerParametersFor_Params promised by a client call.
type FertilizerService_organicFertilizerParametersFor_Params_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizerParametersFor_Params_Future) Struct() (FertilizerService_organicFertilizerParametersFor_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizerParametersFor_Params{s}, err
}

type FertilizerService_organicFertilizerParametersFor_Results struct{ capnp.Struct }

// FertilizerService_organicFertilizerParametersFor_Results_TypeID is the unique identifier for the type FertilizerService_organicFertilizerParametersFor_Results.
const FertilizerService_organicFertilizerParametersFor_Results_TypeID = 0xd801f16b6fa39a94

func NewFertilizerService_organicFertilizerParametersFor_Results(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{st}, err
}

func NewRootFertilizerService_organicFertilizerParametersFor_Results(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{st}, err
}

func ReadRootFertilizerService_organicFertilizerParametersFor_Results(msg *capnp.Message) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizerParametersFor_Results{root.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results) String() string {
	str, _ := text.Marshal(0xd801f16b6fa39a94, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizerParametersFor_Results) Params() (Params_OrganicFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizerParametersFor_Results) SetParams(v Params_OrganicFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_organicFertilizerParametersFor_Results) NewParams() (Params_OrganicFertilization_Parameters, error) {
	ss, err := NewParams_OrganicFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_organicFertilizerParametersFor_Results_List is a list of FertilizerService_organicFertilizerParametersFor_Results.
type FertilizerService_organicFertilizerParametersFor_Results_List struct{ capnp.List }

// NewFertilizerService_organicFertilizerParametersFor_Results creates a new list of FertilizerService_organicFertilizerParametersFor_Results.
func NewFertilizerService_organicFertilizerParametersFor_Results_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizerParametersFor_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizerParametersFor_Results_List{l}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) At(i int) FertilizerService_organicFertilizerParametersFor_Results {
	return FertilizerService_organicFertilizerParametersFor_Results{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) Set(i int, v FertilizerService_organicFertilizerParametersFor_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) String() string {
	str, _ := text.MarshalList(0xd801f16b6fa39a94, s.List)
	return str
}

// FertilizerService_organicFertilizerParametersFor_Results_Future is a wrapper for a FertilizerService_organicFertilizerParametersFor_Results promised by a client call.
type FertilizerService_organicFertilizerParametersFor_Results_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizerParametersFor_Results_Future) Struct() (FertilizerService_organicFertilizerParametersFor_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizerParametersFor_Results{s}, err
}

func (p FertilizerService_organicFertilizerParametersFor_Results_Future) Params() Params_OrganicFertilization_Parameters_Future {
	return Params_OrganicFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Service struct{ Client *capnp.Client }

// Service_TypeID is the unique identifier for the type Service.
const Service_TypeID = 0xc876b729b7d7f6d9

func (c Service) ManagementAt(ctx context.Context, params func(geo.LatLonCoord) error) (Service_managementAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc876b729b7d7f6d9,
			MethodID:      0,
			InterfaceName: "management.capnp:Service",
			MethodName:    "managementAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(geo.LatLonCoord{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Service_managementAt_Results_Future{Future: ans.Future()}, release
}
func (c Service) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c Service) AddRef() Service {
	return Service{
		Client: c.Client.AddRef(),
	}
}

func (c Service) Release() {
	c.Client.Release()
}

// A Service_Server is a Service with a local implementation.
type Service_Server interface {
	ManagementAt(context.Context, Service_managementAt) error

	Info(context.Context, common.Identifiable_info) error
}

// Service_NewServer creates a new Server from an implementation of Service_Server.
func Service_NewServer(s Service_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Service_Methods(nil, s), s, c, policy)
}

// Service_ServerToClient creates a new Client from an implementation of Service_Server.
// The caller is responsible for calling Release on the returned Client.
func Service_ServerToClient(s Service_Server, policy *server.Policy) Service {
	return Service{Client: capnp.NewClient(Service_NewServer(s, policy))}
}

// Service_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Service_Methods(methods []server.Method, s Service_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc876b729b7d7f6d9,
			MethodID:      0,
			InterfaceName: "management.capnp:Service",
			MethodName:    "managementAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ManagementAt(ctx, Service_managementAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// Service_managementAt holds the state for a server call to Service.managementAt.
// See server.Call for documentation.
type Service_managementAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Service_managementAt) Args() geo.LatLonCoord {
	return geo.LatLonCoord{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Service_managementAt) AllocResults() (Service_managementAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{Struct: r}, err
}

type Service_managementAt_Results struct{ capnp.Struct }

// Service_managementAt_Results_TypeID is the unique identifier for the type Service_managementAt_Results.
const Service_managementAt_Results_TypeID = 0xcca7748d367db151

func NewService_managementAt_Results(s *capnp.Segment) (Service_managementAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{st}, err
}

func NewRootService_managementAt_Results(s *capnp.Segment) (Service_managementAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{st}, err
}

func ReadRootService_managementAt_Results(msg *capnp.Message) (Service_managementAt_Results, error) {
	root, err := msg.Root()
	return Service_managementAt_Results{root.Struct()}, err
}

func (s Service_managementAt_Results) String() string {
	str, _ := text.Marshal(0xcca7748d367db151, s.Struct)
	return str
}

func (s Service_managementAt_Results) Mgmt() (Event_List, error) {
	p, err := s.Struct.Ptr(0)
	return Event_List{List: p.List()}, err
}

func (s Service_managementAt_Results) HasMgmt() bool {
	return s.Struct.HasPtr(0)
}

func (s Service_managementAt_Results) SetMgmt(v Event_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMgmt sets the mgmt field to a newly
// allocated Event_List, preferring placement in s's segment.
func (s Service_managementAt_Results) NewMgmt(n int32) (Event_List, error) {
	l, err := NewEvent_List(s.Struct.Segment(), n)
	if err != nil {
		return Event_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Service_managementAt_Results_List is a list of Service_managementAt_Results.
type Service_managementAt_Results_List struct{ capnp.List }

// NewService_managementAt_Results creates a new list of Service_managementAt_Results.
func NewService_managementAt_Results_List(s *capnp.Segment, sz int32) (Service_managementAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Service_managementAt_Results_List{l}, err
}

func (s Service_managementAt_Results_List) At(i int) Service_managementAt_Results {
	return Service_managementAt_Results{s.List.Struct(i)}
}

func (s Service_managementAt_Results_List) Set(i int, v Service_managementAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_managementAt_Results_List) String() string {
	str, _ := text.MarshalList(0xcca7748d367db151, s.List)
	return str
}

// Service_managementAt_Results_Future is a wrapper for a Service_managementAt_Results promised by a client call.
type Service_managementAt_Results_Future struct{ *capnp.Future }

func (p Service_managementAt_Results_Future) Struct() (Service_managementAt_Results, error) {
	s, err := p.Future.Struct()
	return Service_managementAt_Results{s}, err
}

const schema_b30a3af53cea6b3e = "x\xda\xccz\x7f\x94\x14Uv\xff\xbdU=\xf4\xfc\xa4" +
	"\xe7Y\xc3\x0e\xd3|\xa1e\x80\xaf0Y\x080\xb8." +
	"\xec\x9aa~\xc02\x84q\xa6\xa6\x87U\x10N\xac\xe9" +
	"y\xd3S\xd8]\xd5TU\xcf0\x06E\x88F\xf1\xc0" +
	"\x1a\x0c\xc4\xc5\xd5\x1c\xd4x\x0c\x1cvW]\x89`t" +
	"W9\x12\xf1WvQ8\xbbz\xe2&\xe8\x9a\xa8g" +
	"7\xd1\x9c\x98UW\xa9\x9c\xfb\xaa\xba\xab\xa6g\x06\xfd" +
	"cON8\x87\xd3\xdd\xf7\xdd\xbau\xdf}\xf7\xd7\xe7" +
	"\xbeY\xbc\xacj\xa5\xb4\xa4\xec\xe1:\x00\xf5\x83\xb2)" +
	"\xee\xbb\x87_\xf8F\xcb\xb4\x7f\xbc\x19\xd4\xe9\x88n\xfd" +
	"\x0b\xcb\xe6\xec\xdc>\xf7>(\xc3(\x80\xb2\xbc\xf2S" +
	"eU%}k\xad\xfc!\xa0{\xeby\xbem\xd3+" +
	"\x8f\xee\x046\x07\xc1\xe3i>_\xb9V\x02T>\xaf" +
	"l\x01t\x1f\xbb\xa2jO\xcfc\xd7\xee\x02v\xa9\xe4" +
	"\xcelo\x7fs\xe1\x9f<\x7f\x01\x00\x9bgW\xc5Q" +
	"YRE\xa2\x16V]\x01\xe8>\xb8\xf5\xda\xfa\x03\xab" +
	"\x1e\xde\x05\x8cI\xee\x1f]\xff\xfe7?ZQ\xf9#" +
	"\x00bzC\xb9\x92\x18\x9b\x97W]\x86\x80\xee\x89\xf2" +
	"c\xef\x7f|\xfc\xe8-\xa5\x9c\xcd5\xd5qTfV" +
	"\x13kC\xf5\xb7$@\xf7\x9b\xff\xd5\xf2\xb5\xaf\x1c\xbf" +
	"p\xdbD\x9bi\xbe\xb1&\x8e\xca\xde\x9az\x00\xe5`" +
	"\xcd\x08\xa0\xdbw\xf9u\x1f\x7f\xe7\x96\x87n/\xe1\x8e" +
	"\x10\xf3G5\x12*8\x95\xf4\xfd\xbc\x86v\xc6\xbfV" +
	"s\xea\xed\x1f\xfd\xdd\x1eP/\xc52\xf7?v\xb7=" +
	"r\xed;g\xff\xddc\x9e9\xf5.T.'\xe6\xe6" +
	"%S\xaf&\x9d\xed\xbf\xbc\xe6\xd2\xe7~\\}\xa7\xb0" +
	"C\x91\x19\xb0\xf9\xfb\xb1^T\x9e\x8d\x91\xdc\xa7cd" +
	"\x87e\x9f\xcdx\xea\xea\xfd\x87\xee\x04V/\xb9m\xa7" +
	"\xefI\x7f\xfe\x9b\xcd\xf7\x12\xe7+\xb1KPySp" +
	"\xbe\x1eK\x93\xcc\x8f\xce\xa6\x8f\xe6\x9b\x0f\x90\xbar\xe9" +
	"\xe6jj\xb7\xa02\xbb\x96\xb8g\xd6\xfe\x1b\xa0{\xf8" +
	"\xdc\xf3k\xcf\x1f_~\x00\xd4z\xc4@\xf0\xb4H\x14" +
	"\x01\x94\x8fj?\x05T>\xa9%3\xec\xfc\xf6\xe9\xfb" +
	"n\x98\xf6\x07\x7f\x05\xeaB\xacq_y\xec\x91\xd8\xef" +
	"\x86\xf7\xbc\xe7\xedl\x03k\x92\x94QF_\xf3\xec\x9f" +
	"\xc9\xc4\x9f\xfd\xf5o?\x8d\xccj\xbc\x87\xec \x07G" +
	",\xb8O\xd45\xa1\xf2B\x1d}=U\x97 ;\x14" +
	"\xdf\xab2\xc4\xe0\xf0VE\xa22\xa2r~\xda\x93\xca" +
	"{\xd3\xae\x00hf_\xb9\x93\xd8\x8b\x9bb,\xc4M" +
	"\xb2\x95\xce\xfa\x93\x8aZ\xff0\xc8\xee\xd0\xc7?[\xf7" +
	"\x93Ww\xde\x07\xea|\x94\xdd\xc7\xdf\xdf~\xd3\xc1\x8e" +
	"\x9f\xfe\xd4\xd3\xe0\x95\xfa\x07Py\xa7\x9e\x1e8_O" +
	"\x1e{\xcf\xe7\x0f\xbc\xbc\xfb\xe0\xbeG\x80-\xc4`o" +
	"e21\x1f\x98~\x12\x95\xefO'\xe6\xc3\xd3\x89\xf9" +
	"\xe6\xb3\xadf\xdf\xa7'\x1f\x05u\x0e\"x\x12[\x1b" +
	"\x84{on 'X\xf8\x9d\xcb\xac\x03?\xdew\x82" +
	"\x18\xa4\xc0\xdb\x04\xe3\x8d\x0d\x16*\xfb\x1aH\xda\xde\x06" +
	"\xb2k\xd9M\x155?\xf8\xc1\x13\x7f\x0f\x8c\xc9c\xfc" +
	"\xf6\x93\x868*\x15q\xe2,\x8b\xdf\xa6d\xe3\xf5\x00" +
	"\xee/\xdb\xae<^Wq\xee\xe4\xb8x\xd8\x1c\x7fK" +
	"\xd1\x053\x8f\xdf\x0d\xe8\x9e\x9c\xf6\xff\x7f\xb9\x7f\xc1\x82" +
	"Sa%\x0f\xc7\xdbH\xc9g\xe3\xa4$\xfb\xfa\xc7\x95" +
	"'j\xff\xfc\xd4\xc4'\x7f>\xfe>\xa0\xf2N\x9c4" +
	"\xfc\xc3\xcbf\xbc\x938\xf8\xdc?L\xcc\xd9:\xe3U" +
	"@e\xd5\x0c\x92\xf9\xfa\x7f\xff\xfc\x89\x05O\x0c\x9f." +
	"\xdd\x8b\xc2g\xbc\xa8l\x9dA\xdaeg|K98" +
	"\x83\xb6\xa2>z\xe3\xd7\xf6:\x0f\xbf\x0c\xac\xa1\x98%" +
	"v\xcf\xb0\x10P9 \xa4\x15\xcfL\x9d\x8e\xe5!O" +
	"\x96\x84\xe7\xcchC\xe5\x1c\x09j>?\xe3\x0ar\xb9" +
	"\xd9\xaf\xcf\xfb\xd3\xf7\x17\xbf\xf1\xda\x84Q\xbd~\xd6\x16" +
	"T\xf4Y\x14\xd5\xf9Y\xb4\xa9\xfd\xf7<h^\xff!" +
	"\xfe\"\x9c\xa3\xce\xcd\xea%\xfb|8\x8b\xde\xbe\xe1\xed" +
	"=\xf7\x9e\xb3\x7fs\xbed\xd7\x1dQ\x09Qa\x89\xb7" +
	"\x94\x99\x09\xdaOC\x82\xa4\x9d\xc9\xec\x8c-\xbb\xe9\xc1" +
	"\xb7\xe9\xdde\xe32Jb-*\xfb\x88\xbbyoB" +
	"\xc4}\xd1\xc3\xd4\xe9(\x95\xb2\x7ft\xe9\x16T*f" +
	"_\x06\xa0,\x98M\xfeVL\x0c\x13m\xec\xd4l\x09" +
	"\x953\x82\xfb\xc3\xd9\xa4\xca\xf7\xaa\x8fM]\xf8\xeb]" +
	"\x1f\x8c\xcb\x14\xeb\x1b\x1bQ\xe1\x8d\xa4\xb4\xd6\xf8[@" +
	"\xf7\x81\xef\xad\xb4~\x95z\xfe\x83qY\xb8fN\x13" +
	"*3\xe7\x88\xed\xcd\xe9\x06t\xbf\xf1\xc7[\x9e+?" +
	"\xb4\xe9\x93q\xb9u\xc9\x9c8*\xad\xc4\xd9|\xe5\x9c" +
	"\xdbhk\xe7\xa7\x95-\xd7\xfe\xec\xe7\x9fQ\x9a\x90\x83" +
	"3\xf1\x0em\xf6\xdc\x93\xa8,\x9fK_/\x9f+\"" +
	"\xbf\xf8\xda\x89\xf6\xd69OBe\xfd\xbc+\xe8\xd0\xe6" +
	"\x8d\xc0\xbbnV3\xb44\xcfr\xc9p\x16\xa5\xb4\x9c" +
	"\x91[\xd1\xa3YZ\xd6^\xd4\x924Gt#\xdd\x83" +
	"\xa8V\xcb\x11\x80\x08\x02\xb0Uk\x01\xd4\x0e\x19\xd5\x1e" +
	"\x09\x19b\x1d\"\"\xeb\xda\x02\xa0\xae\x93Q\xbdFB" +
	"\x94\xeaP\x02`\xeb\x9b\x00\xd4\x1e\x19\xd5M\x12\xba\xa9" +
	"|\xc6\xd1\x875\x0b\x000\xe6>\xfe\xd6@y\xef#" +
	";\xdf\x04@\x8c\x01\xba\xb9\x8cf8\x1d\xdc\x80\x98\xad" +
	";\xa3\x18\x05\x09\xa3\x80\xb1\x94e\xe6\x90\xb9\xb7l\xfa" +
	"\xc9\xdc\x07\xef\xde\xfb.q3\xc0\xa2\xbe\xe5E}W" +
	"s\xcb\xd13\xfa\x0d\xdcJrkXO\xf1EY\xdd" +
	"\xe0\x96\x96\x09\x16z4\xcb\xd1\x1d\xdd4V\x9b\xd6\xdc" +
	"^n\xe73\x8e\x0d\xa0F\x8a\xfb\xaa\xe9\x05P\xabe" +
	"T\xa7K\xe8\xe6|n@\x03k\x03\xeb\x03bmH" +
	"\x01\xb9\xd4`\xedy\xc7\xd1\x8d\xf4\"\xb9}\x1d\x19\xad" +
	"\\\xd8\x815\x0a\xc5+\x9a\x00\xa2\xa9\xbc\x13\xcb\xf0A" +
	"g\x02\x9b\xaf\x1a\xe6\x86\xd37*\xe78=\xbaX<" +
	"\xba{\x85xt\xe7.\x00\x94\xd8\x8dm\x00(\xb3\xfc" +
	"\x1d\x00\x18a\xf9\x8d\x00X\xc6\xb6\x12q\x0a\xd3\x8f\x00" +
	"`\xd4\xfb(\xf7>*\x98Nk\x95L[\x0b\x80U" +
	"ls/@\x8b-N\xd4\xd5\xf2\x8e\x99\xd5\x1c=\x92" +
	"\xf2\x8e\x18\x864k\x98\xdb\x0e\x14\x16Rk|\x02\xb8" +
	"\xbae\xe9i\xcd\xd1A6\x8d\x1d\x8e\x9e\xc9hi\xee" +
	"\x9aVZ3\xf4\xd4j\xf4\x0d\xac\xc5\xc8\xb6n\xc1\xec" +
	"%d\xa3\x83g5c\xa0\x84\xbc#\xe5\x99\xcb\xb5\xb9" +
	"\xf3m-\x93\xe7\x00\xe0\xda\xda0O:\x9a\x03\xc8'" +
	"\xb0s\xb7\xffZ_\x8e\xcc-2\xd6ud,\xa5\x01" +
	"\x85\xa1\x15\x86K\xc9\\J\x85\xf8-+(>#\xec" +
	"\x93Fa\xb0\x0f\x97\x0a\x83\xbd\xd7(\x0cv~\xa90" +
	"\xd8\xebqa\xb03qa\xb0\x17\x1a\x85\xc1\x9e\xa5\xb5" +
	"jv\x82~\xd5\xb0G\xe9c*;L\x1f1v?" +
	"\xad\xd5\xb2\x83\xf4\x8b\xb1}\xf4\xeb\x12\xb6\x9b~)l" +
	"'}\xd4\xb1Q\x126\x8dm\xa5\xb5\xaf0\x9d>\xea" +
	"\x99\x16\x07\x88j\xf6P\"\xa5\x0dd\xb2\xd1\x94F\xff" +
	"\xedhJ\xcb'\x06\xd2DI\x8f\xa4\x12C\xe6@&" +
	"+gSr\xd6\x8e\x9az*\x91\xd3i%\xa7\xd3\x7f" +
	";\x9a\xd3\xf3\x89\x9c\x9e\x1f\xb8>\x9a\xcb\x8c$r\xa6" +
	"X3\xb3Q\xdb\x1c\x95m;\xe1\xe4\x072\xd9\xc4\x08" +
	"\xe7\x03\xb6<bO\xee\xab\x9d\xfe\xb1\xca\xa6\xa1F0" +
	"T^\x19nt\x05\x0fw8\xc8\x96\xad\x96\x17cd" +
	"\xc1\x0a\x00u\xae\x8c\xeab\x09E\xe8\x03\xb0\x85D\x9b" +
	"/\xa3\xbaL\xc2\x16-k\xe6\x0d\x07\xab@\xc2*\xc0" +
	"\x96\x9cx\x15\xd6\x06\xc2\xbf(\x82\xfa<\xff\x02:V" +
	"?6\x11Y\xcdR\x00\xb5\\F\xb5N\xc2\xc4\x00\xcf" +
	"9C\xde+\xdcf\xf1\xef\xb5\x16\xf2\x9c\x82\xcc\xb2R" +
	"\x99\xbe+/\xea\xce9\xed\x9a\xd5o\x1a]\xe9\xac\xd3" +
	"\xa19\xa8\xd1[\xa6\x17\xdfr\xf01\x00\xf5^\x19\xd5" +
	"\xbf\x0de\xb6\x87^\x04P\x8f\xca\xa8\x1e\x97\x90IX" +
	"\x87\x12\";F\xb9\xe2q\x19\xd5g$d\xb2T\x87" +
	"2\"{z#\x80\xfa\x94\x8c\xeai\x09YD\xae\xc3" +
	"\x08\";u\x04@=-\xa3zVBV\x16\xa9\xc3" +
	"2Dv\xe6U\x00\xf5\x172\xaa\xbf\x92\xd05}\xad" +
	"\xd0h7\x0d\x9b[\xc3\x09\x8d\x82\x03\x11$\xa4\\N" +
	"I\xb03\x9b\xd3\xa4\x94\xd3m\xac\xc9g\xf3v\x9b\x96" +
	"\xd1\x8c\x14'\x1f\xf5\xec,x\xd6\xdbZ\x1a\x90c," +
	"\xe8\x7f\x01\xcbb$\xc2\xe2\xb6>\x90\xe7k@\xe6[" +
	"\x8b\xcf\x94F0\x8fYkB\xcbYm[/=&" +
	"\xe5y/O\x99\xc3\xdcZmi)G7\xd1\x08\xf1" +
	"x\x16\x8fLf\xf1v_/\xe4\xa1t\xd8/rZ" +
	"\xcd]\x00n\xda\xe2\xdc\xe8\xd2\x0c\x88\xe6-\xee\xf6\xeb" +
	"fV\xb3\xed\x1e\xb4\xcc\x81\xbc\xf7\xaa\x09\x1cE\xe4\xc9" +
	"E=C\xdc0\x93NAt\xad\x10\xbd\xa0W\x88\x9e" +
	"\xd7+\xd2\xe5\xec\xb5\"]\xce\\\x0b\xe0\xf2,\xb7\xd2" +
	"\xdcHQV\x19\xcc\x98#\xdc\xd2\x0d\xc0\xb4\xab\x19\xce" +
	"\x10\xb7u\xdb\xf3\x1f'o\xe9\xceh\xd8\x97\xc6\xed\xec" +
	"*?\x93\x8dIdB\x83b\x90hm\x00\xea&\x19" +
	"\xd5\xa1 H89\xcc\x80\x8cj\xae\xe0E\x00,K" +
	"^=$\xa3\xea\x90\x17\xd5z^D\xe9B\xcd\xc8\xa8" +
	"n\x93p\x87\x9f7\x8b\x06\xbfhY\x0a\x07\x06`\xc2" +
	"v\xb44\xc7) \x95M\xc1\xd0Y\x95\x14\x9cE\xfd" +
	"-\xdc\x19\xe1\xdc\xa0(\xaf\xc5:\x94\xc9\x8ek\x83\x90" +
	"fT\xce#\x00l\x09\xc5\xf9WeT\xbf.\xa1\xcb" +
	"5+\xa3\x8b\xf2\x00X\xeb\xeee\x8d\xf2\xd1\x0b\xffz" +
	"\xb7\xafHKFs\xb8\xed\x8c_(*\x11-5k" +
	"I^\x17\x11P vi\x8e#\xea\xb7\x96\xe51\x87" +
	"[6\x99{Y\xc1\xdc\xcaf|\x00 y\x1d\xca\x98" +
	"\xcc`!p\x01\x14\x1d-\x80\xe4\x10\xd1\x1d\xa2K^" +
	"[\xa2l\x15\xf4\x1c\xd1\xb7\x13]\x96\xc5\xa6\x95Q\xbc" +
	"\x07 \xb9\x9d\xe8\xb7\x13=\x12\x11\xfbVn\xc5\x93\x00" +
	"\xc9\xdb\x89\xbe\x9f\xe8eeuX\x06\xa0\xec\x13\xf4\xfd" +
	"D?D\xf4)S\xeap\x0a\x80r\x1f\xde\x01\x90<" +
	"D\xf4\xa3D\x8fF\xeb\x04\x9c?,\xe8G\x89~\x9c" +
	"\xe8\xe5\xe5uX\x0e\xa0\x1c\xc3\x1b\x00\x92\x8f\x13\xfd\x19" +
	"\xa2WT\xd4a\x05!TA\x7f\x8a\xe8\xa7\x89^Y" +
	"Y\x87\x95\x00\xca)<\x02\x90<M\xf4\xb3D\xaf\xaa" +
	"\xaa\xc3*\x00\xe5\x8c\xa0\x9f%\xfa\xbf\x10\xbd\xba\xba\x0e" +
	"\xab\x01\x947\x85\x9c\x7f\"\xfa\xbb(\xa1\xab\x99\xd9\x0e" +
	"k\xb4KC\xb2j\xbbi8Q\x1edlZ\xbdj" +
	"\xcd\xb2v\x13\x12\x86SJ\xefn\x9e\x90N\xd9K\xc3" +
	"\xac>@\xc2(P\xc3\x8b\xc9\x8c9\xd2!\xf1T\xbb" +
	"\xc9\x07\x07\x93\x8ef\x0ch\xd6\x00\x849Vk\xb6s" +
	"\x11\x0er\xf9\xd6\xee\xae>4[\xbb\xbbH\x1aL\xb2" +
	"Fr\xc2)\xd1\xe8%/j\x85\x16\xef\xb1\x09\x17\xe8" +
	"\x99RiI\xcc\x98#}f\xb2\xab-6\xe6\xb9\xf1" +
	"\xcbc\x9e\xa6\xec\x9d\xe2\x86\x03-\x96\x97\xbfK\x93\xe4" +
	"\xa4\xcdb,\x99\xe3)\xf2\xe9\xbab\x0a\xb9\x91\x92\xc0" +
	"6\x19\xd5[\x02\x87f;\x89\xb8]F\xf5\xf6P%" +
	"\xba\x95\x9a\xec\x9beT\xf7\x84*\xd1n\xca6\xb7\xcb" +
	"\xa8\xee'?\x96\xbcJ\xb4\xef\x0e\x00u\xbf\x8c\xea!" +
	"\x09\x13\"\xf9c,\x00\xbe^#\x9e\x18\xa66\xac\xa0" +
	"z,o\xe8\x0e\xc6\x02D\xe3w\xeb\xa9\xbc\xd3m\xad" +
	"\xe3\x83\x80\xb4Z\x9c:\xf9\xab|[\xce\xb4\x9c\x1e\x8e" +
	"\x16\x99\x83j\xb9\x7f(\xcflX\x19\xca\xacX0G" +
	"\x8b\x97\x88\xd4j\x0c\xa3,\xb6%4\x9ca\x1b\x03\xdc" +
	"\xc8X\x93\xbbj\x9b\xc3-C\xcb@\xaco4\xc7\xdd" +
	"B-\x009\xcd\x05E\xfd\x7fEK\x1e#\xfb<\"" +
	"\xa3\xfaT\x90\x8cO4\x05\xd5\xbbFr]\x0c\x81q" +
	"\xf6t\x1c\xa4\x1a\xf9\x02\x11\x8bS\x1c\xf6P\x1bH5" +
	"\x91\xcf\x89X\x04\xf8l\xefR\x90X\x99,\xa2\x9b\xe5" +
	");\xe6dT\xb7S*X,B\x9b\x8d\xee\x0a\x8e" +
	"1\xe6\x8c\xe6\xa88\x17\xb7\xe8\x99+\xa6\x1b\x83&\xd6" +
	"\xba\xaf\xbd!_x\xe9\xa6\x97\xce\xfa\x99R\xd6\x9c\x1d" +
	"\xfd^bNh\x83\x0e\xb7\x0a\xad\xd4% \xe1%T" +
	"\xd2\xf3F\xab\x93t4\xb4\x9c\xee\xc1\x0em\x14\x8a\xfd" +
	"\xc2dh\x0e\xd4\xf9\x88\xc1\xc4\x91u\xae\x08F\x01l" +
	"\xd5\xae\x00\x0f\xb3Um\x01\xf2f\xadw\x04h\x92V" +
	"\x8a\xd8\x93\xb5\x1e\x09\xa6bl\xd5\x91\x00~\xb3\xce#" +
	"\xc1x\x8fu\xb5\x05\xb3\x1a\xd6\xb9\xd1\xc7\x94nk)" +
	"\x02)\x00\x8e\xd6q\x08d\x87\x1f)n\xd7\xc4\xe8\xe2" +
	"\xaa\x09\xd1\x85\xdb=!D\xd9\xe1w\x98ng\x08\xd6" +
	"L\xde;\x16\xb5\xf1\xb4\\\xd4:\x9cN\x9az\xa6/" +
	"\xca\xb3\xb9\x10.Fd\xab\xa8{\\#\xa3\xdaG1" +
	"\x1b\xf1\\M\xa5\xf6\xafOF\xf5\xba\xa0\x02\xb1\xcd/" +
	"\x06\xcd\x80k\x9bz\xa6\x83\xe7\x1c\x1cZmZ\xad\xc3" +
	"\xdcJhi\xddHO\xd0\xdf\x0eh\xa3v\xa7\x914" +
	"Q\xcf\xf4\xf1l\xeej=f\x0c\x98#\x05\xb0\xecz" +
	"\xc8\xaesPj\xed7\x87yAO\x9e\xcd\x85\x92b" +
	"a\x9bS\xbeT\xfd-\x80\x00\xcb\x86\x92\x11\x009\xfb" +
	"J\x19\xd5u\xa1\xf4\xd4\x19\x0f\xcd\x05\x0a[\xedj\x0a" +
	"\x8c\x12\xa0\x81\xe2\xd0\xd3wv}\x00\xabA\xc2j\xc0" +
	"\x98\xa1ey\xe1\xc7\x97\x02\xfa\xe6X\xcd\x0b\x8d\x02i" +
	"MH\xdf\xf7\xfd1@\xbf-\x00\x13;L+M\x8f" +
	"b,\x98t\xfbyl\xd2\x16\xb0\xe08\x05\x0b%x" +
	"\xa1)\x09\x01\xa5#A\xb3T\xb4\xd0\xe5D\xfc\xba\x8c" +
	"j\x87\x84\xae\xa1;\x96\xe6\xf0v\xf4\xca\x86\xe5yg" +
	"\xf1\xa4\xec|f\xf0\"\xcb\xe3\x8bJ\x89e\xe4\x94\xd7" +
	"r\xcbe\x00\xc5\xa9%\x16\xae\x10\xd8\x92\xff\x04\x89-" +
	"\x89b0v\xc5\xc2\xe8\x8e\xcd\xfb\x14$6/Z\xc4" +
	"\xf2R\xe9\x0c%!\x86(+\x03\x08!\x95\x1a\xbf\xc5" +
	"\xb3\xfeJ\x14\xc8\xf2\xdc\x9a{7\xbct\xe6\x87\x8f\x85" +
	"\x1b\xebPv\xcah\x86\xd3mE\xd3\x9a\xe8\xa3\xa7\x0b" +
	"\xbfim\x12\x9d\xfc\xf2&\xd1\xc9/Y*:\xf9\x05" +
	"K\x05\x8e\x9f\xbdB\xe0\xf8\x86\xa5\x001\xcb4\x9dX" +
	"\x86k\x83\x09{\xc84\x9d\xc4\xa0\x95\xd7\x9d\x16\xdb\xb1" +
	"\xf2\xd7;\x09;\x9f\xd6\xac\xdf\xc3\xb4\xa8\x90?'q" +
	"\xa1\xacn\xf8.T\x1c\xe8\x95\xb8Pi\xcf\xad\xc5(" +
	"\xa5\x17:\xee2\xf2\x97\xa5\x01\xb0\x16\x1d\xf7\x14B\xd6" +
	"MA\x1b\x9e\xe0\xf4$\xd6\x06\x85\xd0\x8b\x9d\x18e\x85" +
	"b\x0e\x98\xf4\x85\xe8\x90\xf6\xb5>\xf0\xa8i\x0a\xd4\x8f" +
	"\x0dh\x0e\xbfH\xab\x1e\x88\xf2\x8d\x05>6'\xc7\xfa" +
	"\xdd\x9d//_\xfc\xd9\x87\xbf\xc6\xc2\xd4\x99\xb1- " +
	"\xb1\x8ah\xf1q\x88\x19N\xabs\x11G\x88\x94\xca_" +
	"TX\xa1\x07\xe7\xf6\xf2\x84\x18\xd5\x85\x8d_\xd0~\xae" +
	"\x84\xb1l:\xeb\xe0T\xc0\x1e\x19\xb16<\x98%\xe2" +
	"\xe41\\\x92\xd6A\xa8W\xbc\xdb`\xd8\xef\x16\x12(" +
	"P\xa6W\xe7\xcb\x11D\x017*D\x1b_M\xed\xf4" +
	"t\x01+\xbcL\xafL\x13\xf4\xe9D\x9f\x8b~/&" +
	"!*\xb3\x05\xdc\xb8\x94\xe8_E\x7f0 #*\x0b" +
	"\x04}>\xd1\x97\xa1?\x1b \xb8\xb1D\xc8YF\xf4" +
	"\x95\x02V\xf8p\xe3J|\x12 \xb9\x92\xe8\xeb\x04\xac" +
	"\xf0\xe1F\xa7h\xfb\xd7\x11\xfd\x1a\x01+|\xb8\xb1\x1e" +
	"\xd7\x02$\xfb\x88~\x1d)R\xe1\xa1\x8d\xcd\xd8\x0f\x90" +
	"\xdcD\xe4!\x94\x90<\x82\xc0\x06\xc7\x15a\x10E\xb1" +
	"O\xa5\xa3\x0f\x87,n\x0f\x99\x99\x81P\x11\xf1\xeaP" +
	"\x1fG\xaaAT\x82\x00\x02\x07\xd4\x8d\x1en\xa58\xc1" +
	"\x84\xd6\xe4\xd5\xe1i\xc2xz\xa1!\xdc\xd6<\xa0\x8d" +
	"\xf6\xa0\xc5Sz.\x99\xcf\x8e\xa9W\xdb\xda\xf3\x96E" +
	"\xcdb\x876\xdac\xf1\x16\x8f\xa5\xc8\xe0\xf0,\xfdn" +
	"E\xaaym\x9a\xcdc\xa4vq\xb9_\xb3\xb9W\x02" +
	"C\x90#|\xb0X\x1b\x9c\xba\x0f^\xbd:\x8a\xb5A" +
	"\xabT\x12\x11\xe3\x9c\xa9kl\xf6\xf0R\xb5\xf0\xa8\"" +
	"B\xbf\xd8L\xad7\x88\xf2B\xa5\x18\x83\xb5/\x0a\xfa" +
	"K&n\xbf\x8f\x92\xe9\x0d\xc7qL\xc8\xad\x08\x12F" +
	"P\xc6\x8b\xd7{\x93\xa6\x0c/\xfb\xf4EGs~5" +
	"\x8aT\xbb\xae\xb7\xeb\xd0\x88\xa1\x06/\xb8\xfe\xbe\x89\xba" +
	"XF\xf5\x9b\x12\x01\x09\xbf\xcb\x17W\x06%}\xb3\xab" +
	"\x1b\xe1\xd5\"V\xf8\xa2\xe2=\xbe\xbb\xf4g\x80^x" +
	"\xb3\x83\x16\x80\xfa]\x19\xd5\xbf\xf1A\x16\xb5v\xf7\x13" +
	"\xf1\x90\x8c\xea\xd1B`\x03\xb0\xc3w\x84\x06\x83\x11o" +
	"\x88\xc0\x8e=\x09\xa0\x1e\x97Q}\x8eB\xba\xd6C^" +
	"\xcf\xf6\x03\xa8\xcf\xc8\xa8\xbe,!\x80\x97\xf0_\xa0\x0a" +
	"\xf2\x9c\x8c\xea\xcf\xa4\xff\xfd\xa8\xf1\x87\xfd}\x10\xd5\xb3" +
	"|\xac\xf5\xcab2\xe0\x0e\x9f\x01k\xc3\xd7\xe7\x17\x0f" +
	"\x82\xd2\x0e\xd2\x0b\x82r\x0c]q\xb3\x8a\x93\xa1+\xe1" +
	"\x9a\x8d\x85\x0e\xbdK\x0eMx\xbcv\xd3\xffJ\x912" +
	"q\xdbY\xec:W\x84\xbb\xce\x95\x1e(\xee\xb2\x82\xdb" +
	"\xa8I\xdd\xb54rt#eZ9\xd3\x82\x92\xf9\xeb" +
	"\xa4\xf8\xbd\xe0Ab\x93\xc1\xdf\x1cT\xf4\x06\x7f\xae\xc0" +
	"*\xeer\xdb\x83\xd9\xac\xdb]\x9c\xf5\x16G\xd0\x85L" +
	"\x808&&\x8a\x99`\xd7\x98\x88 h\xcd\x07\xc8\xe7" +
	"\x11\xa42\xa1\x9f??\xeeBO\xa2\x06X\x1b(0" +
	"\xe9\xb8\xdd\x8b\xcc\x02\x90.F\xe8|\xe1\xda[\xbdk" +
	"'\xdd\xbbv\xe2\xde\xb5\xd3f\xef\xdai\xb3w\xed\xb4" +
	"\xc1\xbbvR\xbdk'\xd5\xbbvR\xbdk'\xb5\xed" +
	"\xff\xeaE\xd3\x17\xcfb\xd6\x1b\xba#\xc0\x8e0\xc4\xcc" +
	"\x8d\xc2\x10\x0dm\xc2\x10\xac\x11\xc0\xcdqo\xae\x01r" +
	"\x9a\xef\xf0'\xd6\xd1\x8c\xa6O \xbb\xa4.\xf8\x97U" +
	"+\x85\xe4\x13^\x83\xfb\xa8\xb8\xaab\x87\xe3\xc2\xc4\xf7" +
	"\xc7\x85\x89\x0f\xc6\x85\x89\xf75\x0a\x13\xef\xf6.\xaa\xc4" +
	"\xa5R9\x1bm\x14&\xde\xda(.\xaat\xef\xa2J" +
	"\x8b\x8b\x8b\xaa\x0d\x97\x88\x8b*\xd5\xbb\xa8\xea\xf4.\xaa" +
	"Z\x1b\x01b\xdaP\xc6Nh\x99\x1bLC\xd6\x0cY" +
	"\xcb\xc9\x9a\x1d\xd5\xec\xa1hjpY4\x95[\x12M" +
	"\xe5\x96FS\xb9\xe6\xa8\x91\xbb^6l\xccG\xf3\x9a" +
	"\x11\xcdkv4o\xe8\x93\x83\xc6\xd2\xba7\x11h\x0c" +
	"\xcd\xb4\xe2\x13\xcd\xb4\x9a\x82\x99V\xe1\xde\xf8V\x0a\x83" +
	"[dT\xff\x82\xb2\xad?\x92\xde\xdbX:\xd2\x02\x10" +
	"\x16R\xf7\xc8\xa8~W\x9a\x1cD\xa64\xab_\xcb\xea" +
	"\x03\xa1\x1e j\x0c-\x0b\xbe\x9b\xcd_zV\x07b" +
	"J\x15\xfc\x9d\x15\x8b\x87\xae\xfbk\x9a\x82\xbf\xcfa\x15" +
	"Mr\xfb:\xe1Mb\xbc\x17\xae\xf7\xfd~\x94w\x14" +
	"\xa3|Ik%\x06\x19\xcb\xf5\xbd5\x09\xd1\x1cO\x05" +
	"\xcdmQ\xb8\xdf\xdc\xa6\xf2N\x97\xb6\xad\xd5\x96m=" +
	"\xabg\x84\xf5{5\x87\xf7\xf0\xd2\xc1\x1b\xe0\xff\x04\x00" +
	"\x00\xff\xff\xe8/\xa5Y"

func init() {
	schemas.Register(schema_b30a3af53cea6b3e,
		0x80ce153f3bc9a9e8,
		0x81b1cd5c7865e185,
		0x825bb2508c0b37b2,
		0x82a74595175b71a3,
		0x84acb8f8eab508b9,
		0x87feb816363ff43c,
		0x88a5848ef8603554,
		0x8cb6b3e3c50d3665,
		0x8f0cbec420589373,
		0x8fa09457bc1bfc34,
		0x953375ac67d4f573,
		0x9539b8e14ac7d5a9,
		0x962b157a9dc85681,
		0x9a221e04faf79efc,
		0x9c5dedfd679ac842,
		0x9d247c812334c917,
		0x9d81d2bf4cd0f868,
		0xb0919989cca2fd9a,
		0xb1c2fa546f41d480,
		0xb991be9572278e2d,
		0xbbb7aeae0d097e05,
		0xc2d50914b83d42de,
		0xc5292994de2615c2,
		0xc58610b90af83811,
		0xc6c4991fe51b272f,
		0xc876b729b7d7f6d9,
		0xcca7748d367db151,
		0xcfcf44997e7ceab4,
		0xd3da30ea7b25d921,
		0xd801f16b6fa39a94,
		0xe1ed73d59c8ce359,
		0xe3a37e340f816cd1,
		0xe98c76fb0fb0b2cd,
		0xeed4e55bb04289ef,
		0xf082ec2d0eb50c9b,
		0xf0c763e472409ba2,
		0xf95ca008c46a4b3b,
		0xfcd78361390515e1,
		0xfec75f2ddd43431d)
}
