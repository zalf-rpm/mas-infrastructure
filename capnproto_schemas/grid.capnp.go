// Code generated by capnpc-go. DO NOT EDIT.

package grid

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/common"
	geo "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/geo"
	math "math"
	strconv "strconv"
)

type Aggregation uint16

// Aggregation_TypeID is the unique identifier for the type Aggregation.
const Aggregation_TypeID = 0xa5ecdc7767a6b301

// Values of Aggregation.
const (
	Aggregation_none    Aggregation = 0
	Aggregation_avg     Aggregation = 8
	Aggregation_wAvg    Aggregation = 1
	Aggregation_iAvg    Aggregation = 6
	Aggregation_median  Aggregation = 9
	Aggregation_wMedian Aggregation = 2
	Aggregation_iMedian Aggregation = 7
	Aggregation_min     Aggregation = 3
	Aggregation_wMin    Aggregation = 12
	Aggregation_iMin    Aggregation = 13
	Aggregation_max     Aggregation = 4
	Aggregation_wMax    Aggregation = 14
	Aggregation_iMax    Aggregation = 15
	Aggregation_sum     Aggregation = 5
	Aggregation_wSum    Aggregation = 10
	Aggregation_iSum    Aggregation = 11
)

// String returns the enum's constant name.
func (c Aggregation) String() string {
	switch c {
	case Aggregation_none:
		return "none"
	case Aggregation_avg:
		return "avg"
	case Aggregation_wAvg:
		return "wAvg"
	case Aggregation_iAvg:
		return "iAvg"
	case Aggregation_median:
		return "median"
	case Aggregation_wMedian:
		return "wMedian"
	case Aggregation_iMedian:
		return "iMedian"
	case Aggregation_min:
		return "min"
	case Aggregation_wMin:
		return "wMin"
	case Aggregation_iMin:
		return "iMin"
	case Aggregation_max:
		return "max"
	case Aggregation_wMax:
		return "wMax"
	case Aggregation_iMax:
		return "iMax"
	case Aggregation_sum:
		return "sum"
	case Aggregation_wSum:
		return "wSum"
	case Aggregation_iSum:
		return "iSum"

	default:
		return ""
	}
}

// AggregationFromString returns the enum value with a name,
// or the zero value if there's no such value.
func AggregationFromString(c string) Aggregation {
	switch c {
	case "none":
		return Aggregation_none
	case "avg":
		return Aggregation_avg
	case "wAvg":
		return Aggregation_wAvg
	case "iAvg":
		return Aggregation_iAvg
	case "median":
		return Aggregation_median
	case "wMedian":
		return Aggregation_wMedian
	case "iMedian":
		return Aggregation_iMedian
	case "min":
		return Aggregation_min
	case "wMin":
		return Aggregation_wMin
	case "iMin":
		return Aggregation_iMin
	case "max":
		return Aggregation_max
	case "wMax":
		return Aggregation_wMax
	case "iMax":
		return Aggregation_iMax
	case "sum":
		return Aggregation_sum
	case "wSum":
		return Aggregation_wSum
	case "iSum":
		return Aggregation_iSum

	default:
		return 0
	}
}

type Aggregation_List struct{ capnp.List }

func NewAggregation_List(s *capnp.Segment, sz int32) (Aggregation_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Aggregation_List{l.List}, err
}

func (l Aggregation_List) At(i int) Aggregation {
	ul := capnp.UInt16List{List: l.List}
	return Aggregation(ul.At(i))
}

func (l Aggregation_List) Set(i int, v Aggregation) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Grid struct{ Client *capnp.Client }

// Grid_TypeID is the unique identifier for the type Grid.
const Grid_TypeID = 0xe42973b29661e3c6

func (c Grid) ClosestValueAt(ctx context.Context, params func(Grid_closestValueAt_Params) error) (Grid_closestValueAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "closestValueAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_closestValueAt_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_closestValueAt_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Resolution(ctx context.Context, params func(Grid_resolution_Params) error) (Grid_resolution_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      1,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "resolution",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_resolution_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_resolution_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Dimension(ctx context.Context, params func(Grid_dimension_Params) error) (Grid_dimension_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      2,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "dimension",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_dimension_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_dimension_Results_Future{Future: ans.Future()}, release
}
func (c Grid) NoDataValue(ctx context.Context, params func(Grid_noDataValue_Params) error) (Grid_noDataValue_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      3,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "noDataValue",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_noDataValue_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_noDataValue_Results_Future{Future: ans.Future()}, release
}
func (c Grid) ValueAt(ctx context.Context, params func(Grid_valueAt_Params) error) (Grid_valueAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      4,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "valueAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 32, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_valueAt_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_valueAt_Results_Future{Future: ans.Future()}, release
}
func (c Grid) LatLonBounds(ctx context.Context, params func(Grid_latLonBounds_Params) error) (Grid_latLonBounds_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      5,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "latLonBounds",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_latLonBounds_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_latLonBounds_Results_Future{Future: ans.Future()}, release
}
func (c Grid) StreamCells(ctx context.Context, params func(Grid_streamCells_Params) error) (Grid_streamCells_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      6,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "streamCells",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_streamCells_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_streamCells_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c Grid) AddRef() Grid {
	return Grid{
		Client: c.Client.AddRef(),
	}
}

func (c Grid) Release() {
	c.Client.Release()
}

// A Grid_Server is a Grid with a local implementation.
type Grid_Server interface {
	ClosestValueAt(context.Context, Grid_closestValueAt) error

	Resolution(context.Context, Grid_resolution) error

	Dimension(context.Context, Grid_dimension) error

	NoDataValue(context.Context, Grid_noDataValue) error

	ValueAt(context.Context, Grid_valueAt) error

	LatLonBounds(context.Context, Grid_latLonBounds) error

	StreamCells(context.Context, Grid_streamCells) error

	Info(context.Context, common.Identifiable_info) error
}

// Grid_NewServer creates a new Server from an implementation of Grid_Server.
func Grid_NewServer(s Grid_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Grid_Methods(nil, s), s, c, policy)
}

// Grid_ServerToClient creates a new Client from an implementation of Grid_Server.
// The caller is responsible for calling Release on the returned Client.
func Grid_ServerToClient(s Grid_Server, policy *server.Policy) Grid {
	return Grid{Client: capnp.NewClient(Grid_NewServer(s, policy))}
}

// Grid_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Grid_Methods(methods []server.Method, s Grid_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 8)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "closestValueAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClosestValueAt(ctx, Grid_closestValueAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      1,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "resolution",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Resolution(ctx, Grid_resolution{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      2,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "dimension",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Dimension(ctx, Grid_dimension{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      3,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "noDataValue",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NoDataValue(ctx, Grid_noDataValue{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      4,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "valueAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ValueAt(ctx, Grid_valueAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      5,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "latLonBounds",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.LatLonBounds(ctx, Grid_latLonBounds{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      6,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "streamCells",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StreamCells(ctx, Grid_streamCells{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// Grid_closestValueAt holds the state for a server call to Grid.closestValueAt.
// See server.Call for documentation.
type Grid_closestValueAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_closestValueAt) Args() Grid_closestValueAt_Params {
	return Grid_closestValueAt_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_closestValueAt) AllocResults() (Grid_closestValueAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{Struct: r}, err
}

// Grid_resolution holds the state for a server call to Grid.resolution.
// See server.Call for documentation.
type Grid_resolution struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_resolution) Args() Grid_resolution_Params {
	return Grid_resolution_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_resolution) AllocResults() (Grid_resolution_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{Struct: r}, err
}

// Grid_dimension holds the state for a server call to Grid.dimension.
// See server.Call for documentation.
type Grid_dimension struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_dimension) Args() Grid_dimension_Params {
	return Grid_dimension_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_dimension) AllocResults() (Grid_dimension_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{Struct: r}, err
}

// Grid_noDataValue holds the state for a server call to Grid.noDataValue.
// See server.Call for documentation.
type Grid_noDataValue struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_noDataValue) Args() Grid_noDataValue_Params {
	return Grid_noDataValue_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_noDataValue) AllocResults() (Grid_noDataValue_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{Struct: r}, err
}

// Grid_valueAt holds the state for a server call to Grid.valueAt.
// See server.Call for documentation.
type Grid_valueAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_valueAt) Args() Grid_valueAt_Params {
	return Grid_valueAt_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_valueAt) AllocResults() (Grid_valueAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{Struct: r}, err
}

// Grid_latLonBounds holds the state for a server call to Grid.latLonBounds.
// See server.Call for documentation.
type Grid_latLonBounds struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_latLonBounds) Args() Grid_latLonBounds_Params {
	return Grid_latLonBounds_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_latLonBounds) AllocResults() (Grid_latLonBounds_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{Struct: r}, err
}

// Grid_streamCells holds the state for a server call to Grid.streamCells.
// See server.Call for documentation.
type Grid_streamCells struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_streamCells) Args() Grid_streamCells_Params {
	return Grid_streamCells_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_streamCells) AllocResults() (Grid_streamCells_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{Struct: r}, err
}

type Grid_Value struct{ capnp.Struct }
type Grid_Value_Which uint16

const (
	Grid_Value_Which_f  Grid_Value_Which = 0
	Grid_Value_Which_i  Grid_Value_Which = 1
	Grid_Value_Which_ui Grid_Value_Which = 2
	Grid_Value_Which_no Grid_Value_Which = 3
)

func (w Grid_Value_Which) String() string {
	const s = "fiuino"
	switch w {
	case Grid_Value_Which_f:
		return s[0:1]
	case Grid_Value_Which_i:
		return s[1:2]
	case Grid_Value_Which_ui:
		return s[2:4]
	case Grid_Value_Which_no:
		return s[4:6]

	}
	return "Grid_Value_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Grid_Value_TypeID is the unique identifier for the type Grid_Value.
const Grid_Value_TypeID = 0xfe2e0dfae573d9d0

func NewGrid_Value(s *capnp.Segment) (Grid_Value, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_Value{st}, err
}

func NewRootGrid_Value(s *capnp.Segment) (Grid_Value, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_Value{st}, err
}

func ReadRootGrid_Value(msg *capnp.Message) (Grid_Value, error) {
	root, err := msg.Root()
	return Grid_Value{root.Struct()}, err
}

func (s Grid_Value) String() string {
	str, _ := text.Marshal(0xfe2e0dfae573d9d0, s.Struct)
	return str
}

func (s Grid_Value) Which() Grid_Value_Which {
	return Grid_Value_Which(s.Struct.Uint16(8))
}
func (s Grid_Value) F() float64 {
	if s.Struct.Uint16(8) != 0 {
		panic("Which() != f")
	}
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Grid_Value) SetF(v float64) {
	s.Struct.SetUint16(8, 0)
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Grid_Value) I() int64 {
	if s.Struct.Uint16(8) != 1 {
		panic("Which() != i")
	}
	return int64(s.Struct.Uint64(0))
}

func (s Grid_Value) SetI(v int64) {
	s.Struct.SetUint16(8, 1)
	s.Struct.SetUint64(0, uint64(v))
}

func (s Grid_Value) Ui() uint64 {
	if s.Struct.Uint16(8) != 2 {
		panic("Which() != ui")
	}
	return s.Struct.Uint64(0)
}

func (s Grid_Value) SetUi(v uint64) {
	s.Struct.SetUint16(8, 2)
	s.Struct.SetUint64(0, v)
}

func (s Grid_Value) No() bool {
	if s.Struct.Uint16(8) != 3 {
		panic("Which() != no")
	}
	return s.Struct.Bit(0)
}

func (s Grid_Value) SetNo(v bool) {
	s.Struct.SetUint16(8, 3)
	s.Struct.SetBit(0, v)
}

// Grid_Value_List is a list of Grid_Value.
type Grid_Value_List struct{ capnp.List }

// NewGrid_Value creates a new list of Grid_Value.
func NewGrid_Value_List(s *capnp.Segment, sz int32) (Grid_Value_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_Value_List{l}, err
}

func (s Grid_Value_List) At(i int) Grid_Value { return Grid_Value{s.List.Struct(i)} }

func (s Grid_Value_List) Set(i int, v Grid_Value) error { return s.List.SetStruct(i, v.Struct) }

func (s Grid_Value_List) String() string {
	str, _ := text.MarshalList(0xfe2e0dfae573d9d0, s.List)
	return str
}

// Grid_Value_Future is a wrapper for a Grid_Value promised by a client call.
type Grid_Value_Future struct{ *capnp.Future }

func (p Grid_Value_Future) Struct() (Grid_Value, error) {
	s, err := p.Future.Struct()
	return Grid_Value{s}, err
}

type Grid_RowCol struct{ capnp.Struct }

// Grid_RowCol_TypeID is the unique identifier for the type Grid_RowCol.
const Grid_RowCol_TypeID = 0xb9e2d85d086206ff

func NewGrid_RowCol(s *capnp.Segment) (Grid_RowCol, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_RowCol{st}, err
}

func NewRootGrid_RowCol(s *capnp.Segment) (Grid_RowCol, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_RowCol{st}, err
}

func ReadRootGrid_RowCol(msg *capnp.Message) (Grid_RowCol, error) {
	root, err := msg.Root()
	return Grid_RowCol{root.Struct()}, err
}

func (s Grid_RowCol) String() string {
	str, _ := text.Marshal(0xb9e2d85d086206ff, s.Struct)
	return str
}

func (s Grid_RowCol) Row() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_RowCol) SetRow(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_RowCol) Col() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_RowCol) SetCol(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Grid_RowCol_List is a list of Grid_RowCol.
type Grid_RowCol_List struct{ capnp.List }

// NewGrid_RowCol creates a new list of Grid_RowCol.
func NewGrid_RowCol_List(s *capnp.Segment, sz int32) (Grid_RowCol_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_RowCol_List{l}, err
}

func (s Grid_RowCol_List) At(i int) Grid_RowCol { return Grid_RowCol{s.List.Struct(i)} }

func (s Grid_RowCol_List) Set(i int, v Grid_RowCol) error { return s.List.SetStruct(i, v.Struct) }

func (s Grid_RowCol_List) String() string {
	str, _ := text.MarshalList(0xb9e2d85d086206ff, s.List)
	return str
}

// Grid_RowCol_Future is a wrapper for a Grid_RowCol promised by a client call.
type Grid_RowCol_Future struct{ *capnp.Future }

func (p Grid_RowCol_Future) Struct() (Grid_RowCol, error) {
	s, err := p.Future.Struct()
	return Grid_RowCol{s}, err
}

type Grid_AggregationPart struct{ capnp.Struct }

// Grid_AggregationPart_TypeID is the unique identifier for the type Grid_AggregationPart.
const Grid_AggregationPart_TypeID = 0xac444617ef333a1d

func NewGrid_AggregationPart(s *capnp.Segment) (Grid_AggregationPart, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Grid_AggregationPart{st}, err
}

func NewRootGrid_AggregationPart(s *capnp.Segment) (Grid_AggregationPart, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Grid_AggregationPart{st}, err
}

func ReadRootGrid_AggregationPart(msg *capnp.Message) (Grid_AggregationPart, error) {
	root, err := msg.Root()
	return Grid_AggregationPart{root.Struct()}, err
}

func (s Grid_AggregationPart) String() string {
	str, _ := text.Marshal(0xac444617ef333a1d, s.Struct)
	return str
}

func (s Grid_AggregationPart) Value() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_AggregationPart) HasValue() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_AggregationPart) SetValue(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewValue sets the value field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_AggregationPart) NewValue() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_AggregationPart) RowCol() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_AggregationPart) HasRowCol() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_AggregationPart) SetRowCol(v Grid_RowCol) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewRowCol sets the rowCol field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_AggregationPart) NewRowCol() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_AggregationPart) AreaFrac() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Grid_AggregationPart) SetAreaFrac(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Grid_AggregationPart) IValue() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Grid_AggregationPart) SetIValue(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// Grid_AggregationPart_List is a list of Grid_AggregationPart.
type Grid_AggregationPart_List struct{ capnp.List }

// NewGrid_AggregationPart creates a new list of Grid_AggregationPart.
func NewGrid_AggregationPart_List(s *capnp.Segment, sz int32) (Grid_AggregationPart_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Grid_AggregationPart_List{l}, err
}

func (s Grid_AggregationPart_List) At(i int) Grid_AggregationPart {
	return Grid_AggregationPart{s.List.Struct(i)}
}

func (s Grid_AggregationPart_List) Set(i int, v Grid_AggregationPart) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_AggregationPart_List) String() string {
	str, _ := text.MarshalList(0xac444617ef333a1d, s.List)
	return str
}

// Grid_AggregationPart_Future is a wrapper for a Grid_AggregationPart promised by a client call.
type Grid_AggregationPart_Future struct{ *capnp.Future }

func (p Grid_AggregationPart_Future) Struct() (Grid_AggregationPart, error) {
	s, err := p.Future.Struct()
	return Grid_AggregationPart{s}, err
}

func (p Grid_AggregationPart_Future) Value() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_AggregationPart_Future) RowCol() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(1, nil)}
}

type Grid_Callback struct{ Client *capnp.Client }

// Grid_Callback_TypeID is the unique identifier for the type Grid_Callback.
const Grid_Callback_TypeID = 0xd639518280cb55d3

func (c Grid_Callback) SendCells(ctx context.Context, params func(Grid_Callback_sendCells_Params) error) (Grid_Callback_sendCells_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd639518280cb55d3,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid.Callback",
			MethodName:    "sendCells",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_Callback_sendCells_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_Callback_sendCells_Results_Future{Future: ans.Future()}, release
}

func (c Grid_Callback) AddRef() Grid_Callback {
	return Grid_Callback{
		Client: c.Client.AddRef(),
	}
}

func (c Grid_Callback) Release() {
	c.Client.Release()
}

// A Grid_Callback_Server is a Grid_Callback with a local implementation.
type Grid_Callback_Server interface {
	SendCells(context.Context, Grid_Callback_sendCells) error
}

// Grid_Callback_NewServer creates a new Server from an implementation of Grid_Callback_Server.
func Grid_Callback_NewServer(s Grid_Callback_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Grid_Callback_Methods(nil, s), s, c, policy)
}

// Grid_Callback_ServerToClient creates a new Client from an implementation of Grid_Callback_Server.
// The caller is responsible for calling Release on the returned Client.
func Grid_Callback_ServerToClient(s Grid_Callback_Server, policy *server.Policy) Grid_Callback {
	return Grid_Callback{Client: capnp.NewClient(Grid_Callback_NewServer(s, policy))}
}

// Grid_Callback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Grid_Callback_Methods(methods []server.Method, s Grid_Callback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd639518280cb55d3,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid.Callback",
			MethodName:    "sendCells",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SendCells(ctx, Grid_Callback_sendCells{call})
		},
	})

	return methods
}

// Grid_Callback_sendCells holds the state for a server call to Grid_Callback.sendCells.
// See server.Call for documentation.
type Grid_Callback_sendCells struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_Callback_sendCells) Args() Grid_Callback_sendCells_Params {
	return Grid_Callback_sendCells_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_Callback_sendCells) AllocResults() (Grid_Callback_sendCells_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{Struct: r}, err
}

type Grid_Callback_sendCells_Params struct{ capnp.Struct }

// Grid_Callback_sendCells_Params_TypeID is the unique identifier for the type Grid_Callback_sendCells_Params.
const Grid_Callback_sendCells_Params_TypeID = 0xe9b0c7718f68f6bb

func NewGrid_Callback_sendCells_Params(s *capnp.Segment) (Grid_Callback_sendCells_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_Callback_sendCells_Params{st}, err
}

func NewRootGrid_Callback_sendCells_Params(s *capnp.Segment) (Grid_Callback_sendCells_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_Callback_sendCells_Params{st}, err
}

func ReadRootGrid_Callback_sendCells_Params(msg *capnp.Message) (Grid_Callback_sendCells_Params, error) {
	root, err := msg.Root()
	return Grid_Callback_sendCells_Params{root.Struct()}, err
}

func (s Grid_Callback_sendCells_Params) String() string {
	str, _ := text.Marshal(0xe9b0c7718f68f6bb, s.Struct)
	return str
}

func (s Grid_Callback_sendCells_Params) Cells() (Grid_RowCol_List, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_RowCol_List{List: p.List()}, err
}

func (s Grid_Callback_sendCells_Params) HasCells() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_Callback_sendCells_Params) SetCells(v Grid_RowCol_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCells sets the cells field to a newly
// allocated Grid_RowCol_List, preferring placement in s's segment.
func (s Grid_Callback_sendCells_Params) NewCells(n int32) (Grid_RowCol_List, error) {
	l, err := NewGrid_RowCol_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_RowCol_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Grid_Callback_sendCells_Params_List is a list of Grid_Callback_sendCells_Params.
type Grid_Callback_sendCells_Params_List struct{ capnp.List }

// NewGrid_Callback_sendCells_Params creates a new list of Grid_Callback_sendCells_Params.
func NewGrid_Callback_sendCells_Params_List(s *capnp.Segment, sz int32) (Grid_Callback_sendCells_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Grid_Callback_sendCells_Params_List{l}, err
}

func (s Grid_Callback_sendCells_Params_List) At(i int) Grid_Callback_sendCells_Params {
	return Grid_Callback_sendCells_Params{s.List.Struct(i)}
}

func (s Grid_Callback_sendCells_Params_List) Set(i int, v Grid_Callback_sendCells_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_Callback_sendCells_Params_List) String() string {
	str, _ := text.MarshalList(0xe9b0c7718f68f6bb, s.List)
	return str
}

// Grid_Callback_sendCells_Params_Future is a wrapper for a Grid_Callback_sendCells_Params promised by a client call.
type Grid_Callback_sendCells_Params_Future struct{ *capnp.Future }

func (p Grid_Callback_sendCells_Params_Future) Struct() (Grid_Callback_sendCells_Params, error) {
	s, err := p.Future.Struct()
	return Grid_Callback_sendCells_Params{s}, err
}

type Grid_Callback_sendCells_Results struct{ capnp.Struct }

// Grid_Callback_sendCells_Results_TypeID is the unique identifier for the type Grid_Callback_sendCells_Results.
const Grid_Callback_sendCells_Results_TypeID = 0x8e536f6e598b2579

func NewGrid_Callback_sendCells_Results(s *capnp.Segment) (Grid_Callback_sendCells_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{st}, err
}

func NewRootGrid_Callback_sendCells_Results(s *capnp.Segment) (Grid_Callback_sendCells_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{st}, err
}

func ReadRootGrid_Callback_sendCells_Results(msg *capnp.Message) (Grid_Callback_sendCells_Results, error) {
	root, err := msg.Root()
	return Grid_Callback_sendCells_Results{root.Struct()}, err
}

func (s Grid_Callback_sendCells_Results) String() string {
	str, _ := text.Marshal(0x8e536f6e598b2579, s.Struct)
	return str
}

// Grid_Callback_sendCells_Results_List is a list of Grid_Callback_sendCells_Results.
type Grid_Callback_sendCells_Results_List struct{ capnp.List }

// NewGrid_Callback_sendCells_Results creates a new list of Grid_Callback_sendCells_Results.
func NewGrid_Callback_sendCells_Results_List(s *capnp.Segment, sz int32) (Grid_Callback_sendCells_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_Callback_sendCells_Results_List{l}, err
}

func (s Grid_Callback_sendCells_Results_List) At(i int) Grid_Callback_sendCells_Results {
	return Grid_Callback_sendCells_Results{s.List.Struct(i)}
}

func (s Grid_Callback_sendCells_Results_List) Set(i int, v Grid_Callback_sendCells_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_Callback_sendCells_Results_List) String() string {
	str, _ := text.MarshalList(0x8e536f6e598b2579, s.List)
	return str
}

// Grid_Callback_sendCells_Results_Future is a wrapper for a Grid_Callback_sendCells_Results promised by a client call.
type Grid_Callback_sendCells_Results_Future struct{ *capnp.Future }

func (p Grid_Callback_sendCells_Results_Future) Struct() (Grid_Callback_sendCells_Results, error) {
	s, err := p.Future.Struct()
	return Grid_Callback_sendCells_Results{s}, err
}

type Grid_closestValueAt_Params struct{ capnp.Struct }

// Grid_closestValueAt_Params_TypeID is the unique identifier for the type Grid_closestValueAt_Params.
const Grid_closestValueAt_Params_TypeID = 0xeb7e6f1c610c079a

func NewGrid_closestValueAt_Params(s *capnp.Segment) (Grid_closestValueAt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Grid_closestValueAt_Params{st}, err
}

func NewRootGrid_closestValueAt_Params(s *capnp.Segment) (Grid_closestValueAt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Grid_closestValueAt_Params{st}, err
}

func ReadRootGrid_closestValueAt_Params(msg *capnp.Message) (Grid_closestValueAt_Params, error) {
	root, err := msg.Root()
	return Grid_closestValueAt_Params{root.Struct()}, err
}

func (s Grid_closestValueAt_Params) String() string {
	str, _ := text.Marshal(0xeb7e6f1c610c079a, s.Struct)
	return str
}

func (s Grid_closestValueAt_Params) LatlonCoord() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(0)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Params) HasLatlonCoord() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_closestValueAt_Params) SetLatlonCoord(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewLatlonCoord sets the latlonCoord field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Params) NewLatlonCoord() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Params) IgnoreNoData() bool {
	return !s.Struct.Bit(0)
}

func (s Grid_closestValueAt_Params) SetIgnoreNoData(v bool) {
	s.Struct.SetBit(0, !v)
}

func (s Grid_closestValueAt_Params) Resolution() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_closestValueAt_Params) SetResolution(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Grid_closestValueAt_Params) Agg() Aggregation {
	return Aggregation(s.Struct.Uint16(2))
}

func (s Grid_closestValueAt_Params) SetAgg(v Aggregation) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Grid_closestValueAt_Params) ReturnRowCols() bool {
	return s.Struct.Bit(1)
}

func (s Grid_closestValueAt_Params) SetReturnRowCols(v bool) {
	s.Struct.SetBit(1, v)
}

func (s Grid_closestValueAt_Params) IncludeAggParts() bool {
	return s.Struct.Bit(2)
}

func (s Grid_closestValueAt_Params) SetIncludeAggParts(v bool) {
	s.Struct.SetBit(2, v)
}

// Grid_closestValueAt_Params_List is a list of Grid_closestValueAt_Params.
type Grid_closestValueAt_Params_List struct{ capnp.List }

// NewGrid_closestValueAt_Params creates a new list of Grid_closestValueAt_Params.
func NewGrid_closestValueAt_Params_List(s *capnp.Segment, sz int32) (Grid_closestValueAt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Grid_closestValueAt_Params_List{l}, err
}

func (s Grid_closestValueAt_Params_List) At(i int) Grid_closestValueAt_Params {
	return Grid_closestValueAt_Params{s.List.Struct(i)}
}

func (s Grid_closestValueAt_Params_List) Set(i int, v Grid_closestValueAt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_closestValueAt_Params_List) String() string {
	str, _ := text.MarshalList(0xeb7e6f1c610c079a, s.List)
	return str
}

// Grid_closestValueAt_Params_Future is a wrapper for a Grid_closestValueAt_Params promised by a client call.
type Grid_closestValueAt_Params_Future struct{ *capnp.Future }

func (p Grid_closestValueAt_Params_Future) Struct() (Grid_closestValueAt_Params, error) {
	s, err := p.Future.Struct()
	return Grid_closestValueAt_Params{s}, err
}

func (p Grid_closestValueAt_Params_Future) LatlonCoord() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(0, nil)}
}

type Grid_closestValueAt_Results struct{ capnp.Struct }

// Grid_closestValueAt_Results_TypeID is the unique identifier for the type Grid_closestValueAt_Results.
const Grid_closestValueAt_Results_TypeID = 0xa8bd0263833540b0

func NewGrid_closestValueAt_Results(s *capnp.Segment) (Grid_closestValueAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{st}, err
}

func NewRootGrid_closestValueAt_Results(s *capnp.Segment) (Grid_closestValueAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{st}, err
}

func ReadRootGrid_closestValueAt_Results(msg *capnp.Message) (Grid_closestValueAt_Results, error) {
	root, err := msg.Root()
	return Grid_closestValueAt_Results{root.Struct()}, err
}

func (s Grid_closestValueAt_Results) String() string {
	str, _ := text.Marshal(0xa8bd0263833540b0, s.Struct)
	return str
}

func (s Grid_closestValueAt_Results) Val() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasVal() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_closestValueAt_Results) SetVal(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVal sets the val field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewVal() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) Tl() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasTl() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_closestValueAt_Results) SetTl(v Grid_RowCol) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewTl sets the tl field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewTl() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) Br() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(2)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasBr() bool {
	return s.Struct.HasPtr(2)
}

func (s Grid_closestValueAt_Results) SetBr(v Grid_RowCol) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewBr sets the br field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewBr() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) AggParts() (Grid_AggregationPart_List, error) {
	p, err := s.Struct.Ptr(3)
	return Grid_AggregationPart_List{List: p.List()}, err
}

func (s Grid_closestValueAt_Results) HasAggParts() bool {
	return s.Struct.HasPtr(3)
}

func (s Grid_closestValueAt_Results) SetAggParts(v Grid_AggregationPart_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewAggParts sets the aggParts field to a newly
// allocated Grid_AggregationPart_List, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewAggParts(n int32) (Grid_AggregationPart_List, error) {
	l, err := NewGrid_AggregationPart_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_AggregationPart_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// Grid_closestValueAt_Results_List is a list of Grid_closestValueAt_Results.
type Grid_closestValueAt_Results_List struct{ capnp.List }

// NewGrid_closestValueAt_Results creates a new list of Grid_closestValueAt_Results.
func NewGrid_closestValueAt_Results_List(s *capnp.Segment, sz int32) (Grid_closestValueAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Grid_closestValueAt_Results_List{l}, err
}

func (s Grid_closestValueAt_Results_List) At(i int) Grid_closestValueAt_Results {
	return Grid_closestValueAt_Results{s.List.Struct(i)}
}

func (s Grid_closestValueAt_Results_List) Set(i int, v Grid_closestValueAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_closestValueAt_Results_List) String() string {
	str, _ := text.MarshalList(0xa8bd0263833540b0, s.List)
	return str
}

// Grid_closestValueAt_Results_Future is a wrapper for a Grid_closestValueAt_Results promised by a client call.
type Grid_closestValueAt_Results_Future struct{ *capnp.Future }

func (p Grid_closestValueAt_Results_Future) Struct() (Grid_closestValueAt_Results, error) {
	s, err := p.Future.Struct()
	return Grid_closestValueAt_Results{s}, err
}

func (p Grid_closestValueAt_Results_Future) Val() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_closestValueAt_Results_Future) Tl() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(1, nil)}
}

func (p Grid_closestValueAt_Results_Future) Br() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(2, nil)}
}

type Grid_resolution_Params struct{ capnp.Struct }

// Grid_resolution_Params_TypeID is the unique identifier for the type Grid_resolution_Params.
const Grid_resolution_Params_TypeID = 0xf79edcb97e1e2deb

func NewGrid_resolution_Params(s *capnp.Segment) (Grid_resolution_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_resolution_Params{st}, err
}

func NewRootGrid_resolution_Params(s *capnp.Segment) (Grid_resolution_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_resolution_Params{st}, err
}

func ReadRootGrid_resolution_Params(msg *capnp.Message) (Grid_resolution_Params, error) {
	root, err := msg.Root()
	return Grid_resolution_Params{root.Struct()}, err
}

func (s Grid_resolution_Params) String() string {
	str, _ := text.Marshal(0xf79edcb97e1e2deb, s.Struct)
	return str
}

// Grid_resolution_Params_List is a list of Grid_resolution_Params.
type Grid_resolution_Params_List struct{ capnp.List }

// NewGrid_resolution_Params creates a new list of Grid_resolution_Params.
func NewGrid_resolution_Params_List(s *capnp.Segment, sz int32) (Grid_resolution_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_resolution_Params_List{l}, err
}

func (s Grid_resolution_Params_List) At(i int) Grid_resolution_Params {
	return Grid_resolution_Params{s.List.Struct(i)}
}

func (s Grid_resolution_Params_List) Set(i int, v Grid_resolution_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_resolution_Params_List) String() string {
	str, _ := text.MarshalList(0xf79edcb97e1e2deb, s.List)
	return str
}

// Grid_resolution_Params_Future is a wrapper for a Grid_resolution_Params promised by a client call.
type Grid_resolution_Params_Future struct{ *capnp.Future }

func (p Grid_resolution_Params_Future) Struct() (Grid_resolution_Params, error) {
	s, err := p.Future.Struct()
	return Grid_resolution_Params{s}, err
}

type Grid_resolution_Results struct{ capnp.Struct }

// Grid_resolution_Results_TypeID is the unique identifier for the type Grid_resolution_Results.
const Grid_resolution_Results_TypeID = 0x8cd7ba490778c79a

func NewGrid_resolution_Results(s *capnp.Segment) (Grid_resolution_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{st}, err
}

func NewRootGrid_resolution_Results(s *capnp.Segment) (Grid_resolution_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{st}, err
}

func ReadRootGrid_resolution_Results(msg *capnp.Message) (Grid_resolution_Results, error) {
	root, err := msg.Root()
	return Grid_resolution_Results{root.Struct()}, err
}

func (s Grid_resolution_Results) String() string {
	str, _ := text.Marshal(0x8cd7ba490778c79a, s.Struct)
	return str
}

func (s Grid_resolution_Results) Res() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_resolution_Results) SetRes(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Grid_resolution_Results_List is a list of Grid_resolution_Results.
type Grid_resolution_Results_List struct{ capnp.List }

// NewGrid_resolution_Results creates a new list of Grid_resolution_Results.
func NewGrid_resolution_Results_List(s *capnp.Segment, sz int32) (Grid_resolution_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Grid_resolution_Results_List{l}, err
}

func (s Grid_resolution_Results_List) At(i int) Grid_resolution_Results {
	return Grid_resolution_Results{s.List.Struct(i)}
}

func (s Grid_resolution_Results_List) Set(i int, v Grid_resolution_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_resolution_Results_List) String() string {
	str, _ := text.MarshalList(0x8cd7ba490778c79a, s.List)
	return str
}

// Grid_resolution_Results_Future is a wrapper for a Grid_resolution_Results promised by a client call.
type Grid_resolution_Results_Future struct{ *capnp.Future }

func (p Grid_resolution_Results_Future) Struct() (Grid_resolution_Results, error) {
	s, err := p.Future.Struct()
	return Grid_resolution_Results{s}, err
}

type Grid_dimension_Params struct{ capnp.Struct }

// Grid_dimension_Params_TypeID is the unique identifier for the type Grid_dimension_Params.
const Grid_dimension_Params_TypeID = 0xa6005af20cc08dbe

func NewGrid_dimension_Params(s *capnp.Segment) (Grid_dimension_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_dimension_Params{st}, err
}

func NewRootGrid_dimension_Params(s *capnp.Segment) (Grid_dimension_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_dimension_Params{st}, err
}

func ReadRootGrid_dimension_Params(msg *capnp.Message) (Grid_dimension_Params, error) {
	root, err := msg.Root()
	return Grid_dimension_Params{root.Struct()}, err
}

func (s Grid_dimension_Params) String() string {
	str, _ := text.Marshal(0xa6005af20cc08dbe, s.Struct)
	return str
}

// Grid_dimension_Params_List is a list of Grid_dimension_Params.
type Grid_dimension_Params_List struct{ capnp.List }

// NewGrid_dimension_Params creates a new list of Grid_dimension_Params.
func NewGrid_dimension_Params_List(s *capnp.Segment, sz int32) (Grid_dimension_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_dimension_Params_List{l}, err
}

func (s Grid_dimension_Params_List) At(i int) Grid_dimension_Params {
	return Grid_dimension_Params{s.List.Struct(i)}
}

func (s Grid_dimension_Params_List) Set(i int, v Grid_dimension_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_dimension_Params_List) String() string {
	str, _ := text.MarshalList(0xa6005af20cc08dbe, s.List)
	return str
}

// Grid_dimension_Params_Future is a wrapper for a Grid_dimension_Params promised by a client call.
type Grid_dimension_Params_Future struct{ *capnp.Future }

func (p Grid_dimension_Params_Future) Struct() (Grid_dimension_Params, error) {
	s, err := p.Future.Struct()
	return Grid_dimension_Params{s}, err
}

type Grid_dimension_Results struct{ capnp.Struct }

// Grid_dimension_Results_TypeID is the unique identifier for the type Grid_dimension_Results.
const Grid_dimension_Results_TypeID = 0xe7a46f6b1610256f

func NewGrid_dimension_Results(s *capnp.Segment) (Grid_dimension_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{st}, err
}

func NewRootGrid_dimension_Results(s *capnp.Segment) (Grid_dimension_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{st}, err
}

func ReadRootGrid_dimension_Results(msg *capnp.Message) (Grid_dimension_Results, error) {
	root, err := msg.Root()
	return Grid_dimension_Results{root.Struct()}, err
}

func (s Grid_dimension_Results) String() string {
	str, _ := text.Marshal(0xe7a46f6b1610256f, s.Struct)
	return str
}

func (s Grid_dimension_Results) Rows() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_dimension_Results) SetRows(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_dimension_Results) Cols() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_dimension_Results) SetCols(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Grid_dimension_Results_List is a list of Grid_dimension_Results.
type Grid_dimension_Results_List struct{ capnp.List }

// NewGrid_dimension_Results creates a new list of Grid_dimension_Results.
func NewGrid_dimension_Results_List(s *capnp.Segment, sz int32) (Grid_dimension_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_dimension_Results_List{l}, err
}

func (s Grid_dimension_Results_List) At(i int) Grid_dimension_Results {
	return Grid_dimension_Results{s.List.Struct(i)}
}

func (s Grid_dimension_Results_List) Set(i int, v Grid_dimension_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_dimension_Results_List) String() string {
	str, _ := text.MarshalList(0xe7a46f6b1610256f, s.List)
	return str
}

// Grid_dimension_Results_Future is a wrapper for a Grid_dimension_Results promised by a client call.
type Grid_dimension_Results_Future struct{ *capnp.Future }

func (p Grid_dimension_Results_Future) Struct() (Grid_dimension_Results, error) {
	s, err := p.Future.Struct()
	return Grid_dimension_Results{s}, err
}

type Grid_noDataValue_Params struct{ capnp.Struct }

// Grid_noDataValue_Params_TypeID is the unique identifier for the type Grid_noDataValue_Params.
const Grid_noDataValue_Params_TypeID = 0xf804a76f2ada54b6

func NewGrid_noDataValue_Params(s *capnp.Segment) (Grid_noDataValue_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_noDataValue_Params{st}, err
}

func NewRootGrid_noDataValue_Params(s *capnp.Segment) (Grid_noDataValue_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_noDataValue_Params{st}, err
}

func ReadRootGrid_noDataValue_Params(msg *capnp.Message) (Grid_noDataValue_Params, error) {
	root, err := msg.Root()
	return Grid_noDataValue_Params{root.Struct()}, err
}

func (s Grid_noDataValue_Params) String() string {
	str, _ := text.Marshal(0xf804a76f2ada54b6, s.Struct)
	return str
}

// Grid_noDataValue_Params_List is a list of Grid_noDataValue_Params.
type Grid_noDataValue_Params_List struct{ capnp.List }

// NewGrid_noDataValue_Params creates a new list of Grid_noDataValue_Params.
func NewGrid_noDataValue_Params_List(s *capnp.Segment, sz int32) (Grid_noDataValue_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_noDataValue_Params_List{l}, err
}

func (s Grid_noDataValue_Params_List) At(i int) Grid_noDataValue_Params {
	return Grid_noDataValue_Params{s.List.Struct(i)}
}

func (s Grid_noDataValue_Params_List) Set(i int, v Grid_noDataValue_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_noDataValue_Params_List) String() string {
	str, _ := text.MarshalList(0xf804a76f2ada54b6, s.List)
	return str
}

// Grid_noDataValue_Params_Future is a wrapper for a Grid_noDataValue_Params promised by a client call.
type Grid_noDataValue_Params_Future struct{ *capnp.Future }

func (p Grid_noDataValue_Params_Future) Struct() (Grid_noDataValue_Params, error) {
	s, err := p.Future.Struct()
	return Grid_noDataValue_Params{s}, err
}

type Grid_noDataValue_Results struct{ capnp.Struct }

// Grid_noDataValue_Results_TypeID is the unique identifier for the type Grid_noDataValue_Results.
const Grid_noDataValue_Results_TypeID = 0x9bc132bd2a1b1fcf

func NewGrid_noDataValue_Results(s *capnp.Segment) (Grid_noDataValue_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{st}, err
}

func NewRootGrid_noDataValue_Results(s *capnp.Segment) (Grid_noDataValue_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{st}, err
}

func ReadRootGrid_noDataValue_Results(msg *capnp.Message) (Grid_noDataValue_Results, error) {
	root, err := msg.Root()
	return Grid_noDataValue_Results{root.Struct()}, err
}

func (s Grid_noDataValue_Results) String() string {
	str, _ := text.Marshal(0x9bc132bd2a1b1fcf, s.Struct)
	return str
}

func (s Grid_noDataValue_Results) Nodata() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_noDataValue_Results) HasNodata() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_noDataValue_Results) SetNodata(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewNodata sets the nodata field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_noDataValue_Results) NewNodata() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Grid_noDataValue_Results_List is a list of Grid_noDataValue_Results.
type Grid_noDataValue_Results_List struct{ capnp.List }

// NewGrid_noDataValue_Results creates a new list of Grid_noDataValue_Results.
func NewGrid_noDataValue_Results_List(s *capnp.Segment, sz int32) (Grid_noDataValue_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Grid_noDataValue_Results_List{l}, err
}

func (s Grid_noDataValue_Results_List) At(i int) Grid_noDataValue_Results {
	return Grid_noDataValue_Results{s.List.Struct(i)}
}

func (s Grid_noDataValue_Results_List) Set(i int, v Grid_noDataValue_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_noDataValue_Results_List) String() string {
	str, _ := text.MarshalList(0x9bc132bd2a1b1fcf, s.List)
	return str
}

// Grid_noDataValue_Results_Future is a wrapper for a Grid_noDataValue_Results promised by a client call.
type Grid_noDataValue_Results_Future struct{ *capnp.Future }

func (p Grid_noDataValue_Results_Future) Struct() (Grid_noDataValue_Results, error) {
	s, err := p.Future.Struct()
	return Grid_noDataValue_Results{s}, err
}

func (p Grid_noDataValue_Results_Future) Nodata() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

type Grid_valueAt_Params struct{ capnp.Struct }

// Grid_valueAt_Params_TypeID is the unique identifier for the type Grid_valueAt_Params.
const Grid_valueAt_Params_TypeID = 0x948ff2bdd6e6972f

func NewGrid_valueAt_Params(s *capnp.Segment) (Grid_valueAt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Grid_valueAt_Params{st}, err
}

func NewRootGrid_valueAt_Params(s *capnp.Segment) (Grid_valueAt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Grid_valueAt_Params{st}, err
}

func ReadRootGrid_valueAt_Params(msg *capnp.Message) (Grid_valueAt_Params, error) {
	root, err := msg.Root()
	return Grid_valueAt_Params{root.Struct()}, err
}

func (s Grid_valueAt_Params) String() string {
	str, _ := text.Marshal(0x948ff2bdd6e6972f, s.Struct)
	return str
}

func (s Grid_valueAt_Params) Row() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_valueAt_Params) SetRow(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_valueAt_Params) Col() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_valueAt_Params) SetCol(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Grid_valueAt_Params) Resolution() uint64 {
	return s.Struct.Uint64(16)
}

func (s Grid_valueAt_Params) SetResolution(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s Grid_valueAt_Params) Agg() Aggregation {
	return Aggregation(s.Struct.Uint16(24))
}

func (s Grid_valueAt_Params) SetAgg(v Aggregation) {
	s.Struct.SetUint16(24, uint16(v))
}

func (s Grid_valueAt_Params) IncludeAggParts() bool {
	return s.Struct.Bit(208)
}

func (s Grid_valueAt_Params) SetIncludeAggParts(v bool) {
	s.Struct.SetBit(208, v)
}

// Grid_valueAt_Params_List is a list of Grid_valueAt_Params.
type Grid_valueAt_Params_List struct{ capnp.List }

// NewGrid_valueAt_Params creates a new list of Grid_valueAt_Params.
func NewGrid_valueAt_Params_List(s *capnp.Segment, sz int32) (Grid_valueAt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return Grid_valueAt_Params_List{l}, err
}

func (s Grid_valueAt_Params_List) At(i int) Grid_valueAt_Params {
	return Grid_valueAt_Params{s.List.Struct(i)}
}

func (s Grid_valueAt_Params_List) Set(i int, v Grid_valueAt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_valueAt_Params_List) String() string {
	str, _ := text.MarshalList(0x948ff2bdd6e6972f, s.List)
	return str
}

// Grid_valueAt_Params_Future is a wrapper for a Grid_valueAt_Params promised by a client call.
type Grid_valueAt_Params_Future struct{ *capnp.Future }

func (p Grid_valueAt_Params_Future) Struct() (Grid_valueAt_Params, error) {
	s, err := p.Future.Struct()
	return Grid_valueAt_Params{s}, err
}

type Grid_valueAt_Results struct{ capnp.Struct }

// Grid_valueAt_Results_TypeID is the unique identifier for the type Grid_valueAt_Results.
const Grid_valueAt_Results_TypeID = 0xa21ef33efc715994

func NewGrid_valueAt_Results(s *capnp.Segment) (Grid_valueAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{st}, err
}

func NewRootGrid_valueAt_Results(s *capnp.Segment) (Grid_valueAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{st}, err
}

func ReadRootGrid_valueAt_Results(msg *capnp.Message) (Grid_valueAt_Results, error) {
	root, err := msg.Root()
	return Grid_valueAt_Results{root.Struct()}, err
}

func (s Grid_valueAt_Results) String() string {
	str, _ := text.Marshal(0xa21ef33efc715994, s.Struct)
	return str
}

func (s Grid_valueAt_Results) Val() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_valueAt_Results) HasVal() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_valueAt_Results) SetVal(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVal sets the val field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_valueAt_Results) NewVal() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_valueAt_Results) AggParts() (Grid_AggregationPart_List, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_AggregationPart_List{List: p.List()}, err
}

func (s Grid_valueAt_Results) HasAggParts() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_valueAt_Results) SetAggParts(v Grid_AggregationPart_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewAggParts sets the aggParts field to a newly
// allocated Grid_AggregationPart_List, preferring placement in s's segment.
func (s Grid_valueAt_Results) NewAggParts(n int32) (Grid_AggregationPart_List, error) {
	l, err := NewGrid_AggregationPart_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_AggregationPart_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// Grid_valueAt_Results_List is a list of Grid_valueAt_Results.
type Grid_valueAt_Results_List struct{ capnp.List }

// NewGrid_valueAt_Results creates a new list of Grid_valueAt_Results.
func NewGrid_valueAt_Results_List(s *capnp.Segment, sz int32) (Grid_valueAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Grid_valueAt_Results_List{l}, err
}

func (s Grid_valueAt_Results_List) At(i int) Grid_valueAt_Results {
	return Grid_valueAt_Results{s.List.Struct(i)}
}

func (s Grid_valueAt_Results_List) Set(i int, v Grid_valueAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_valueAt_Results_List) String() string {
	str, _ := text.MarshalList(0xa21ef33efc715994, s.List)
	return str
}

// Grid_valueAt_Results_Future is a wrapper for a Grid_valueAt_Results promised by a client call.
type Grid_valueAt_Results_Future struct{ *capnp.Future }

func (p Grid_valueAt_Results_Future) Struct() (Grid_valueAt_Results, error) {
	s, err := p.Future.Struct()
	return Grid_valueAt_Results{s}, err
}

func (p Grid_valueAt_Results_Future) Val() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

type Grid_latLonBounds_Params struct{ capnp.Struct }

// Grid_latLonBounds_Params_TypeID is the unique identifier for the type Grid_latLonBounds_Params.
const Grid_latLonBounds_Params_TypeID = 0xf37338992466bd97

func NewGrid_latLonBounds_Params(s *capnp.Segment) (Grid_latLonBounds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_latLonBounds_Params{st}, err
}

func NewRootGrid_latLonBounds_Params(s *capnp.Segment) (Grid_latLonBounds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_latLonBounds_Params{st}, err
}

func ReadRootGrid_latLonBounds_Params(msg *capnp.Message) (Grid_latLonBounds_Params, error) {
	root, err := msg.Root()
	return Grid_latLonBounds_Params{root.Struct()}, err
}

func (s Grid_latLonBounds_Params) String() string {
	str, _ := text.Marshal(0xf37338992466bd97, s.Struct)
	return str
}

func (s Grid_latLonBounds_Params) UseCellCenter() bool {
	return s.Struct.Bit(0)
}

func (s Grid_latLonBounds_Params) SetUseCellCenter(v bool) {
	s.Struct.SetBit(0, v)
}

// Grid_latLonBounds_Params_List is a list of Grid_latLonBounds_Params.
type Grid_latLonBounds_Params_List struct{ capnp.List }

// NewGrid_latLonBounds_Params creates a new list of Grid_latLonBounds_Params.
func NewGrid_latLonBounds_Params_List(s *capnp.Segment, sz int32) (Grid_latLonBounds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Grid_latLonBounds_Params_List{l}, err
}

func (s Grid_latLonBounds_Params_List) At(i int) Grid_latLonBounds_Params {
	return Grid_latLonBounds_Params{s.List.Struct(i)}
}

func (s Grid_latLonBounds_Params_List) Set(i int, v Grid_latLonBounds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_latLonBounds_Params_List) String() string {
	str, _ := text.MarshalList(0xf37338992466bd97, s.List)
	return str
}

// Grid_latLonBounds_Params_Future is a wrapper for a Grid_latLonBounds_Params promised by a client call.
type Grid_latLonBounds_Params_Future struct{ *capnp.Future }

func (p Grid_latLonBounds_Params_Future) Struct() (Grid_latLonBounds_Params, error) {
	s, err := p.Future.Struct()
	return Grid_latLonBounds_Params{s}, err
}

type Grid_latLonBounds_Results struct{ capnp.Struct }

// Grid_latLonBounds_Results_TypeID is the unique identifier for the type Grid_latLonBounds_Results.
const Grid_latLonBounds_Results_TypeID = 0xe57fce57d3443377

func NewGrid_latLonBounds_Results(s *capnp.Segment) (Grid_latLonBounds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{st}, err
}

func NewRootGrid_latLonBounds_Results(s *capnp.Segment) (Grid_latLonBounds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{st}, err
}

func ReadRootGrid_latLonBounds_Results(msg *capnp.Message) (Grid_latLonBounds_Results, error) {
	root, err := msg.Root()
	return Grid_latLonBounds_Results{root.Struct()}, err
}

func (s Grid_latLonBounds_Results) String() string {
	str, _ := text.Marshal(0xe57fce57d3443377, s.Struct)
	return str
}

func (s Grid_latLonBounds_Results) Tl() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(0)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasTl() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_latLonBounds_Results) SetTl(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTl sets the tl field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewTl() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Tr() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(1)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasTr() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_latLonBounds_Results) SetTr(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewTr sets the tr field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewTr() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Br() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(2)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasBr() bool {
	return s.Struct.HasPtr(2)
}

func (s Grid_latLonBounds_Results) SetBr(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewBr sets the br field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewBr() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Bl() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(3)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasBl() bool {
	return s.Struct.HasPtr(3)
}

func (s Grid_latLonBounds_Results) SetBl(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewBl sets the bl field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewBl() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// Grid_latLonBounds_Results_List is a list of Grid_latLonBounds_Results.
type Grid_latLonBounds_Results_List struct{ capnp.List }

// NewGrid_latLonBounds_Results creates a new list of Grid_latLonBounds_Results.
func NewGrid_latLonBounds_Results_List(s *capnp.Segment, sz int32) (Grid_latLonBounds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Grid_latLonBounds_Results_List{l}, err
}

func (s Grid_latLonBounds_Results_List) At(i int) Grid_latLonBounds_Results {
	return Grid_latLonBounds_Results{s.List.Struct(i)}
}

func (s Grid_latLonBounds_Results_List) Set(i int, v Grid_latLonBounds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_latLonBounds_Results_List) String() string {
	str, _ := text.MarshalList(0xe57fce57d3443377, s.List)
	return str
}

// Grid_latLonBounds_Results_Future is a wrapper for a Grid_latLonBounds_Results promised by a client call.
type Grid_latLonBounds_Results_Future struct{ *capnp.Future }

func (p Grid_latLonBounds_Results_Future) Struct() (Grid_latLonBounds_Results, error) {
	s, err := p.Future.Struct()
	return Grid_latLonBounds_Results{s}, err
}

func (p Grid_latLonBounds_Results_Future) Tl() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_latLonBounds_Results_Future) Tr() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(1, nil)}
}

func (p Grid_latLonBounds_Results_Future) Br() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(2, nil)}
}

func (p Grid_latLonBounds_Results_Future) Bl() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(3, nil)}
}

type Grid_streamCells_Params struct{ capnp.Struct }

// Grid_streamCells_Params_TypeID is the unique identifier for the type Grid_streamCells_Params.
const Grid_streamCells_Params_TypeID = 0xd9add1b3fdcfdbba

func NewGrid_streamCells_Params(s *capnp.Segment) (Grid_streamCells_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Grid_streamCells_Params{st}, err
}

func NewRootGrid_streamCells_Params(s *capnp.Segment) (Grid_streamCells_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Grid_streamCells_Params{st}, err
}

func ReadRootGrid_streamCells_Params(msg *capnp.Message) (Grid_streamCells_Params, error) {
	root, err := msg.Root()
	return Grid_streamCells_Params{root.Struct()}, err
}

func (s Grid_streamCells_Params) String() string {
	str, _ := text.Marshal(0xd9add1b3fdcfdbba, s.Struct)
	return str
}

func (s Grid_streamCells_Params) Callback() Grid_Callback {
	p, _ := s.Struct.Ptr(0)
	return Grid_Callback{Client: p.Interface().Client()}
}

func (s Grid_streamCells_Params) HasCallback() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_streamCells_Params) SetCallback(v Grid_Callback) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s Grid_streamCells_Params) MaxNoOfCellsPerSend() uint64 {
	return s.Struct.Uint64(0) ^ 100
}

func (s Grid_streamCells_Params) SetMaxNoOfCellsPerSend(v uint64) {
	s.Struct.SetUint64(0, v^100)
}

// Grid_streamCells_Params_List is a list of Grid_streamCells_Params.
type Grid_streamCells_Params_List struct{ capnp.List }

// NewGrid_streamCells_Params creates a new list of Grid_streamCells_Params.
func NewGrid_streamCells_Params_List(s *capnp.Segment, sz int32) (Grid_streamCells_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Grid_streamCells_Params_List{l}, err
}

func (s Grid_streamCells_Params_List) At(i int) Grid_streamCells_Params {
	return Grid_streamCells_Params{s.List.Struct(i)}
}

func (s Grid_streamCells_Params_List) Set(i int, v Grid_streamCells_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_streamCells_Params_List) String() string {
	str, _ := text.MarshalList(0xd9add1b3fdcfdbba, s.List)
	return str
}

// Grid_streamCells_Params_Future is a wrapper for a Grid_streamCells_Params promised by a client call.
type Grid_streamCells_Params_Future struct{ *capnp.Future }

func (p Grid_streamCells_Params_Future) Struct() (Grid_streamCells_Params, error) {
	s, err := p.Future.Struct()
	return Grid_streamCells_Params{s}, err
}

func (p Grid_streamCells_Params_Future) Callback() Grid_Callback {
	return Grid_Callback{Client: p.Future.Field(0, nil).Client()}
}

type Grid_streamCells_Results struct{ capnp.Struct }

// Grid_streamCells_Results_TypeID is the unique identifier for the type Grid_streamCells_Results.
const Grid_streamCells_Results_TypeID = 0x9b8dd52b78a7ebd2

func NewGrid_streamCells_Results(s *capnp.Segment) (Grid_streamCells_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{st}, err
}

func NewRootGrid_streamCells_Results(s *capnp.Segment) (Grid_streamCells_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{st}, err
}

func ReadRootGrid_streamCells_Results(msg *capnp.Message) (Grid_streamCells_Results, error) {
	root, err := msg.Root()
	return Grid_streamCells_Results{root.Struct()}, err
}

func (s Grid_streamCells_Results) String() string {
	str, _ := text.Marshal(0x9b8dd52b78a7ebd2, s.Struct)
	return str
}

// Grid_streamCells_Results_List is a list of Grid_streamCells_Results.
type Grid_streamCells_Results_List struct{ capnp.List }

// NewGrid_streamCells_Results creates a new list of Grid_streamCells_Results.
func NewGrid_streamCells_Results_List(s *capnp.Segment, sz int32) (Grid_streamCells_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_streamCells_Results_List{l}, err
}

func (s Grid_streamCells_Results_List) At(i int) Grid_streamCells_Results {
	return Grid_streamCells_Results{s.List.Struct(i)}
}

func (s Grid_streamCells_Results_List) Set(i int, v Grid_streamCells_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_streamCells_Results_List) String() string {
	str, _ := text.MarshalList(0x9b8dd52b78a7ebd2, s.List)
	return str
}

// Grid_streamCells_Results_Future is a wrapper for a Grid_streamCells_Results promised by a client call.
type Grid_streamCells_Results_Future struct{ *capnp.Future }

func (p Grid_streamCells_Results_Future) Struct() (Grid_streamCells_Results, error) {
	s, err := p.Future.Struct()
	return Grid_streamCells_Results{s}, err
}

const schema_d373e9739460aa23 = "x\xda\xa4Vo\x8c\x1ce\x19\x7f\x9e\xf7\xdd\xb9\xb9\xbb" +
	"\xddu\xee\xed.BO\xe0L=\x129\xa5\xc2\x1dM" +
	"\xec%u\xf7\xb8B\xa1\xf1\xf0\xde\xab@\xae\x91\x84\xb9" +
	"\xdd\xe9v`v\xa6\x9d\xd9\xbd\xbd\x1aKm\x85X\xa3" +
	"\xb54\xa9\xe2!1\x96\xf0\xaf\xa6F(\xa0\xb6z\x0a" +
	"_\xac\x88\x11jS\xb4\x8a\x1f\xfc\x83MS\x12\x03$" +
	"j\xb00\xe6\x99\xddwf\xaf\xb7\x964~\xd9\x99}" +
	"\xdfg\x9e\xf7\xfd=\xbf\xe7\xcf\xef\xc3Z\x91]\xa7\xfd" +
	"(\x0d wk]\xe1C\xc7\xe6\xf4[\x8e\xfe\xeek" +
	" \xfb\x10\x01R:\xc0\xc8\x0bZ?\x02\xe6^\xd4\x0a" +
	"\x80\xe1\xb6\xab\xbe:\xedz\x1b\xbe\x0eb\xb9\xda?\xa3" +
	"mDH\x85\x9fx\xf0\xef\xaf.\xbc\xb5w?}\x9a" +
	"jn\xe5Nj\xef\x00\x8e\x9c\xd2\x06\x100\xfc\xed\xd9" +
	"'\xe6>vr\xcf\xb7A\xf4\xa9O\xdf\xecZA\x9f" +
	"\xbe<\xf0\xa1\xa1\x85\xe1\x17Z;\x1a\xd2\xd6)\xda\xc2" +
	"\xdc\x9f\xbb\xe8\xd4\xfd\xd3[\xcf}\xea\xed+\x1fi\x19" +
	"02@\x9d\x91\x81\xa67\x00C|\xe6\xf1J\xe3\xb5" +
	"7\x1e\x03\x91f\xe1G\xbew\xd7\xfe\xe0Lp\x02\x00" +
	"su\xfdhn\xbbN\xf6\xdb\xf4/#\xe0\xcf\x7f\xb6" +
	"\xe7\xf9\xcc[\x1b\x1fO\xeepgw/\xdd\xe1\xa9\xe2" +
	"\xaa/\x95\xd8\xc2\x93\xad#\xa2\xad\x1b\xbbG\xe9\x88\x89" +
	"\xee\xd3\x80\xe1\x15\xa3#\xff\xb8\xf4\xa6\xb5\x87\x08\x1f\x0b" +
	"\x7f\xf1W\xf3\x9b\x87\x83\xab\xff\xd6\xba\xcc\xaa\x1e\x86\xb9" +
	"\xb1\x1e\xc2\xbc\xa6\x87\xac\xc3\xae\x99\xee;\x7f\xff\x97#" +
	"\xe7YGQ\xb9\xa4\xf7h\xee\x8a^z[\xdeK\x97" +
	"?q\xdbK_\xdc%W\xbf\x0a\xa2\x8f'\xa6t\xf9" +
	"\xde_\xe5vF\x86\xdb{\xd7\xe5\x0e\xd2[x\xf4\x8f" +
	"/\xbf\xfb\xcc\xf1\xef\x9fj1\xd4\x0c\xd6\xbe\xde\x88\xa2" +
	"\xf9\xc8]\xecA\xa4\xf9\xa2X`zWNK\xaf\x03" +
	"\x18Y\x9d>\x869;s)@\xd8\x18Y{\xe2\x8e" +
	"\xdf\xecx\xbd\x1d\xf7tf\x88\xdc\x99\x19B\xe2]\xd5" +
	"\xf7\xc1{\xbcGOGHZ1[\x95]F\x06k" +
	"\xb2t\xdeO\xfe\xb9y\xef\xd6cO\x9di\xa6D\xf3" +
	"B\xf3\xd9)2x,K\xec=\xa4g\xcc\xcb\xbd{" +
	"\xcf\xb6<4-Nf\x87\x11p\xe4O\xd9;(7" +
	"\x1e\\\xd848\xff\xc9\xe0\xed\xf6\xbc[cD\x19p" +
	"\xa3A>\xce^s\xe5\xbdG^\xfb\xce\xbf\xda\x92\xc7" +
	"6\x96\x11q?\xfc\xec\x1f\x86\xbc'R\xffn\xdb\x91" +
	"F?\xed\xbcr*x\xfd\x9d\xec\xca\xf7\xce\xe3`\xad" +
	"\x9e\xc2Tn\xb5q87fD\x84\x19\xa7\xe1\xfe\xb0" +
	"\xe2\xdb\xe5\x95%s\x0bw\xb7\x8c\xae\xa3w\xdf\x0a<" +
	"\xa7^\xb3=wp\xca\x0a\xea\x0e\xaf\x052\xc5)\xb3" +
	"\x11@dW\x00\xc8n\x8e2\xcfP\xf7\xad\x00{\x80" +
	"a\x0f`\xec'\xa5\xfc\x8c\x9b\x8e3c\x96\xeeY\x19" +
	"Xny\xdcr\x9c \xf6\x17\x1b3e<k:u" +
	"k\xac6X\x984}\xb3\x1a\xc8||\xe0v:p" +
	"\x8e\xa3\xbc\x8f\xa1@\xccS\x98\xc4NZ\xfc\x02G\xb9" +
	"\x9b\xa1`,O\xe1\x15\xf7o\x04\x90\xf7q\x94\x0f0" +
	"\x14<\x93G\x8e(\xf6\x90\xe5n\x8er?C\x91z" +
	"%\x8f)D\xb1o\x17\x80|\x80\xa3|\x98@x\x0d" +
	"\x05B/yN\x0cH\xc5\x01\xb8\xe7\xc6\x06f\xa5\x82" +
	"FRu\x80h\x00\x86\xb6[r\xeaek\x0c+\x95" +
	"I\xd3\xaf\x05\x80\x08\x0c\xb1-*qt\x83\x9ao\x99" +
	"\xd5$\x1c\xba\xd3\x16\x8e\xd8\xca\xf5\xd6\x9a5\xf3v\x0a" +
	"Jl\xd5N\xc2hBB\xc1\xf5\xcaf\xcd\xc4\xbe\x84" +
	"v@\xec\xebt\xb6\x0arDC- \x17\xca\xe3\xd5" +
	"\x14\xa6A\x8e\xf2\xda\xb6(_\xb3\x1e@~\x9c\xa3\xbc" +
	"\x99\xa1>k:\x1d\xce0\x15b\x00\xfc\x00\xe0$G" +
	"\xecK:\x06 -\xc6\x17Aw\xcb\xe8X\xa5\xe2[" +
	"\x85\x8aI\xf95\x89(\x8b\x11uG\x86\x00\x90\x89\xa7" +
	"\xe9\xa1\x89\x837\x00\xa0.\x0e\xac\x00\xc0^1O\x8f" +
	"\xac\xd8G\x0f.\xbeB&]b'\x99\xa0\xd8F\x8b" +
	")\xb1u\x94\x8e\x176\xed\x19\xc2\xa4G\xb7\x98\xa6G" +
	"\x8f\x90\xf4H\x8b[\xe8\x91\x11cC\x00\x86\xeb\xb9\x96" +
	"\xd1\x18\x9b\xad\xechLXe\xdbt\xf5\xaa\xed\xeaU" +
	"sN\x0f\xeaU\xc3\xa6\x0d\xbb\xb5a\xceV\x0a\xd5\xe8" +
	"\xd5hl\xa0M\xfaiL\xd8\xaea\xd3Oc\xc2\x9c" +
	"3\xec\x09sni\xb0\xcbv\xd5r\x03\xaa\xa2fJ" +
	"\x03,\xb5)9^`\x05\xb5\xdb\x15/\x85&1\xb2" +
	"/\xe6\xc5$^>\xc7Qnn\xe3\xc5\xea\x07\x90w" +
	"q\x94N[\xf6\xdb\xb4X\xe6(\xb7P\xf6\xf3<r" +
	"\x00Q%\x06\x9df\x9dtf\x90\xd7h1\xee\xda\xad" +
	"\xc5\x19\x7f\xe9\xe2\xc5q\x1dc\x8c\x08o\xf1m\xfa5" +
	" \xd2\xdb\xf0\x0dw\xc27\x9a\xe0C\x05\x8f\x90l\xe6" +
	"(k\x04\x0f\x9b\xf0\x88\xf7\x08\xde\x1c\xc3\x81(\xbb\x97" +
	"\x02,\xf8^c\xdcs:\xe1\xf1-\xf3&\xdf,\x11" +
	"\x9e40L\x03\x16\xec\x88\x0b\xf5wQ\xe6Fh\x0a" +
	"S\x917\x02\xf1~\xc5C\x8b\x1f\xe5(\xaf\xbf@\x8f" +
	"Y\xd2\x07U\xd3\x84(N)\xae\x01\xc4s\x06\x95\x06" +
	"\x11b\x0a\x98\xe8\xd1C\xd5Y\x01\x83\"N\xe2\xfb\xb4" +
	"\x1b\xcaC^\x0d\xda/\xbe>\xb9ctoDq\xdd" +
	"#\x00\xf2z\x8e\xb2\xc80,\xc5\xd7\x01\x14\xc9\xbc\xa6" +
	"\xd2\x03\x0c\xab\xe6\xdc\xad\xdeg6\x8d#\xb9\x9f\xb4\xfc" +
	"\x0d\xba\xe5\x96\x9b\xd8\xb0\xdc\x96\xef*z\xd1\x90K\xf8" +
	"\x11\xcb\x87\x13N\xc4%\xa3I.\x09\xb1\xabM\x1c\x88" +
	"\xf5\x03\x11+\xad\xd8\x87*\xa3\x98J\xa9$h\xf2\xf2" +
	"(bj\xf0\xa2\x127\xe2\xf8\xe7\x81\x89\x17ud\xf1" +
	"@E%\xf9\xc4\xc2F`\xe29\x1d\xb9\xd2H\xc9\xe8" +
	"\x17\x07)\xd2\x07tL\xc6-*\xd1&\xbe1\x03L" +
	"\xec\xd1\x11c\x09\x88J\xafQ\x7fb\xa2\xae\xa3\x16O" +
	"xT\x82C\xd8w\x03\x13\xa6\x8e]\xb1\xa6A%\x11" +
	"\xc5m\xe4sB\x0fUg\x80B\xb37\x14\x17\xcf\xa3" +
	"\"\x86\xaa\xbf\x00\xd2?50@w\xeaV\x11w\xcc" +
	"\xc6\x9f9f\xed\xd3\x9e{\x83\x07F\xdd-\x07E\x0c" +
	"UJ\x80\xee8A\x11e\x0a1<y\xf3\xc3\xd3/" +
	"\x1d\xff\xc1a\xe8\xd4\xa5\x94\x07\xfa\x9ef\x87q~\x8f" +
	"\xea\xff\xffzT\x7fR\xd9\xcdn\xf4\x9f\xbd\xbf^}" +
	"\xed\xb97\xdf\x88[\x94\xdfaq\xa6\xe3b\x87\xcf/" +
	"\xd4\x9a\x9b\x93\x10\x17\xd5\xc4P\xa7b\x1eJ\x0a\xc5\xf0" +
	"\xbdF,{\x8c\x92\xe7\\\x9c\x06\x8a\xa6\x01.\x9a\xe6" +
	"\xc3\xadi>\xc8p\xa0DFI{m\xefY\x1d\xdb" +
	"\xeby#dr\xa0\xa9\x9f.\x8b\xbd\xcf\xcf\x00\xc8o" +
	"q\x94\x8f&5~\xe0n\x00\xf9]\x8e\xf2\x10\x91\x83" +
	"yd\x88\xe2 \xc9\xa7'9\xcagU\x87E\x14O" +
	"S\x17;\xc4Q\xfe\x98\xe4\x136\xe5\xd3s>\x80|" +
	"\x96\xa3|\x9e\xa1\xd0X\x1e5D\xb1@\x9a\xea\xa7\x1c" +
	"\xe5/Y\x94t\x8e\xe7\x8e{\xa0{~\xb9\x03%v" +
	"\xc5\xf5|\xebV\x0f\x0cJ[RKZ$\x97.B" +
	"s\xf9V\xad\xee\xbbS\x1e\x0cPS\x08b\xc5u\x11" +
	"ZlQbO\x9a\xbeN\x91k\xf1\x82(\xb2\x043" +
	"\xc3Q^\xc60\xac\x07\x16\xf17\x0e\x03\x96[\xb3\xfc" +
	"\xff\xed\xb4M>\xb7\xa8\xbe\xb0\xbcku\xe5\xa5\xa3\xa6" +
	"\xd9\xf4Z\xe32\x13\x86\xcdZ[\x96\xd4Z\x16\xdf\x0b" +
	"[\xc5\xb6,)\xb6,{7\\ZmY~.\\" +
	"Zn\xb8IM:\xb4Q\x03\x86\x1a \xaf\xdb*\xf2" +
	"\xdc\xf5\x14\xce\xff\x06\x00\x00\xff\xff\xcb\xe5\x06\xc6"

func init() {
	schemas.Register(schema_d373e9739460aa23,
		0x8cd7ba490778c79a,
		0x8e536f6e598b2579,
		0x948ff2bdd6e6972f,
		0x9b8dd52b78a7ebd2,
		0x9bc132bd2a1b1fcf,
		0xa21ef33efc715994,
		0xa5ecdc7767a6b301,
		0xa6005af20cc08dbe,
		0xa8bd0263833540b0,
		0xac444617ef333a1d,
		0xb9e2d85d086206ff,
		0xd639518280cb55d3,
		0xd9add1b3fdcfdbba,
		0xe42973b29661e3c6,
		0xe57fce57d3443377,
		0xe7a46f6b1610256f,
		0xe9b0c7718f68f6bb,
		0xeb7e6f1c610c079a,
		0xf37338992466bd97,
		0xf79edcb97e1e2deb,
		0xf804a76f2ada54b6,
		0xfe2e0dfae573d9d0)
}
