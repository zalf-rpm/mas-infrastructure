// Code generated by capnpc-go. DO NOT EDIT.

package persistence

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	persistence "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/capnp/persistence"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/common"
	strconv "strconv"
)

type VatId struct{ capnp.Struct }

// VatId_TypeID is the unique identifier for the type VatId.
const VatId_TypeID = 0xe10a5d74d58bd18d

func NewVatId(s *capnp.Segment) (VatId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return VatId{st}, err
}

func NewRootVatId(s *capnp.Segment) (VatId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return VatId{st}, err
}

func ReadRootVatId(msg *capnp.Message) (VatId, error) {
	root, err := msg.Root()
	return VatId{root.Struct()}, err
}

func (s VatId) String() string {
	str, _ := text.Marshal(0xe10a5d74d58bd18d, s.Struct)
	return str
}

func (s VatId) PublicKey0() uint64 {
	return s.Struct.Uint64(0)
}

func (s VatId) SetPublicKey0(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s VatId) PublicKey1() uint64 {
	return s.Struct.Uint64(8)
}

func (s VatId) SetPublicKey1(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s VatId) PublicKey2() uint64 {
	return s.Struct.Uint64(16)
}

func (s VatId) SetPublicKey2(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s VatId) PublicKey3() uint64 {
	return s.Struct.Uint64(24)
}

func (s VatId) SetPublicKey3(v uint64) {
	s.Struct.SetUint64(24, v)
}

// VatId_List is a list of VatId.
type VatId_List struct{ capnp.List }

// NewVatId creates a new list of VatId.
func NewVatId_List(s *capnp.Segment, sz int32) (VatId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return VatId_List{l}, err
}

func (s VatId_List) At(i int) VatId { return VatId{s.List.Struct(i)} }

func (s VatId_List) Set(i int, v VatId) error { return s.List.SetStruct(i, v.Struct) }

func (s VatId_List) String() string {
	str, _ := text.MarshalList(0xe10a5d74d58bd18d, s.List)
	return str
}

// VatId_Future is a wrapper for a VatId promised by a client call.
type VatId_Future struct{ *capnp.Future }

func (p VatId_Future) Struct() (VatId, error) {
	s, err := p.Future.Struct()
	return VatId{s}, err
}

type Address struct{ capnp.Struct }
type Address_ip6 Address
type Address_Which uint16

const (
	Address_Which_ip6  Address_Which = 0
	Address_Which_host Address_Which = 1
)

func (w Address_Which) String() string {
	const s = "ip6host"
	switch w {
	case Address_Which_ip6:
		return s[0:3]
	case Address_Which_host:
		return s[3:7]

	}
	return "Address_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Address_TypeID is the unique identifier for the type Address.
const Address_TypeID = 0xfb47810671a05b0d

func NewAddress(s *capnp.Segment) (Address, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Address{st}, err
}

func NewRootAddress(s *capnp.Segment) (Address, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Address{st}, err
}

func ReadRootAddress(msg *capnp.Message) (Address, error) {
	root, err := msg.Root()
	return Address{root.Struct()}, err
}

func (s Address) String() string {
	str, _ := text.Marshal(0xfb47810671a05b0d, s.Struct)
	return str
}

func (s Address) Which() Address_Which {
	return Address_Which(s.Struct.Uint16(18))
}
func (s Address) Ip6() Address_ip6 { return Address_ip6(s) }

func (s Address) SetIp6() {
	s.Struct.SetUint16(18, 0)
}

func (s Address_ip6) Lower64() uint64 {
	return s.Struct.Uint64(0)
}

func (s Address_ip6) SetLower64(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Address_ip6) Upper64() uint64 {
	return s.Struct.Uint64(8)
}

func (s Address_ip6) SetUpper64(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Address) Host() (string, error) {
	if s.Struct.Uint16(18) != 1 {
		panic("Which() != host")
	}
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Address) HasHost() bool {
	if s.Struct.Uint16(18) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s Address) HostBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Address) SetHost(v string) error {
	s.Struct.SetUint16(18, 1)
	return s.Struct.SetText(0, v)
}

func (s Address) Port() uint16 {
	return s.Struct.Uint16(16)
}

func (s Address) SetPort(v uint16) {
	s.Struct.SetUint16(16, v)
}

// Address_List is a list of Address.
type Address_List struct{ capnp.List }

// NewAddress creates a new list of Address.
func NewAddress_List(s *capnp.Segment, sz int32) (Address_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1}, sz)
	return Address_List{l}, err
}

func (s Address_List) At(i int) Address { return Address{s.List.Struct(i)} }

func (s Address_List) Set(i int, v Address) error { return s.List.SetStruct(i, v.Struct) }

func (s Address_List) String() string {
	str, _ := text.MarshalList(0xfb47810671a05b0d, s.List)
	return str
}

// Address_Future is a wrapper for a Address promised by a client call.
type Address_Future struct{ *capnp.Future }

func (p Address_Future) Struct() (Address, error) {
	s, err := p.Future.Struct()
	return Address{s}, err
}

func (p Address_Future) Ip6() Address_ip6_Future { return Address_ip6_Future{p.Future} }

// Address_ip6_Future is a wrapper for a Address_ip6 promised by a client call.
type Address_ip6_Future struct{ *capnp.Future }

func (p Address_ip6_Future) Struct() (Address_ip6, error) {
	s, err := p.Future.Struct()
	return Address_ip6{s}, err
}

type VatPath struct{ capnp.Struct }

// VatPath_TypeID is the unique identifier for the type VatPath.
const VatPath_TypeID = 0xd9eccdf2dbc48087

func NewVatPath(s *capnp.Segment) (VatPath, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VatPath{st}, err
}

func NewRootVatPath(s *capnp.Segment) (VatPath, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VatPath{st}, err
}

func ReadRootVatPath(msg *capnp.Message) (VatPath, error) {
	root, err := msg.Root()
	return VatPath{root.Struct()}, err
}

func (s VatPath) String() string {
	str, _ := text.Marshal(0xd9eccdf2dbc48087, s.Struct)
	return str
}

func (s VatPath) Id() (VatId, error) {
	p, err := s.Struct.Ptr(0)
	return VatId{Struct: p.Struct()}, err
}

func (s VatPath) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s VatPath) SetId(v VatId) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewId sets the id field to a newly
// allocated VatId struct, preferring placement in s's segment.
func (s VatPath) NewId() (VatId, error) {
	ss, err := NewVatId(s.Struct.Segment())
	if err != nil {
		return VatId{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s VatPath) Address() (Address, error) {
	p, err := s.Struct.Ptr(1)
	return Address{Struct: p.Struct()}, err
}

func (s VatPath) HasAddress() bool {
	return s.Struct.HasPtr(1)
}

func (s VatPath) SetAddress(v Address) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewAddress sets the address field to a newly
// allocated Address struct, preferring placement in s's segment.
func (s VatPath) NewAddress() (Address, error) {
	ss, err := NewAddress(s.Struct.Segment())
	if err != nil {
		return Address{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// VatPath_List is a list of VatPath.
type VatPath_List struct{ capnp.List }

// NewVatPath creates a new list of VatPath.
func NewVatPath_List(s *capnp.Segment, sz int32) (VatPath_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return VatPath_List{l}, err
}

func (s VatPath_List) At(i int) VatPath { return VatPath{s.List.Struct(i)} }

func (s VatPath_List) Set(i int, v VatPath) error { return s.List.SetStruct(i, v.Struct) }

func (s VatPath_List) String() string {
	str, _ := text.MarshalList(0xd9eccdf2dbc48087, s.List)
	return str
}

// VatPath_Future is a wrapper for a VatPath promised by a client call.
type VatPath_Future struct{ *capnp.Future }

func (p VatPath_Future) Struct() (VatPath, error) {
	s, err := p.Future.Struct()
	return VatPath{s}, err
}

func (p VatPath_Future) Id() VatId_Future {
	return VatId_Future{Future: p.Future.Field(0, nil)}
}

func (p VatPath_Future) Address() Address_Future {
	return Address_Future{Future: p.Future.Field(1, nil)}
}

type SturdyRef struct{ capnp.Struct }
type SturdyRef_Which uint16

const (
	SturdyRef_Which_transient SturdyRef_Which = 0
	SturdyRef_Which_stored    SturdyRef_Which = 1
)

func (w SturdyRef_Which) String() string {
	const s = "transientstored"
	switch w {
	case SturdyRef_Which_transient:
		return s[0:9]
	case SturdyRef_Which_stored:
		return s[9:15]

	}
	return "SturdyRef_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// SturdyRef_TypeID is the unique identifier for the type SturdyRef.
const SturdyRef_TypeID = 0x886d68271d83de4d

func NewSturdyRef(s *capnp.Segment) (SturdyRef, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SturdyRef{st}, err
}

func NewRootSturdyRef(s *capnp.Segment) (SturdyRef, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SturdyRef{st}, err
}

func ReadRootSturdyRef(msg *capnp.Message) (SturdyRef, error) {
	root, err := msg.Root()
	return SturdyRef{root.Struct()}, err
}

func (s SturdyRef) String() string {
	str, _ := text.Marshal(0x886d68271d83de4d, s.Struct)
	return str
}

func (s SturdyRef) Which() SturdyRef_Which {
	return SturdyRef_Which(s.Struct.Uint16(0))
}
func (s SturdyRef) Transient() (SturdyRef_Transient, error) {
	if s.Struct.Uint16(0) != 0 {
		panic("Which() != transient")
	}
	p, err := s.Struct.Ptr(0)
	return SturdyRef_Transient{Struct: p.Struct()}, err
}

func (s SturdyRef) HasTransient() bool {
	if s.Struct.Uint16(0) != 0 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s SturdyRef) SetTransient(v SturdyRef_Transient) error {
	s.Struct.SetUint16(0, 0)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTransient sets the transient field to a newly
// allocated SturdyRef_Transient struct, preferring placement in s's segment.
func (s SturdyRef) NewTransient() (SturdyRef_Transient, error) {
	s.Struct.SetUint16(0, 0)
	ss, err := NewSturdyRef_Transient(s.Struct.Segment())
	if err != nil {
		return SturdyRef_Transient{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s SturdyRef) Stored() (SturdyRef_Stored, error) {
	if s.Struct.Uint16(0) != 1 {
		panic("Which() != stored")
	}
	p, err := s.Struct.Ptr(0)
	return SturdyRef_Stored{Struct: p.Struct()}, err
}

func (s SturdyRef) HasStored() bool {
	if s.Struct.Uint16(0) != 1 {
		return false
	}
	return s.Struct.HasPtr(0)
}

func (s SturdyRef) SetStored(v SturdyRef_Stored) error {
	s.Struct.SetUint16(0, 1)
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewStored sets the stored field to a newly
// allocated SturdyRef_Stored struct, preferring placement in s's segment.
func (s SturdyRef) NewStored() (SturdyRef_Stored, error) {
	s.Struct.SetUint16(0, 1)
	ss, err := NewSturdyRef_Stored(s.Struct.Segment())
	if err != nil {
		return SturdyRef_Stored{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// SturdyRef_List is a list of SturdyRef.
type SturdyRef_List struct{ capnp.List }

// NewSturdyRef creates a new list of SturdyRef.
func NewSturdyRef_List(s *capnp.Segment, sz int32) (SturdyRef_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SturdyRef_List{l}, err
}

func (s SturdyRef_List) At(i int) SturdyRef { return SturdyRef{s.List.Struct(i)} }

func (s SturdyRef_List) Set(i int, v SturdyRef) error { return s.List.SetStruct(i, v.Struct) }

func (s SturdyRef_List) String() string {
	str, _ := text.MarshalList(0x886d68271d83de4d, s.List)
	return str
}

// SturdyRef_Future is a wrapper for a SturdyRef promised by a client call.
type SturdyRef_Future struct{ *capnp.Future }

func (p SturdyRef_Future) Struct() (SturdyRef, error) {
	s, err := p.Future.Struct()
	return SturdyRef{s}, err
}

func (p SturdyRef_Future) Transient() SturdyRef_Transient_Future {
	return SturdyRef_Transient_Future{Future: p.Future.Field(0, nil)}
}

func (p SturdyRef_Future) Stored() SturdyRef_Stored_Future {
	return SturdyRef_Stored_Future{Future: p.Future.Field(0, nil)}
}

type SturdyRef_Owner struct{ capnp.Struct }

// SturdyRef_Owner_TypeID is the unique identifier for the type SturdyRef_Owner.
const SturdyRef_Owner_TypeID = 0xfdd799ed60c87723

func NewSturdyRef_Owner(s *capnp.Segment) (SturdyRef_Owner, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SturdyRef_Owner{st}, err
}

func NewRootSturdyRef_Owner(s *capnp.Segment) (SturdyRef_Owner, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SturdyRef_Owner{st}, err
}

func ReadRootSturdyRef_Owner(msg *capnp.Message) (SturdyRef_Owner, error) {
	root, err := msg.Root()
	return SturdyRef_Owner{root.Struct()}, err
}

func (s SturdyRef_Owner) String() string {
	str, _ := text.Marshal(0xfdd799ed60c87723, s.Struct)
	return str
}

func (s SturdyRef_Owner) Guid() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SturdyRef_Owner) HasGuid() bool {
	return s.Struct.HasPtr(0)
}

func (s SturdyRef_Owner) GuidBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SturdyRef_Owner) SetGuid(v string) error {
	return s.Struct.SetText(0, v)
}

// SturdyRef_Owner_List is a list of SturdyRef_Owner.
type SturdyRef_Owner_List struct{ capnp.List }

// NewSturdyRef_Owner creates a new list of SturdyRef_Owner.
func NewSturdyRef_Owner_List(s *capnp.Segment, sz int32) (SturdyRef_Owner_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SturdyRef_Owner_List{l}, err
}

func (s SturdyRef_Owner_List) At(i int) SturdyRef_Owner { return SturdyRef_Owner{s.List.Struct(i)} }

func (s SturdyRef_Owner_List) Set(i int, v SturdyRef_Owner) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SturdyRef_Owner_List) String() string {
	str, _ := text.MarshalList(0xfdd799ed60c87723, s.List)
	return str
}

// SturdyRef_Owner_Future is a wrapper for a SturdyRef_Owner promised by a client call.
type SturdyRef_Owner_Future struct{ *capnp.Future }

func (p SturdyRef_Owner_Future) Struct() (SturdyRef_Owner, error) {
	s, err := p.Future.Struct()
	return SturdyRef_Owner{s}, err
}

type SturdyRef_Transient struct{ capnp.Struct }

// SturdyRef_Transient_TypeID is the unique identifier for the type SturdyRef_Transient.
const SturdyRef_Transient_TypeID = 0xa42bd461f2a8a3c8

func NewSturdyRef_Transient(s *capnp.Segment) (SturdyRef_Transient, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SturdyRef_Transient{st}, err
}

func NewRootSturdyRef_Transient(s *capnp.Segment) (SturdyRef_Transient, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return SturdyRef_Transient{st}, err
}

func ReadRootSturdyRef_Transient(msg *capnp.Message) (SturdyRef_Transient, error) {
	root, err := msg.Root()
	return SturdyRef_Transient{root.Struct()}, err
}

func (s SturdyRef_Transient) String() string {
	str, _ := text.Marshal(0xa42bd461f2a8a3c8, s.Struct)
	return str
}

func (s SturdyRef_Transient) Vat() (VatPath, error) {
	p, err := s.Struct.Ptr(0)
	return VatPath{Struct: p.Struct()}, err
}

func (s SturdyRef_Transient) HasVat() bool {
	return s.Struct.HasPtr(0)
}

func (s SturdyRef_Transient) SetVat(v VatPath) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVat sets the vat field to a newly
// allocated VatPath struct, preferring placement in s's segment.
func (s SturdyRef_Transient) NewVat() (VatPath, error) {
	ss, err := NewVatPath(s.Struct.Segment())
	if err != nil {
		return VatPath{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s SturdyRef_Transient) LocalRef() (capnp.Ptr, error) {
	return s.Struct.Ptr(1)
}

func (s SturdyRef_Transient) HasLocalRef() bool {
	return s.Struct.HasPtr(1)
}

func (s SturdyRef_Transient) SetLocalRef(v capnp.Ptr) error {
	return s.Struct.SetPtr(1, v)
}

// SturdyRef_Transient_List is a list of SturdyRef_Transient.
type SturdyRef_Transient_List struct{ capnp.List }

// NewSturdyRef_Transient creates a new list of SturdyRef_Transient.
func NewSturdyRef_Transient_List(s *capnp.Segment, sz int32) (SturdyRef_Transient_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return SturdyRef_Transient_List{l}, err
}

func (s SturdyRef_Transient_List) At(i int) SturdyRef_Transient {
	return SturdyRef_Transient{s.List.Struct(i)}
}

func (s SturdyRef_Transient_List) Set(i int, v SturdyRef_Transient) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SturdyRef_Transient_List) String() string {
	str, _ := text.MarshalList(0xa42bd461f2a8a3c8, s.List)
	return str
}

// SturdyRef_Transient_Future is a wrapper for a SturdyRef_Transient promised by a client call.
type SturdyRef_Transient_Future struct{ *capnp.Future }

func (p SturdyRef_Transient_Future) Struct() (SturdyRef_Transient, error) {
	s, err := p.Future.Struct()
	return SturdyRef_Transient{s}, err
}

func (p SturdyRef_Transient_Future) Vat() VatPath_Future {
	return VatPath_Future{Future: p.Future.Field(0, nil)}
}

func (p SturdyRef_Transient_Future) LocalRef() *capnp.Future {
	return p.Future.Field(1, nil)
}

type SturdyRef_Stored struct{ capnp.Struct }

// SturdyRef_Stored_TypeID is the unique identifier for the type SturdyRef_Stored.
const SturdyRef_Stored_TypeID = 0xcbe679a401315eb8

func NewSturdyRef_Stored(s *capnp.Segment) (SturdyRef_Stored, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return SturdyRef_Stored{st}, err
}

func NewRootSturdyRef_Stored(s *capnp.Segment) (SturdyRef_Stored, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return SturdyRef_Stored{st}, err
}

func ReadRootSturdyRef_Stored(msg *capnp.Message) (SturdyRef_Stored, error) {
	root, err := msg.Root()
	return SturdyRef_Stored{root.Struct()}, err
}

func (s SturdyRef_Stored) String() string {
	str, _ := text.Marshal(0xcbe679a401315eb8, s.Struct)
	return str
}

func (s SturdyRef_Stored) Key0() uint64 {
	return s.Struct.Uint64(0)
}

func (s SturdyRef_Stored) SetKey0(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s SturdyRef_Stored) Key1() uint64 {
	return s.Struct.Uint64(8)
}

func (s SturdyRef_Stored) SetKey1(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s SturdyRef_Stored) Key2() uint64 {
	return s.Struct.Uint64(16)
}

func (s SturdyRef_Stored) SetKey2(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s SturdyRef_Stored) Key3() uint64 {
	return s.Struct.Uint64(24)
}

func (s SturdyRef_Stored) SetKey3(v uint64) {
	s.Struct.SetUint64(24, v)
}

// SturdyRef_Stored_List is a list of SturdyRef_Stored.
type SturdyRef_Stored_List struct{ capnp.List }

// NewSturdyRef_Stored creates a new list of SturdyRef_Stored.
func NewSturdyRef_Stored_List(s *capnp.Segment, sz int32) (SturdyRef_Stored_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return SturdyRef_Stored_List{l}, err
}

func (s SturdyRef_Stored_List) At(i int) SturdyRef_Stored { return SturdyRef_Stored{s.List.Struct(i)} }

func (s SturdyRef_Stored_List) Set(i int, v SturdyRef_Stored) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SturdyRef_Stored_List) String() string {
	str, _ := text.MarshalList(0xcbe679a401315eb8, s.List)
	return str
}

// SturdyRef_Stored_Future is a wrapper for a SturdyRef_Stored promised by a client call.
type SturdyRef_Stored_Future struct{ *capnp.Future }

func (p SturdyRef_Stored_Future) Struct() (SturdyRef_Stored, error) {
	s, err := p.Future.Struct()
	return SturdyRef_Stored{s}, err
}

type Restorer struct{ Client *capnp.Client }

// Restorer_TypeID is the unique identifier for the type Restorer.
const Restorer_TypeID = 0x9fb6218427d92e3c

func (c Restorer) Restore(ctx context.Context, params func(Restorer_restore_Params) error) (Restorer_restore_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9fb6218427d92e3c,
			MethodID:      0,
			InterfaceName: "persistence.capnp:Restorer",
			MethodName:    "restore",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Restorer_restore_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Restorer_restore_Results_Future{Future: ans.Future()}, release
}
func (c Restorer) Drop(ctx context.Context, params func(Restorer_drop_Params) error) (Restorer_drop_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x9fb6218427d92e3c,
			MethodID:      1,
			InterfaceName: "persistence.capnp:Restorer",
			MethodName:    "drop",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Restorer_drop_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Restorer_drop_Results_Future{Future: ans.Future()}, release
}

func (c Restorer) AddRef() Restorer {
	return Restorer{
		Client: c.Client.AddRef(),
	}
}

func (c Restorer) Release() {
	c.Client.Release()
}

// A Restorer_Server is a Restorer with a local implementation.
type Restorer_Server interface {
	Restore(context.Context, Restorer_restore) error

	Drop(context.Context, Restorer_drop) error
}

// Restorer_NewServer creates a new Server from an implementation of Restorer_Server.
func Restorer_NewServer(s Restorer_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Restorer_Methods(nil, s), s, c, policy)
}

// Restorer_ServerToClient creates a new Client from an implementation of Restorer_Server.
// The caller is responsible for calling Release on the returned Client.
func Restorer_ServerToClient(s Restorer_Server, policy *server.Policy) Restorer {
	return Restorer{Client: capnp.NewClient(Restorer_NewServer(s, policy))}
}

// Restorer_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Restorer_Methods(methods []server.Method, s Restorer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9fb6218427d92e3c,
			MethodID:      0,
			InterfaceName: "persistence.capnp:Restorer",
			MethodName:    "restore",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Restore(ctx, Restorer_restore{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x9fb6218427d92e3c,
			MethodID:      1,
			InterfaceName: "persistence.capnp:Restorer",
			MethodName:    "drop",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Drop(ctx, Restorer_drop{call})
		},
	})

	return methods
}

// Restorer_restore holds the state for a server call to Restorer.restore.
// See server.Call for documentation.
type Restorer_restore struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Restorer_restore) Args() Restorer_restore_Params {
	return Restorer_restore_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Restorer_restore) AllocResults() (Restorer_restore_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Restorer_restore_Results{Struct: r}, err
}

// Restorer_drop holds the state for a server call to Restorer.drop.
// See server.Call for documentation.
type Restorer_drop struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Restorer_drop) Args() Restorer_drop_Params {
	return Restorer_drop_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Restorer_drop) AllocResults() (Restorer_drop_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Restorer_drop_Results{Struct: r}, err
}

type Restorer_restore_Params struct{ capnp.Struct }

// Restorer_restore_Params_TypeID is the unique identifier for the type Restorer_restore_Params.
const Restorer_restore_Params_TypeID = 0x8071b2eb61aac3f0

func NewRestorer_restore_Params(s *capnp.Segment) (Restorer_restore_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Restorer_restore_Params{st}, err
}

func NewRootRestorer_restore_Params(s *capnp.Segment) (Restorer_restore_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Restorer_restore_Params{st}, err
}

func ReadRootRestorer_restore_Params(msg *capnp.Message) (Restorer_restore_Params, error) {
	root, err := msg.Root()
	return Restorer_restore_Params{root.Struct()}, err
}

func (s Restorer_restore_Params) String() string {
	str, _ := text.Marshal(0x8071b2eb61aac3f0, s.Struct)
	return str
}

func (s Restorer_restore_Params) SrToken() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Restorer_restore_Params) HasSrToken() bool {
	return s.Struct.HasPtr(0)
}

func (s Restorer_restore_Params) SetSrToken(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s Restorer_restore_Params) Owner() (SturdyRef_Owner, error) {
	p, err := s.Struct.Ptr(1)
	return SturdyRef_Owner{Struct: p.Struct()}, err
}

func (s Restorer_restore_Params) HasOwner() bool {
	return s.Struct.HasPtr(1)
}

func (s Restorer_restore_Params) SetOwner(v SturdyRef_Owner) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOwner sets the owner field to a newly
// allocated SturdyRef_Owner struct, preferring placement in s's segment.
func (s Restorer_restore_Params) NewOwner() (SturdyRef_Owner, error) {
	ss, err := NewSturdyRef_Owner(s.Struct.Segment())
	if err != nil {
		return SturdyRef_Owner{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Restorer_restore_Params_List is a list of Restorer_restore_Params.
type Restorer_restore_Params_List struct{ capnp.List }

// NewRestorer_restore_Params creates a new list of Restorer_restore_Params.
func NewRestorer_restore_Params_List(s *capnp.Segment, sz int32) (Restorer_restore_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Restorer_restore_Params_List{l}, err
}

func (s Restorer_restore_Params_List) At(i int) Restorer_restore_Params {
	return Restorer_restore_Params{s.List.Struct(i)}
}

func (s Restorer_restore_Params_List) Set(i int, v Restorer_restore_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Restorer_restore_Params_List) String() string {
	str, _ := text.MarshalList(0x8071b2eb61aac3f0, s.List)
	return str
}

// Restorer_restore_Params_Future is a wrapper for a Restorer_restore_Params promised by a client call.
type Restorer_restore_Params_Future struct{ *capnp.Future }

func (p Restorer_restore_Params_Future) Struct() (Restorer_restore_Params, error) {
	s, err := p.Future.Struct()
	return Restorer_restore_Params{s}, err
}

func (p Restorer_restore_Params_Future) SrToken() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p Restorer_restore_Params_Future) Owner() SturdyRef_Owner_Future {
	return SturdyRef_Owner_Future{Future: p.Future.Field(1, nil)}
}

type Restorer_restore_Results struct{ capnp.Struct }

// Restorer_restore_Results_TypeID is the unique identifier for the type Restorer_restore_Results.
const Restorer_restore_Results_TypeID = 0xda966d1d252e4d25

func NewRestorer_restore_Results(s *capnp.Segment) (Restorer_restore_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Restorer_restore_Results{st}, err
}

func NewRootRestorer_restore_Results(s *capnp.Segment) (Restorer_restore_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Restorer_restore_Results{st}, err
}

func ReadRootRestorer_restore_Results(msg *capnp.Message) (Restorer_restore_Results, error) {
	root, err := msg.Root()
	return Restorer_restore_Results{root.Struct()}, err
}

func (s Restorer_restore_Results) String() string {
	str, _ := text.Marshal(0xda966d1d252e4d25, s.Struct)
	return str
}

func (s Restorer_restore_Results) Cap() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Restorer_restore_Results) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s Restorer_restore_Results) SetCap(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Restorer_restore_Results_List is a list of Restorer_restore_Results.
type Restorer_restore_Results_List struct{ capnp.List }

// NewRestorer_restore_Results creates a new list of Restorer_restore_Results.
func NewRestorer_restore_Results_List(s *capnp.Segment, sz int32) (Restorer_restore_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Restorer_restore_Results_List{l}, err
}

func (s Restorer_restore_Results_List) At(i int) Restorer_restore_Results {
	return Restorer_restore_Results{s.List.Struct(i)}
}

func (s Restorer_restore_Results_List) Set(i int, v Restorer_restore_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Restorer_restore_Results_List) String() string {
	str, _ := text.MarshalList(0xda966d1d252e4d25, s.List)
	return str
}

// Restorer_restore_Results_Future is a wrapper for a Restorer_restore_Results promised by a client call.
type Restorer_restore_Results_Future struct{ *capnp.Future }

func (p Restorer_restore_Results_Future) Struct() (Restorer_restore_Results, error) {
	s, err := p.Future.Struct()
	return Restorer_restore_Results{s}, err
}

func (p Restorer_restore_Results_Future) Cap() *capnp.Future {
	return p.Future.Field(0, nil)
}

type Restorer_drop_Params struct{ capnp.Struct }

// Restorer_drop_Params_TypeID is the unique identifier for the type Restorer_drop_Params.
const Restorer_drop_Params_TypeID = 0xe9343ab77e29dd66

func NewRestorer_drop_Params(s *capnp.Segment) (Restorer_drop_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Restorer_drop_Params{st}, err
}

func NewRootRestorer_drop_Params(s *capnp.Segment) (Restorer_drop_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Restorer_drop_Params{st}, err
}

func ReadRootRestorer_drop_Params(msg *capnp.Message) (Restorer_drop_Params, error) {
	root, err := msg.Root()
	return Restorer_drop_Params{root.Struct()}, err
}

func (s Restorer_drop_Params) String() string {
	str, _ := text.Marshal(0xe9343ab77e29dd66, s.Struct)
	return str
}

func (s Restorer_drop_Params) SrToken() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Restorer_drop_Params) HasSrToken() bool {
	return s.Struct.HasPtr(0)
}

func (s Restorer_drop_Params) SetSrToken(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

func (s Restorer_drop_Params) Owner() (SturdyRef_Owner, error) {
	p, err := s.Struct.Ptr(1)
	return SturdyRef_Owner{Struct: p.Struct()}, err
}

func (s Restorer_drop_Params) HasOwner() bool {
	return s.Struct.HasPtr(1)
}

func (s Restorer_drop_Params) SetOwner(v SturdyRef_Owner) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOwner sets the owner field to a newly
// allocated SturdyRef_Owner struct, preferring placement in s's segment.
func (s Restorer_drop_Params) NewOwner() (SturdyRef_Owner, error) {
	ss, err := NewSturdyRef_Owner(s.Struct.Segment())
	if err != nil {
		return SturdyRef_Owner{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Restorer_drop_Params_List is a list of Restorer_drop_Params.
type Restorer_drop_Params_List struct{ capnp.List }

// NewRestorer_drop_Params creates a new list of Restorer_drop_Params.
func NewRestorer_drop_Params_List(s *capnp.Segment, sz int32) (Restorer_drop_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Restorer_drop_Params_List{l}, err
}

func (s Restorer_drop_Params_List) At(i int) Restorer_drop_Params {
	return Restorer_drop_Params{s.List.Struct(i)}
}

func (s Restorer_drop_Params_List) Set(i int, v Restorer_drop_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Restorer_drop_Params_List) String() string {
	str, _ := text.MarshalList(0xe9343ab77e29dd66, s.List)
	return str
}

// Restorer_drop_Params_Future is a wrapper for a Restorer_drop_Params promised by a client call.
type Restorer_drop_Params_Future struct{ *capnp.Future }

func (p Restorer_drop_Params_Future) Struct() (Restorer_drop_Params, error) {
	s, err := p.Future.Struct()
	return Restorer_drop_Params{s}, err
}

func (p Restorer_drop_Params_Future) SrToken() *capnp.Future {
	return p.Future.Field(0, nil)
}

func (p Restorer_drop_Params_Future) Owner() SturdyRef_Owner_Future {
	return SturdyRef_Owner_Future{Future: p.Future.Field(1, nil)}
}

type Restorer_drop_Results struct{ capnp.Struct }

// Restorer_drop_Results_TypeID is the unique identifier for the type Restorer_drop_Results.
const Restorer_drop_Results_TypeID = 0xcb74f672266ee797

func NewRestorer_drop_Results(s *capnp.Segment) (Restorer_drop_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Restorer_drop_Results{st}, err
}

func NewRootRestorer_drop_Results(s *capnp.Segment) (Restorer_drop_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Restorer_drop_Results{st}, err
}

func ReadRootRestorer_drop_Results(msg *capnp.Message) (Restorer_drop_Results, error) {
	root, err := msg.Root()
	return Restorer_drop_Results{root.Struct()}, err
}

func (s Restorer_drop_Results) String() string {
	str, _ := text.Marshal(0xcb74f672266ee797, s.Struct)
	return str
}

// Restorer_drop_Results_List is a list of Restorer_drop_Results.
type Restorer_drop_Results_List struct{ capnp.List }

// NewRestorer_drop_Results creates a new list of Restorer_drop_Results.
func NewRestorer_drop_Results_List(s *capnp.Segment, sz int32) (Restorer_drop_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Restorer_drop_Results_List{l}, err
}

func (s Restorer_drop_Results_List) At(i int) Restorer_drop_Results {
	return Restorer_drop_Results{s.List.Struct(i)}
}

func (s Restorer_drop_Results_List) Set(i int, v Restorer_drop_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Restorer_drop_Results_List) String() string {
	str, _ := text.MarshalList(0xcb74f672266ee797, s.List)
	return str
}

// Restorer_drop_Results_Future is a wrapper for a Restorer_drop_Results promised by a client call.
type Restorer_drop_Results_Future struct{ *capnp.Future }

func (p Restorer_drop_Results_Future) Struct() (Restorer_drop_Results, error) {
	s, err := p.Future.Struct()
	return Restorer_drop_Results{s}, err
}

type ExternalPersistent struct{ Client *capnp.Client }

// ExternalPersistent_TypeID is the unique identifier for the type ExternalPersistent.
const ExternalPersistent_TypeID = 0xbdc1d2a8302f6031

func (c ExternalPersistent) AddRef() ExternalPersistent {
	return ExternalPersistent{
		Client: c.Client.AddRef(),
	}
}

func (c ExternalPersistent) Release() {
	c.Client.Release()
}

// A ExternalPersistent_Server is a ExternalPersistent with a local implementation.
type ExternalPersistent_Server interface {
}

// ExternalPersistent_NewServer creates a new Server from an implementation of ExternalPersistent_Server.
func ExternalPersistent_NewServer(s ExternalPersistent_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(ExternalPersistent_Methods(nil, s), s, c, policy)
}

// ExternalPersistent_ServerToClient creates a new Client from an implementation of ExternalPersistent_Server.
// The caller is responsible for calling Release on the returned Client.
func ExternalPersistent_ServerToClient(s ExternalPersistent_Server, policy *server.Policy) ExternalPersistent {
	return ExternalPersistent{Client: capnp.NewClient(ExternalPersistent_NewServer(s, policy))}
}

// ExternalPersistent_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func ExternalPersistent_Methods(methods []server.Method, s ExternalPersistent_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 0)
	}

	return methods
}

type ExternalPersistent_ExternalSaveResults struct{ capnp.Struct }

// ExternalPersistent_ExternalSaveResults_TypeID is the unique identifier for the type ExternalPersistent_ExternalSaveResults.
const ExternalPersistent_ExternalSaveResults_TypeID = 0xcb715d4c82cf27c3

func NewExternalPersistent_ExternalSaveResults(s *capnp.Segment) (ExternalPersistent_ExternalSaveResults, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExternalPersistent_ExternalSaveResults{st}, err
}

func NewRootExternalPersistent_ExternalSaveResults(s *capnp.Segment) (ExternalPersistent_ExternalSaveResults, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExternalPersistent_ExternalSaveResults{st}, err
}

func ReadRootExternalPersistent_ExternalSaveResults(msg *capnp.Message) (ExternalPersistent_ExternalSaveResults, error) {
	root, err := msg.Root()
	return ExternalPersistent_ExternalSaveResults{root.Struct()}, err
}

func (s ExternalPersistent_ExternalSaveResults) String() string {
	str, _ := text.Marshal(0xcb715d4c82cf27c3, s.Struct)
	return str
}

func (s ExternalPersistent_ExternalSaveResults) Results() (persistence.Persistent_SaveResults, error) {
	p, err := s.Struct.Ptr(0)
	return persistence.Persistent_SaveResults{Struct: p.Struct()}, err
}

func (s ExternalPersistent_ExternalSaveResults) HasResults() bool {
	return s.Struct.HasPtr(0)
}

func (s ExternalPersistent_ExternalSaveResults) SetResults(v persistence.Persistent_SaveResults) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResults sets the results field to a newly
// allocated persistence.Persistent_SaveResults struct, preferring placement in s's segment.
func (s ExternalPersistent_ExternalSaveResults) NewResults() (persistence.Persistent_SaveResults, error) {
	ss, err := persistence.NewPersistent_SaveResults(s.Struct.Segment())
	if err != nil {
		return persistence.Persistent_SaveResults{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s ExternalPersistent_ExternalSaveResults) Unreg() common.Callback {
	p, _ := s.Struct.Ptr(1)
	return common.Callback{Client: p.Interface().Client()}
}

func (s ExternalPersistent_ExternalSaveResults) HasUnreg() bool {
	return s.Struct.HasPtr(1)
}

func (s ExternalPersistent_ExternalSaveResults) SetUnreg(v common.Callback) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// ExternalPersistent_ExternalSaveResults_List is a list of ExternalPersistent_ExternalSaveResults.
type ExternalPersistent_ExternalSaveResults_List struct{ capnp.List }

// NewExternalPersistent_ExternalSaveResults creates a new list of ExternalPersistent_ExternalSaveResults.
func NewExternalPersistent_ExternalSaveResults_List(s *capnp.Segment, sz int32) (ExternalPersistent_ExternalSaveResults_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ExternalPersistent_ExternalSaveResults_List{l}, err
}

func (s ExternalPersistent_ExternalSaveResults_List) At(i int) ExternalPersistent_ExternalSaveResults {
	return ExternalPersistent_ExternalSaveResults{s.List.Struct(i)}
}

func (s ExternalPersistent_ExternalSaveResults_List) Set(i int, v ExternalPersistent_ExternalSaveResults) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ExternalPersistent_ExternalSaveResults_List) String() string {
	str, _ := text.MarshalList(0xcb715d4c82cf27c3, s.List)
	return str
}

// ExternalPersistent_ExternalSaveResults_Future is a wrapper for a ExternalPersistent_ExternalSaveResults promised by a client call.
type ExternalPersistent_ExternalSaveResults_Future struct{ *capnp.Future }

func (p ExternalPersistent_ExternalSaveResults_Future) Struct() (ExternalPersistent_ExternalSaveResults, error) {
	s, err := p.Future.Struct()
	return ExternalPersistent_ExternalSaveResults{s}, err
}

func (p ExternalPersistent_ExternalSaveResults_Future) Results() persistence.Persistent_SaveResults_Future {
	return persistence.Persistent_SaveResults_Future{Future: p.Future.Field(0, nil)}
}

func (p ExternalPersistent_ExternalSaveResults_Future) Unreg() common.Callback {
	return common.Callback{Client: p.Future.Field(1, nil).Client()}
}

const schema_855efed3475f6b26 = "x\xda\xc4V_l\x14\xe5\x16?\xbf\xf9fwvK" +
	"\x9b\xdd\xd9)!\xe1B6p\x81B/,\xdd\x96p" +
	"o\x1aH\xd9&\x0d\x17\xa5q\xbf-\x90P-2v" +
	"\xa7t\xc3vw;3Ki\xa2\x16\x15\x83\xf8'\xea" +
	"\x8b\xc6\xf8\x80Q\x1e\x88/&<\x88>\x18\x82hB" +
	"l\x88\x115\x06\x0c&\x98TB\xd4(<\xf8b`" +
	"\xcc7\xdb\x9d\x19\x96-\xc4'\x1f\xda\xec\x9c\xfd\xe6\x9c" +
	"\xf3\xfbs\xce\xb7]\xc7\xd96)\x1dr\xa2D\xdc\x0e" +
	"\x85\x9d\xdf\xcf\xbf\xaf\xff|z\xf2\x08\xa9\xff\x02QH" +
	"R\xe2\xe8\x99\x93s h7\xe5)\x823\xf8\xc3s" +
	"\xcb;\xc6'^ \x9e\x00\x9c5\x07\x1f\xdf\xfe\xf5\x9d" +
	"}\xcf\xd3\x00\x14\x89H\x1b\x0c\xfd\xa8\xed\x0d\xfd\x97H" +
	"{*$N\x17^<\xbeV\x1e9\xfd*\xf1\xa5`" +
	"N\xdb\xa3\xefL\x86\x9f\xd9\xfe'-\x86\x02\"\xedj" +
	"\xe8\x16A\xbb\xe6\x9e\xdc\x92\xba\xdcqt\xc5\x87'H" +
	"M0?-Q\x1c\xda\xd6\xf0\x15mGX!\xd2\x06" +
	"\xc2\xc7\xb4\xb9\xb0\xa2\xcd\x85c\xce\x85\xf7N\xdd\xd2\xbf" +
	"\xf9\xcfIR\x97\x05\xba\x0aI\x0aQ\xcf\xe5p7\xb4" +
	"\x1b\xee+sa\x91=\xbd\x7fc\xd7\xa9K\xe7>\xb9" +
	"7{\xcf\x80\xd2\x09m\xb7\xb2\x84H3\x14e\xfe/" +
	"\xe6\x9c\xef\xf8\xf2\xd9\x9d#\x93\xb3\xa4\xae\x0e\xbc^#" +
	"d\xaf\xf2\x05\xb4\xaa\"\xd2O*\"\xfd\x9b\xd7Kk" +
	"\xcc?\xec\xd9\x1ak\xb28\xb38\xd2\x0f\x92\x9d\x8f\xf6" +
	"\xa5qr\xfa\xa7Y\xe2\xcb \xfbm\xca\xa2\xcb\xdb\xca" +
	"Rhm\x11\x91&\x1a\xb9Np\x8e\x1d\xf9\xec\xfb[" +
	"\x17\x7f\xb9Lj\"@\xad\x0bI\xbb\x1a\xb9\xa4\xddp" +
	"\xcf\xceED\xc9\xd5\x83\xa9\xd5\xcb'\xde\xb82/\x14" +
	"D\xcdLtX\x085\x18\xed#8\xaf|\xf5\xd2\xb7" +
	"\xf6H\xcb5!\x94\xecg\x13\x95\xb5\x89\xe8\xa7Z5" +
	"\xea\xf6\x1f\x15\x85\xc7\xae\xae{\xfaL\xef\xa6\x1bA\xd5" +
	"w\xb7\xf4\x8ad#-\xa2\x9a\xa7\x1cO\x80\xdd\xad:" +
	"\xa2\xda\xc7-\x97\xb4\xcf[D\xbas-\x1f\x10\x9c\x7f" +
	"O]\xd8\xff\xeb[\xdf\xddn\x90\x06\x02\xf4\xd6E\x09" +
	"h\x83\x8b\xc4\xe1\x1d\x8b\xfa\xe8m\xa7b\x98V\xc1\xb2" +
	"\x0d\xb94j\xa4F\xf5J\xa9\xd2\x9b3,\xbbl\x1a" +
	"f\xca\xac}X\x95\xd5M}\x02\x16\x8f0\x99H\x06" +
	"\x91\xba\xae\x9f\x88\xafb\xe0]\x12T\xa0\x1d\"\xb8\xa1" +
	"\x9b\x88\xafe\xe0\x9b$\xccX\xe6\xae\xf2A\xa3\x04a" +
	"S\xcf\\DH\x10\x92\xe5\xa9\x92a\"\xee7J@" +
	"\x9c\xe0\xf5\"\xf9\xbd\x0c\xd9U3?\xad\xe4\x8c1\xde" +
	"\x8a 4\xb5;`\xc1\xb6\x9c\xaf\xb4\xda\xd6\x9b|D" +
	"\x14pv\x99z\xc9*\x18%\x82\xdd7$\x80\xe4\x05" +
	"\x82V\xc7\xa9A\xc8\xf9\xdd\xb6\xe1\x8eS\xc3\x90\xee%" +
	"\xe2\xeb\x19\xf8\xff$8\xb6\x9f\x00q\xbf\\\xad\xdb>" +
	"\x97\x9b<\xe2~\xe9\x85ad\xf2y\xd3\xb0\x92V\xaa" +
	"P\xd9\xfc@\x1a\xfb\x034\x16\xcbS\x86\xb9y\x13\xa2" +
	"$!J\x98\xa9V*\xc1\xe7f\xb5j\xf21\xc3\xcc" +
	"\x02<\xc2BD\xdeZA\xdd\xb6j\xba\x9f(\xb3\x1e" +
	"\x99-P\x07\x15\xf8\x16D}\x96\xd4L'Qf\x0b" +
	"2;\xa1\x8e(3\xf3VP\x91\xe4\xb2\x14P\xd4\xed" +
	"\xb8Yp\x1bby\xb3\\\xf9;/d\x81\x8c\x0c\x15" +
	"\xddI\xd7:\x1e6\xd6h\x87\x9c1\x96\x12\xe2&\x85" +
	"8v\x0d\xa6G\xe9\xcaf\x94>\xe4\xab\xaa\x1c\xd2\x85" +
	"\x9a\xde\xb0\xcf\x8bV,\x8f\xea\xc5\x9c1V\xf3\xa8$" +
	"|\xda\xac\x81\x81\xc3\xb6a\x96\xf4b\xd6\xfd*f\x1b" +
	"%\x9b\xcb@`_\xe1]\xa7~\x08C\xfa!#g" +
	"XU\xa5h[Y\x16Z\x08`x\xa1\xfc\"}\xaa" +
	"\x1e\xaa'+\xda\x16Q\x03\xe8\xba\x8f\x0e\x07@W\xc5" +
	"8V\x18\xf8\x93\x12\x84~\xe2E\xc4\x9d\xb3\xbfm{" +
	"\xf9\xdc\xff\xc7\xcf\x90\xa0\xbc\xae\xc4\xeb{N\\\xdc\xb8" +
	"b\xf6\x02\x09q:x\x04p\xf3\x8b\xffq\x06w\x88" +
	"\xbd%Lt\xef\xe8&\xab%\xd38\x00\xd5Yr\xf3" +
	",\xbf(\xaf{M\xc4\xd5\x00\x85\x91&\xebE\xf8c" +
	"U\x1dQ\xfd`3\xad\x87\\?\xe7\xb3n7u\xcc" +
	"z'\x11\x7f\x8c\x81\x8f\x070\x1b\"\xb8\x9f\x81\x17%" +
	"\xa8\x92\xd4\x0e\x89H-\x88`\x9e\x81W$\xa8\x8c\xb5" +
	"\x83\x11\xa9\x13\"8\xce\xc0m\x09\xb1\x83\xc6tW}" +
	"\xa4\xc4C:\xf8\xd0\x1d|\xe8\xb9\xdf\xe4\xed\xd1\xed\xac" +
	"nc\xbcA\x9c\xa5\x0f\x18rV\x10[\xc4\xbb0j" +
	"\x8c\xce\xe8\xee\xca\x10\x8ay\xdb\xbfa\xbf\xdcoe\xbb" +
	"\xb42\xdb\xe2\xb2\xd7G\x9b\x98\x8c\x08\x03o\x97\xa0\x8c" +
	"\xea\x15$dF\xb8\xcb\xe8wc\xd9\x91\xa7\x06\xca\x87" +
	"\x03\xec\xd6\x91\x14\x86}\"=\xca'\x87}\xefy\x94" +
	"O\x8b\xe0a\x06~T\x82S\xa9>Q,\x8c>l" +
	"\x10\xf3\xa9\x0f\x06\xd3\xcd\x82\xdd\xcd\x82\xf7J\xc2\x162" +
	"[\x9f{\x93\xfd#\x17Y\xed\x06\x80%\x18muo" +
	"!\x04~\x9f\xa9\x03+IR\xa5H\x8d\xbd\x0d\x9d\x8d" +
	"W\x93\xa0/\xdd\x19Xb\x85\xca\xe6X\xa5l\xdaP" +
	"H\x82B\x88\x8d\x97-\x1b\xad$\xa1\xb59\x11\xfe4" +
	"\x89\xcb\x11\xee\xe5\x10\xf0F\xa7\xef\x8d\xd8\x81j!_" +
	"O\xf5W\x00\x00\x00\xff\xff$P\xcf/"

func init() {
	schemas.Register(schema_855efed3475f6b26,
		0x8071b2eb61aac3f0,
		0x886d68271d83de4d,
		0x8fb25d0428898a69,
		0x9fb6218427d92e3c,
		0xa42bd461f2a8a3c8,
		0xbdc1d2a8302f6031,
		0xcb715d4c82cf27c3,
		0xcb74f672266ee797,
		0xcbe679a401315eb8,
		0xd9eccdf2dbc48087,
		0xda966d1d252e4d25,
		0xe10a5d74d58bd18d,
		0xe9343ab77e29dd66,
		0xfb47810671a05b0d,
		0xfdd799ed60c87723)
}
