// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

const Persistent = uint64(0xf622595091cafb67)

type Persistent struct{ Client *capnp.Client }

// Persistent_TypeID is the unique identifier for the type Persistent.
const Persistent_TypeID = 0xc8cb212fcd9f5691

func (c Persistent) Save(ctx context.Context, params func(Persistent_SaveParams) error) (Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Persistent_SaveParams{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Persistent_SaveResults_Future{Future: ans.Future()}, release
}

func (c Persistent) AddRef() Persistent {
	return Persistent{
		Client: c.Client.AddRef(),
	}
}

func (c Persistent) Release() {
	c.Client.Release()
}

// A Persistent_Server is a Persistent with a local implementation.
type Persistent_Server interface {
	Save(context.Context, Persistent_save) error
}

// Persistent_NewServer creates a new Server from an implementation of Persistent_Server.
func Persistent_NewServer(s Persistent_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Persistent_Methods(nil, s), s, c, policy)
}

// Persistent_ServerToClient creates a new Client from an implementation of Persistent_Server.
// The caller is responsible for calling Release on the returned Client.
func Persistent_ServerToClient(s Persistent_Server, policy *server.Policy) Persistent {
	return Persistent{Client: capnp.NewClient(Persistent_NewServer(s, policy))}
}

// Persistent_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Persistent_Methods(methods []server.Method, s Persistent_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, Persistent_save{call})
		},
	})

	return methods
}

// Persistent_save holds the state for a server call to Persistent.save.
// See server.Call for documentation.
type Persistent_save struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Persistent_save) Args() Persistent_SaveParams {
	return Persistent_SaveParams{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Persistent_save) AllocResults() (Persistent_SaveResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{Struct: r}, err
}

type Persistent_SaveParams struct{ capnp.Struct }

// Persistent_SaveParams_TypeID is the unique identifier for the type Persistent_SaveParams.
const Persistent_SaveParams_TypeID = 0xf76fba59183073a5

func NewPersistent_SaveParams(s *capnp.Segment) (Persistent_SaveParams, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveParams{st}, err
}

func NewRootPersistent_SaveParams(s *capnp.Segment) (Persistent_SaveParams, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveParams{st}, err
}

func ReadRootPersistent_SaveParams(msg *capnp.Message) (Persistent_SaveParams, error) {
	root, err := msg.Root()
	return Persistent_SaveParams{root.Struct()}, err
}

func (s Persistent_SaveParams) String() string {
	str, _ := text.Marshal(0xf76fba59183073a5, s.Struct)
	return str
}

func (s Persistent_SaveParams) SealFor() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Persistent_SaveParams) HasSealFor() bool {
	return s.Struct.HasPtr(0)
}

func (s Persistent_SaveParams) SetSealFor(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Persistent_SaveParams_List is a list of Persistent_SaveParams.
type Persistent_SaveParams_List struct{ capnp.List }

// NewPersistent_SaveParams creates a new list of Persistent_SaveParams.
func NewPersistent_SaveParams_List(s *capnp.Segment, sz int32) (Persistent_SaveParams_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Persistent_SaveParams_List{l}, err
}

func (s Persistent_SaveParams_List) At(i int) Persistent_SaveParams {
	return Persistent_SaveParams{s.List.Struct(i)}
}

func (s Persistent_SaveParams_List) Set(i int, v Persistent_SaveParams) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Persistent_SaveParams_List) String() string {
	str, _ := text.MarshalList(0xf76fba59183073a5, s.List)
	return str
}

// Persistent_SaveParams_Future is a wrapper for a Persistent_SaveParams promised by a client call.
type Persistent_SaveParams_Future struct{ *capnp.Future }

func (p Persistent_SaveParams_Future) Struct() (Persistent_SaveParams, error) {
	s, err := p.Future.Struct()
	return Persistent_SaveParams{s}, err
}

func (p Persistent_SaveParams_Future) SealFor() *capnp.Future {
	return p.Future.Field(0, nil)
}

type Persistent_SaveResults struct{ capnp.Struct }

// Persistent_SaveResults_TypeID is the unique identifier for the type Persistent_SaveResults.
const Persistent_SaveResults_TypeID = 0xb76848c18c40efbf

func NewPersistent_SaveResults(s *capnp.Segment) (Persistent_SaveResults, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{st}, err
}

func NewRootPersistent_SaveResults(s *capnp.Segment) (Persistent_SaveResults, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{st}, err
}

func ReadRootPersistent_SaveResults(msg *capnp.Message) (Persistent_SaveResults, error) {
	root, err := msg.Root()
	return Persistent_SaveResults{root.Struct()}, err
}

func (s Persistent_SaveResults) String() string {
	str, _ := text.Marshal(0xb76848c18c40efbf, s.Struct)
	return str
}

func (s Persistent_SaveResults) SturdyRef() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Persistent_SaveResults) HasSturdyRef() bool {
	return s.Struct.HasPtr(0)
}

func (s Persistent_SaveResults) SetSturdyRef(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Persistent_SaveResults_List is a list of Persistent_SaveResults.
type Persistent_SaveResults_List struct{ capnp.List }

// NewPersistent_SaveResults creates a new list of Persistent_SaveResults.
func NewPersistent_SaveResults_List(s *capnp.Segment, sz int32) (Persistent_SaveResults_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Persistent_SaveResults_List{l}, err
}

func (s Persistent_SaveResults_List) At(i int) Persistent_SaveResults {
	return Persistent_SaveResults{s.List.Struct(i)}
}

func (s Persistent_SaveResults_List) Set(i int, v Persistent_SaveResults) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Persistent_SaveResults_List) String() string {
	str, _ := text.MarshalList(0xb76848c18c40efbf, s.List)
	return str
}

// Persistent_SaveResults_Future is a wrapper for a Persistent_SaveResults promised by a client call.
type Persistent_SaveResults_Future struct{ *capnp.Future }

func (p Persistent_SaveResults_Future) Struct() (Persistent_SaveResults, error) {
	s, err := p.Future.Struct()
	return Persistent_SaveResults{s}, err
}

func (p Persistent_SaveResults_Future) SturdyRef() *capnp.Future {
	return p.Future.Field(0, nil)
}

type RealmGateway struct{ Client *capnp.Client }

// RealmGateway_TypeID is the unique identifier for the type RealmGateway.
const RealmGateway_TypeID = 0x84ff286cd00a3ed4

func (c RealmGateway) Import(ctx context.Context, params func(RealmGateway_import_Params) error) (Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:RealmGateway",
			MethodName:    "import",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RealmGateway_import_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Persistent_SaveResults_Future{Future: ans.Future()}, release
}
func (c RealmGateway) Export(ctx context.Context, params func(RealmGateway_export_Params) error) (Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      1,
			InterfaceName: "capnp/persistent.capnp:RealmGateway",
			MethodName:    "export",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RealmGateway_export_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Persistent_SaveResults_Future{Future: ans.Future()}, release
}

func (c RealmGateway) AddRef() RealmGateway {
	return RealmGateway{
		Client: c.Client.AddRef(),
	}
}

func (c RealmGateway) Release() {
	c.Client.Release()
}

// A RealmGateway_Server is a RealmGateway with a local implementation.
type RealmGateway_Server interface {
	Import(context.Context, RealmGateway_import) error

	Export(context.Context, RealmGateway_export) error
}

// RealmGateway_NewServer creates a new Server from an implementation of RealmGateway_Server.
func RealmGateway_NewServer(s RealmGateway_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(RealmGateway_Methods(nil, s), s, c, policy)
}

// RealmGateway_ServerToClient creates a new Client from an implementation of RealmGateway_Server.
// The caller is responsible for calling Release on the returned Client.
func RealmGateway_ServerToClient(s RealmGateway_Server, policy *server.Policy) RealmGateway {
	return RealmGateway{Client: capnp.NewClient(RealmGateway_NewServer(s, policy))}
}

// RealmGateway_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func RealmGateway_Methods(methods []server.Method, s RealmGateway_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      0,
			InterfaceName: "capnp/persistent.capnp:RealmGateway",
			MethodName:    "import",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Import(ctx, RealmGateway_import{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      1,
			InterfaceName: "capnp/persistent.capnp:RealmGateway",
			MethodName:    "export",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Export(ctx, RealmGateway_export{call})
		},
	})

	return methods
}

// RealmGateway_import holds the state for a server call to RealmGateway.import.
// See server.Call for documentation.
type RealmGateway_import struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RealmGateway_import) Args() RealmGateway_import_Params {
	return RealmGateway_import_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RealmGateway_import) AllocResults() (Persistent_SaveResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{Struct: r}, err
}

// RealmGateway_export holds the state for a server call to RealmGateway.export.
// See server.Call for documentation.
type RealmGateway_export struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RealmGateway_export) Args() RealmGateway_export_Params {
	return RealmGateway_export_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RealmGateway_export) AllocResults() (Persistent_SaveResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{Struct: r}, err
}

type RealmGateway_import_Params struct{ capnp.Struct }

// RealmGateway_import_Params_TypeID is the unique identifier for the type RealmGateway_import_Params.
const RealmGateway_import_Params_TypeID = 0xf0c2cc1d3909574d

func NewRealmGateway_import_Params(s *capnp.Segment) (RealmGateway_import_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_import_Params{st}, err
}

func NewRootRealmGateway_import_Params(s *capnp.Segment) (RealmGateway_import_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_import_Params{st}, err
}

func ReadRootRealmGateway_import_Params(msg *capnp.Message) (RealmGateway_import_Params, error) {
	root, err := msg.Root()
	return RealmGateway_import_Params{root.Struct()}, err
}

func (s RealmGateway_import_Params) String() string {
	str, _ := text.Marshal(0xf0c2cc1d3909574d, s.Struct)
	return str
}

func (s RealmGateway_import_Params) Cap() Persistent {
	p, _ := s.Struct.Ptr(0)
	return Persistent{Client: p.Interface().Client()}
}

func (s RealmGateway_import_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s RealmGateway_import_Params) SetCap(v Persistent) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s RealmGateway_import_Params) Params() (Persistent_SaveParams, error) {
	p, err := s.Struct.Ptr(1)
	return Persistent_SaveParams{Struct: p.Struct()}, err
}

func (s RealmGateway_import_Params) HasParams() bool {
	return s.Struct.HasPtr(1)
}

func (s RealmGateway_import_Params) SetParams(v Persistent_SaveParams) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Persistent_SaveParams struct, preferring placement in s's segment.
func (s RealmGateway_import_Params) NewParams() (Persistent_SaveParams, error) {
	ss, err := NewPersistent_SaveParams(s.Struct.Segment())
	if err != nil {
		return Persistent_SaveParams{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// RealmGateway_import_Params_List is a list of RealmGateway_import_Params.
type RealmGateway_import_Params_List struct{ capnp.List }

// NewRealmGateway_import_Params creates a new list of RealmGateway_import_Params.
func NewRealmGateway_import_Params_List(s *capnp.Segment, sz int32) (RealmGateway_import_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RealmGateway_import_Params_List{l}, err
}

func (s RealmGateway_import_Params_List) At(i int) RealmGateway_import_Params {
	return RealmGateway_import_Params{s.List.Struct(i)}
}

func (s RealmGateway_import_Params_List) Set(i int, v RealmGateway_import_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RealmGateway_import_Params_List) String() string {
	str, _ := text.MarshalList(0xf0c2cc1d3909574d, s.List)
	return str
}

// RealmGateway_import_Params_Future is a wrapper for a RealmGateway_import_Params promised by a client call.
type RealmGateway_import_Params_Future struct{ *capnp.Future }

func (p RealmGateway_import_Params_Future) Struct() (RealmGateway_import_Params, error) {
	s, err := p.Future.Struct()
	return RealmGateway_import_Params{s}, err
}

func (p RealmGateway_import_Params_Future) Cap() Persistent {
	return Persistent{Client: p.Future.Field(0, nil).Client()}
}

func (p RealmGateway_import_Params_Future) Params() Persistent_SaveParams_Future {
	return Persistent_SaveParams_Future{Future: p.Future.Field(1, nil)}
}

type RealmGateway_export_Params struct{ capnp.Struct }

// RealmGateway_export_Params_TypeID is the unique identifier for the type RealmGateway_export_Params.
const RealmGateway_export_Params_TypeID = 0xecafa18b482da3aa

func NewRealmGateway_export_Params(s *capnp.Segment) (RealmGateway_export_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_export_Params{st}, err
}

func NewRootRealmGateway_export_Params(s *capnp.Segment) (RealmGateway_export_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_export_Params{st}, err
}

func ReadRootRealmGateway_export_Params(msg *capnp.Message) (RealmGateway_export_Params, error) {
	root, err := msg.Root()
	return RealmGateway_export_Params{root.Struct()}, err
}

func (s RealmGateway_export_Params) String() string {
	str, _ := text.Marshal(0xecafa18b482da3aa, s.Struct)
	return str
}

func (s RealmGateway_export_Params) Cap() Persistent {
	p, _ := s.Struct.Ptr(0)
	return Persistent{Client: p.Interface().Client()}
}

func (s RealmGateway_export_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s RealmGateway_export_Params) SetCap(v Persistent) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s RealmGateway_export_Params) Params() (Persistent_SaveParams, error) {
	p, err := s.Struct.Ptr(1)
	return Persistent_SaveParams{Struct: p.Struct()}, err
}

func (s RealmGateway_export_Params) HasParams() bool {
	return s.Struct.HasPtr(1)
}

func (s RealmGateway_export_Params) SetParams(v Persistent_SaveParams) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Persistent_SaveParams struct, preferring placement in s's segment.
func (s RealmGateway_export_Params) NewParams() (Persistent_SaveParams, error) {
	ss, err := NewPersistent_SaveParams(s.Struct.Segment())
	if err != nil {
		return Persistent_SaveParams{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// RealmGateway_export_Params_List is a list of RealmGateway_export_Params.
type RealmGateway_export_Params_List struct{ capnp.List }

// NewRealmGateway_export_Params creates a new list of RealmGateway_export_Params.
func NewRealmGateway_export_Params_List(s *capnp.Segment, sz int32) (RealmGateway_export_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RealmGateway_export_Params_List{l}, err
}

func (s RealmGateway_export_Params_List) At(i int) RealmGateway_export_Params {
	return RealmGateway_export_Params{s.List.Struct(i)}
}

func (s RealmGateway_export_Params_List) Set(i int, v RealmGateway_export_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RealmGateway_export_Params_List) String() string {
	str, _ := text.MarshalList(0xecafa18b482da3aa, s.List)
	return str
}

// RealmGateway_export_Params_Future is a wrapper for a RealmGateway_export_Params promised by a client call.
type RealmGateway_export_Params_Future struct{ *capnp.Future }

func (p RealmGateway_export_Params_Future) Struct() (RealmGateway_export_Params, error) {
	s, err := p.Future.Struct()
	return RealmGateway_export_Params{s}, err
}

func (p RealmGateway_export_Params_Future) Cap() Persistent {
	return Persistent{Client: p.Future.Field(0, nil).Client()}
}

func (p RealmGateway_export_Params_Future) Params() Persistent_SaveParams_Future {
	return Persistent_SaveParams_Future{Future: p.Future.Field(1, nil)}
}

const schema_b8630836983feed7 = "x\xda\xbcSMh\x13A\x14~\xdf\xceN6\x91\x96" +
	"f\xb2-\xad\xa0TC\xa5*\xf6\xcf\xaa\xd0\"&Q" +
	"\xb4\xf5 fST\xeam[\xb7ZI\xd2ew\xd3" +
	"\xb4\xa7*\x08\"z\xa9'=\x89\x88\x17/\x9eD\xf1" +
	"\"\x8a\x82\xf8\x03\x0a\x82g\xef\xa2\x9e\x14\x11Y\x99\xa4" +
	"I\xd6\xf4O\xa9xY\xd87o\xe6}\xef\xfb\xe9\xfd" +
	"\x80\xa4\xd2\xc7\xe7T\"c\x17\x0f\xf9\xef\xf6\xad{\x93" +
	"\xdd\xea_ \xd1\xca\xfc\xf7\x9f\x12\xd7\xf6\x84\xc7\x1f\x10" +
	"Q\x14\xfd[\x948\xf4\xdd\x8aF\xa4\xf7)\x17\xf5\x01" +
	"\xa6\xe9\x03\xac\xd3\x7f\xf49y\xe5\xf1\xf0\x99\xfb$\xe2" +
	"\xf0\xe7\x8f\xdfx\xdd\xb3\xf9\xe5s\xe2\xd0\xa2\xe8?\xc6" +
	"\x1c\xe8\x93L^\xb1X\x82\x02\xe7\x8b\x9f\xbf\xc4b\xd0" +
	"\xaf\xb3N\"\xfd\x1e\x1b\xd2\xb9\xaa\xe9\\m\xf5\xef\xdc" +
	"\xea\x1a\xbe|\xf3\xeeG\x12\x1d \xe2\x8a|\x96\xabW" +
	"A\xd0[\xd4\"\xc1?r\"2\xb0\xf1\xd5\x93/\xc1" +
	"\x06\xf0R\x83\xe0\xb2\xe1\xf4\x8f\x17\xf3\xe9\xd1\xf8Wz" +
	"\xdb\xca7!0\x15\xfd?y\x0czcH#\x1a\x09" +
	"\x87\x18\x08\xfem\xb7\xb7m\xf4\xe1\xd4\xb7\xa5\xb6\xf9\xce" +
	"\xcf.t\xeb\x91P\x82\x0e\xf8\xe3\xa6\x9d\xb7{l\x8b" +
	"9\xee\xa4\xebYy\xaf\xbbT\x19\xccXf67d" +
	"z\x96V4g\xd3\x80\x11f\x9c\xa8\x8a\x14\x15\xcaD" +
	"\xdf Qj\x07R{!\xcek@u\xd9ZGA" +
	"v\xd8H\x9d\x83x\xa6%&s\xf6\x94\xe3\x09\xb4\x1b" +
	"\xaa\x82\x9aV\x00Q\xa5X\xc5,K\x9dF\x18(\xcd" +
	"\x97\xdf(\x03b\x08\xdc#B\x8cC\x09\x16\x92HX" +
	"3k\x1e\xc2\x17Oa\xbfOI\x03\xa9(D\xe3\x98" +
	"\x10c\xa2\xc5\x11\xeb\x1d\xffp\xde\xb3\x9c\xbc\x99%-" +
	"cM\xf8\x07g\x82\x7f\xd5\xb3\xf6\xa3\xc5\xbc\xe5\xd4N" +
	"\x17\xfe+J\xa8uJ\xa4\xadja\xc4\x9c\xb62V" +
	"\xbb[\xc8z\xae\xd4De*\x91*\x97j\xcc\x10\x19" +
	"\x0d\x0cF\x9b\x02\xdf\xf5\x0a\xce\xa9\xd9\x8cE\x98(\x91" +
	"\x15X\x151\xc2\xb2\x9aW'\xc1\x93|\x04\x8c\x149" +
	"\x19\xc8Hd\xcc\x97@\xd2\xa6c\x12\xcb\xb9~\x19\x95" +
	"[ -\xeb\xb9\x86Z\xf2I\xe5j\xcd\x05b;Q" +
	"\xaa\x01\xa9\x0d\x10]Z\x93kN[\x8b\x94XR\x1e" +
	"Y,s\x1d\x86\xe0\x19\x11\xd9\xe9\x8f\xd4\xf6\xab\xe3\x8e" +
	"/\xe7\xe2\xa29\xdb]6E\x87\xc4\x9d\x83k\x84\xab" +
	"\xe4m\x8b\x13\x19\x1d\x0c\xc6\x8c\x02\x014\x97pH\xd7" +
	"\x1a6\x83\xf1T\x816n\xda\x10A\x1e\x93\xf8Gf" +
	"\x85 $l\x09\xc9E\xb4\xc6\xf8\xdfLX\xcd\xa9\x88" +
	"\x064_\x91\xa1r6\xff7C\xab\xe2_;E\xab" +
	"\x89\x10]!\x15v-\x15i\x80\xd8\x9f\x065m6" +
	"I\xc8u9\xddO$\x81\x19\xcd\x0a\xe6\\\xcb\xcc\x1e" +
	"\x9ar\xca\x0c\xd4\x85\xf4W\x00\x00\x00\xff\xff\x8f\xf2\xed" +
	"\x07"

func init() {
	schemas.Register(schema_b8630836983feed7,
		0x84ff286cd00a3ed4,
		0xb76848c18c40efbf,
		0xc8cb212fcd9f5691,
		0xecafa18b482da3aa,
		0xf0c2cc1d3909574d,
		0xf622595091cafb67,
		0xf76fba59183073a5)
}
