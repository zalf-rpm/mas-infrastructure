// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: management.capnp

#include "management.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<83> b_f95ca008c46a4b3b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59,  75, 106, 196,   8, 160,  92, 249,
     17,   0,   0,   0,   2,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 135,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  77, 105, 110, 101, 114,  97, 108,
     70, 101, 114, 116, 105, 108, 105, 122,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     64,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 104, 108, 115,   0,   0,   0,   0,
     97, 108, 122, 111, 110,   0,   0,   0,
     97, 110,   0,   0,   0,   0,   0,   0,
     97, 112,   0,   0,   0,   0,   0,   0,
     97, 115,   0,   0,   0,   0,   0,   0,
     97, 115, 104,   0,   0,   0,   0,   0,
     99, 102,  52,   0,   0,   0,   0,   0,
     99, 112,  49,   0,   0,   0,   0,   0,
     99, 112,  50,   0,   0,   0,   0,   0,
     99, 112,  51,   0,   0,   0,   0,   0,
    110, 112, 107,   0,   0,   0,   0,   0,
    110, 115,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,   0,   0,   0,   0,
    117,  97, 110,   0,   0,   0,   0,   0,
    117,  97, 115,   0,   0,   0,   0,   0,
    117, 110, 105,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f95ca008c46a4b3b = b_f95ca008c46a4b3b.words;
#if !CAPNP_LITE
static const uint16_t m_f95ca008c46a4b3b[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
const ::capnp::_::RawSchema s_f95ca008c46a4b3b = {
  0xf95ca008c46a4b3b, b_f95ca008c46a4b3b.words, 83, nullptr, m_f95ca008c46a4b3b,
  0, 16, nullptr, nullptr, nullptr, { &s_f95ca008c46a4b3b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(MineralFertilizer_f95ca008c46a4b3b, f95ca008c46a4b3b);
static const ::capnp::_::AlignedData<115> b_84acb8f8eab508b9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    185,   8, 181, 234, 248, 184, 172, 132,
     17,   0,   0,   0,   2,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  71,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  79, 114, 103,  97, 110, 105,  99,
     70, 101, 114, 116, 105, 108, 105, 122,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     96,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     23,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 115, 104,   0,   0,   0,   0,   0,
     99,  97, 100, 108, 109,   0,   0,   0,
     99,  97, 109,   0,   0,   0,   0,   0,
     99,  97, 115,   0,   0,   0,   0,   0,
     99,  97, 117,   0,   0,   0,   0,   0,
    100, 103, 100, 108, 109,   0,   0,   0,
    103, 119,  99,   0,   0,   0,   0,   0,
    104, 111, 100, 108, 109,   0,   0,   0,
    109,  99,   0,   0,   0,   0,   0,   0,
    109, 115,   0,   0,   0,   0,   0,   0,
    111, 105,  99,   0,   0,   0,   0,   0,
    112, 105, 100, 108, 109,   0,   0,   0,
    112, 105, 109,   0,   0,   0,   0,   0,
    112, 105, 115,   0,   0,   0,   0,   0,
    112, 105, 117,   0,   0,   0,   0,   0,
    112, 105, 117, 100, 107,   0,   0,   0,
    112, 108, 119,   0,   0,   0,   0,   0,
    112, 111, 100, 108, 109,   0,   0,   0,
    112, 111, 109,   0,   0,   0,   0,   0,
    115, 111, 121,   0,   0,   0,   0,   0,
    115, 115,   0,   0,   0,   0,   0,   0,
    116, 117, 100, 108, 109,   0,   0,   0,
    119, 101, 101, 100, 115,   0,   0,   0,
    119, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84acb8f8eab508b9 = b_84acb8f8eab508b9.words;
#if !CAPNP_LITE
static const uint16_t m_84acb8f8eab508b9[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};
const ::capnp::_::RawSchema s_84acb8f8eab508b9 = {
  0x84acb8f8eab508b9, b_84acb8f8eab508b9.words, 115, nullptr, m_84acb8f8eab508b9,
  0, 24, nullptr, nullptr, nullptr, { &s_84acb8f8eab508b9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(OrganicFertilizer_84acb8f8eab508b9, 84acb8f8eab508b9);
static const ::capnp::_::AlignedData<78> b_82a74595175b71a3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163, 113,  91,  23, 149,  69, 167, 130,
     17,   0,   0,   0,   2,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  39,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 108,  97, 103, 101,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    110,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     99, 117, 116, 116, 105, 110, 103,   0,
    115, 101, 116,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 118, 101,  83, 116,  97, 116,
    101,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82a74595175b71a3 = b_82a74595175b71a3.words;
#if !CAPNP_LITE
static const uint16_t m_82a74595175b71a3[] = {3, 1, 9, 2, 4, 7, 8, 6, 11, 10, 0, 5};
const ::capnp::_::RawSchema s_82a74595175b71a3 = {
  0x82a74595175b71a3, b_82a74595175b71a3.words, 78, nullptr, m_82a74595175b71a3,
  0, 12, nullptr, nullptr, nullptr, { &s_82a74595175b71a3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(EventType_82a74595175b71a3, 82a74595175b71a3);
static const ::capnp::_::AlignedData<42> b_c2d50914b83d42de = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222,  66,  61, 184,  20,   9, 213, 194,
     17,   0,   0,   0,   2,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80, 108,  97, 110, 116,  79, 114,
    103,  97, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 116,   0,   0,   0,   0,
    108, 101,  97, 102,   0,   0,   0,   0,
    115, 104, 111, 111, 116,   0,   0,   0,
    102, 114, 117, 105, 116,   0,   0,   0,
    115, 116, 114, 117, 107, 116,   0,   0,
    115, 117, 103,  97, 114,   0,   0,   0, }
};
::capnp::word const* const bp_c2d50914b83d42de = b_c2d50914b83d42de.words;
#if !CAPNP_LITE
static const uint16_t m_c2d50914b83d42de[] = {3, 1, 0, 2, 4, 5};
const ::capnp::_::RawSchema s_c2d50914b83d42de = {
  0xc2d50914b83d42de, b_c2d50914b83d42de.words, 42, nullptr, m_c2d50914b83d42de,
  0, 6, nullptr, nullptr, nullptr, { &s_c2d50914b83d42de, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PlantOrgan_c2d50914b83d42de, c2d50914b83d42de);
static const ::capnp::_::AlignedData<113> b_9c5dedfd679ac842 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
     17,   0,   0,   0,   1,   0,   1,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      4,   0,   7,   0,   0,   0,   3,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    155,  12, 181,  14,  45, 236, 130, 240,
     17,   0,   0,   0, 106,   0,   0,   0,
     52, 252,  27, 188,  87, 148, 160, 143,
     17,   0,   0,   0,  90,   0,   0,   0,
     89, 227, 140, 156, 213, 115, 237, 225,
     17,   0,   0,   0,  42,   0,   0,   0,
     69, 120, 116, 101, 114, 110,  97, 108,
     84, 121, 112, 101,   0,   0,   0,   0,
     80, 104, 101, 110, 111,  83, 116,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     47,  39,  27, 229,  31, 153, 196, 198,
    189,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    169, 213, 199,  74, 225, 184,  57, 149,
    165,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,  56, 248,  10, 185,  16, 134, 197,
    141,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  48,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    155,  12, 181,  14,  45, 236, 130, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 218,   3, 254, 203, 126, 203, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 116,   0,   0,   0,   0,   0,   0,
     98, 101, 116, 119, 101, 101, 110,   0,
     97, 102, 116, 101, 114,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 117, 110,  65, 116,  83, 116,  97,
    114, 116,  79, 102,  68,  97, 121,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c5dedfd679ac842 = b_9c5dedfd679ac842.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c5dedfd679ac842[] = {
  &s_9539b8e14ac7d5a9,
  &s_c58610b90af83811,
  &s_c6c4991fe51b272f,
  &s_d4cb7ecbfe03dad3,
  &s_f082ec2d0eb50c9b,
};
static const uint16_t m_9c5dedfd679ac842[] = {4, 2, 3, 1, 5, 6, 0};
static const uint16_t i_9c5dedfd679ac842[] = {2, 3, 4, 0, 1, 5, 6};
const ::capnp::_::RawSchema s_9c5dedfd679ac842 = {
  0x9c5dedfd679ac842, b_9c5dedfd679ac842.words, 113, d_9c5dedfd679ac842, m_9c5dedfd679ac842,
  5, 7, i_9c5dedfd679ac842, nullptr, nullptr, { &s_9c5dedfd679ac842, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_f082ec2d0eb50c9b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155,  12, 181,  14,  45, 236, 130, 240,
     23,   0,   0,   0,   2,   0,   0,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 247,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  46,  69,
    120, 116, 101, 114, 110,  97, 108,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 108,  97, 103, 101,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    110,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     99, 117, 116, 116, 105, 110, 103,   0, }
};
::capnp::word const* const bp_f082ec2d0eb50c9b = b_f082ec2d0eb50c9b.words;
#if !CAPNP_LITE
static const uint16_t m_f082ec2d0eb50c9b[] = {3, 1, 9, 2, 4, 7, 8, 6, 0, 5};
const ::capnp::_::RawSchema s_f082ec2d0eb50c9b = {
  0xf082ec2d0eb50c9b, b_f082ec2d0eb50c9b.words, 69, nullptr, m_f082ec2d0eb50c9b,
  0, 10, nullptr, nullptr, nullptr, { &s_f082ec2d0eb50c9b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ExternalType_f082ec2d0eb50c9b, f082ec2d0eb50c9b);
static const ::capnp::_::AlignedData<39> b_8fa09457bc1bfc34 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     52, 252,  27, 188,  87, 148, 160, 143,
     23,   0,   0,   0,   2,   0,   0,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  46,  80,
    104, 101, 110, 111,  83, 116,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 101, 114, 103, 101, 110,  99,
    101,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119, 101, 114, 105, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 116, 104, 101, 115, 105, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116, 117, 114, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8fa09457bc1bfc34 = b_8fa09457bc1bfc34.words;
#if !CAPNP_LITE
static const uint16_t m_8fa09457bc1bfc34[] = {2, 0, 1, 3};
const ::capnp::_::RawSchema s_8fa09457bc1bfc34 = {
  0x8fa09457bc1bfc34, b_8fa09457bc1bfc34.words, 39, nullptr, m_8fa09457bc1bfc34,
  0, 4, nullptr, nullptr, nullptr, { &s_8fa09457bc1bfc34, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PhenoStage_8fa09457bc1bfc34, 8fa09457bc1bfc34);
static const ::capnp::_::AlignedData<50> b_e1ed73d59c8ce359 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 227, 140, 156, 213, 115, 237, 225,
     23,   0,   0,   0,   1,   0,   1,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      0,   0,   7,   0,   0,   0,   2,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  46,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 116, 101, 114, 110,  97, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    155,  12, 181,  14,  45, 236, 130, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 110,  97, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     52, 252,  27, 188,  87, 148, 160, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e1ed73d59c8ce359 = b_e1ed73d59c8ce359.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e1ed73d59c8ce359[] = {
  &s_8fa09457bc1bfc34,
  &s_f082ec2d0eb50c9b,
};
static const uint16_t m_e1ed73d59c8ce359[] = {0, 1};
static const uint16_t i_e1ed73d59c8ce359[] = {0, 1};
const ::capnp::_::RawSchema s_e1ed73d59c8ce359 = {
  0xe1ed73d59c8ce359, b_e1ed73d59c8ce359.words, 50, d_e1ed73d59c8ce359, m_e1ed73d59c8ce359,
  2, 2, i_e1ed73d59c8ce359, nullptr, nullptr, { &s_e1ed73d59c8ce359, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_c6c4991fe51b272f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47,  39,  27, 229,  31, 153, 196, 198,
     23,   0,   0,   0,   1,   0,   1,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  46,  97,
    116,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6c4991fe51b272f = b_c6c4991fe51b272f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c6c4991fe51b272f[] = {
  &s_97e6feac0322118d,
  &s_9c5dedfd679ac842,
};
static const uint16_t m_c6c4991fe51b272f[] = {0};
static const uint16_t i_c6c4991fe51b272f[] = {0};
const ::capnp::_::RawSchema s_c6c4991fe51b272f = {
  0xc6c4991fe51b272f, b_c6c4991fe51b272f.words, 32, d_c6c4991fe51b272f, m_c6c4991fe51b272f,
  2, 1, i_c6c4991fe51b272f, nullptr, nullptr, { &s_c6c4991fe51b272f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_9539b8e14ac7d5a9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    169, 213, 199,  74, 225, 184,  57, 149,
     23,   0,   0,   0,   1,   0,   1,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  46,  98,
    101, 116, 119, 101, 101, 110,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101,  97, 114, 108, 105, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116, 101, 115, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9539b8e14ac7d5a9 = b_9539b8e14ac7d5a9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9539b8e14ac7d5a9[] = {
  &s_97e6feac0322118d,
  &s_9c5dedfd679ac842,
};
static const uint16_t m_9539b8e14ac7d5a9[] = {0, 1};
static const uint16_t i_9539b8e14ac7d5a9[] = {0, 1};
const ::capnp::_::RawSchema s_9539b8e14ac7d5a9 = {
  0x9539b8e14ac7d5a9, b_9539b8e14ac7d5a9.words, 48, d_9539b8e14ac7d5a9, m_9539b8e14ac7d5a9,
  2, 2, i_9539b8e14ac7d5a9, nullptr, nullptr, { &s_9539b8e14ac7d5a9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_c58610b90af83811 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     17,  56, 248,  10, 185,  16, 134, 197,
     23,   0,   0,   0,   1,   0,   1,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  69, 118, 101, 110, 116,  46,  97,
    102, 116, 101, 114,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89, 227, 140, 156, 213, 115, 237, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 121, 115,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c58610b90af83811 = b_c58610b90af83811.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c58610b90af83811[] = {
  &s_9c5dedfd679ac842,
  &s_e1ed73d59c8ce359,
};
static const uint16_t m_c58610b90af83811[] = {1, 0};
static const uint16_t i_c58610b90af83811[] = {0, 1};
const ::capnp::_::RawSchema s_c58610b90af83811 = {
  0xc58610b90af83811, b_c58610b90af83811.words, 47, d_c58610b90af83811, m_c58610b90af83811,
  2, 2, i_c58610b90af83811, nullptr, nullptr, { &s_c58610b90af83811, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_9d247c812334c917 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
     17,   0,   0,   0,   1,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0, 167,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,   0,
     40,   0,   0,   0,   1,   0,   1,   0,
    232, 169, 201,  59,  63,  21, 206, 128,
     73,   0,   0,   0,  58,   0,   0,   0,
    180, 234, 124, 126, 153,  68, 207, 207,
     69,   0,   0,   0, 130,   0,   0,   0,
    239, 137,  66, 176,  91, 229, 212, 238,
     69,   0,   0,   0,  66,   0,   0,   0,
    209, 108, 129,  15,  52, 126, 163, 227,
     65,   0,   0,   0, 138,   0,   0,   0,
     29,  67,  67, 221,  45,  95, 199, 254,
     69,   0,   0,   0,  66,   0,   0,   0,
     33, 217,  37, 123, 234,  48, 218, 211,
     65,   0,   0,   0, 170,   0,   0,   0,
    115, 245, 212, 103, 172, 117,  51, 149,
     69,   0,   0,   0, 170,   0,   0,   0,
    205, 178, 176,  15, 251, 118, 140, 233,
     73,   0,   0,   0, 170,   0,   0,   0,
     84,  53,  96, 248, 142, 132, 165, 136,
     77,   0,   0,   0,  66,   0,   0,   0,
     60, 244,  63,  54,  22, 184, 254, 135,
     73,   0,   0,   0,  90,   0,   0,   0,
     83, 111, 119, 105, 110, 103,   0,   0,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
     72,  97, 114, 118, 101, 115, 116,   0,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 117, 116, 116, 105, 110, 103,   0,
     77, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     78,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     84, 105, 108, 108,  97, 103, 101,   0,
     73, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9d247c812334c917 = b_9d247c812334c917.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9d247c812334c917 = {
  0x9d247c812334c917, b_9d247c812334c917.words, 56, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9d247c812334c917, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_80ce153f3bc9a9e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 169, 201,  59,  63,  21, 206, 128,
     24,   0,   0,   0,   1,   0,   1,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     83, 111, 119, 105, 110, 103,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     99, 117, 108, 116, 105, 118,  97, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    180, 226, 100,   8,  82, 176, 129, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 110, 116,  68, 101, 110,
    115, 105, 116, 121,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 111, 112,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    132,  92, 191,  36, 163, 151, 141, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80ce153f3bc9a9e8 = b_80ce153f3bc9a9e8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_80ce153f3bc9a9e8[] = {
  &s_dd81b0520864e2b4,
  &s_e88d97a324bf5c84,
};
static const uint16_t m_80ce153f3bc9a9e8[] = {2, 0, 1};
static const uint16_t i_80ce153f3bc9a9e8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_80ce153f3bc9a9e8 = {
  0x80ce153f3bc9a9e8, b_80ce153f3bc9a9e8.words, 65, d_80ce153f3bc9a9e8, m_80ce153f3bc9a9e8,
  2, 3, i_80ce153f3bc9a9e8, nullptr, nullptr, { &s_80ce153f3bc9a9e8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<187> b_cfcf44997e7ceab4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180, 234, 124, 126, 153,  68, 207, 207,
     24,   0,   0,   0,   1,   0,   8,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  55,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    104, 248, 208,  76, 191, 210, 129, 157,
      1,   0,   0,   0,  98,   0,   0,   0,
     65, 118, 103,  83, 111, 105, 108,  84,
    101, 109, 112,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   1,   0,   0,   3,   0,   1,   0,
     36,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   3,   0,   1,   0,
     64,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   3,   0,   1,   0,
     76,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
     88,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   1,   0,   0,   3,   0,   1,   0,
     96,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    104,   1,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  84, 101, 109, 112,  84,
    104, 114, 101, 115, 104, 111, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 121, 115,  73, 110,  84, 101,
    109, 112,  87, 105, 110, 100, 111, 119,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,  89,  64,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  51, 100,  97, 121,  80,
    114, 101,  99, 105, 112,  83, 117, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  67, 117, 114, 114, 101,
    110, 116,  68,  97, 121,  80, 114, 101,
     99, 105, 112,  83, 117, 109,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 109, 112,  83, 117, 109,  65,
     98, 111, 118, 101,  66,  97, 115, 101,
     84, 101, 109, 112,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101,  84, 101, 109, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 118, 103,  83, 111, 105, 108,  84,
    101, 109, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104, 248, 208,  76, 191, 210, 129, 157,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    232, 169, 201,  59,  63,  21, 206, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfcf44997e7ceab4 = b_cfcf44997e7ceab4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cfcf44997e7ceab4[] = {
  &s_80ce153f3bc9a9e8,
  &s_9d81d2bf4cd0f868,
};
static const uint16_t m_cfcf44997e7ceab4[] = {8, 7, 1, 4, 5, 3, 2, 0, 9, 6};
static const uint16_t i_cfcf44997e7ceab4[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
const ::capnp::_::RawSchema s_cfcf44997e7ceab4 = {
  0xcfcf44997e7ceab4, b_cfcf44997e7ceab4.words, 187, d_cfcf44997e7ceab4, m_cfcf44997e7ceab4,
  2, 10, i_cfcf44997e7ceab4, nullptr, nullptr, { &s_cfcf44997e7ceab4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<73> b_9d81d2bf4cd0f868 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 248, 208,  76, 191, 210, 129, 157,
     40,   0,   0,   0,   1,   0,   3,   0,
    180, 234, 124, 126, 153,  68, 207, 207,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,  46,
     65, 118, 103,  83, 111, 105, 108,  84,
    101, 109, 112,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 105, 108,  68, 101, 112, 116,
    104,  70, 111, 114,  65, 118, 101, 114,
     97, 103, 105, 110, 103,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     51,  51,  51,  51,  51,  51, 211,  63,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 121, 115,  73, 110,  83, 111,
    105, 108,  84, 101, 109, 112,  87, 105,
    110, 100, 111, 119,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,  73, 102,
     65,  98, 111, 118, 101,  65, 118, 103,
     83, 111, 105, 108,  84, 101, 109, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9d81d2bf4cd0f868 = b_9d81d2bf4cd0f868.words;
#if !CAPNP_LITE
static const uint16_t m_9d81d2bf4cd0f868[] = {1, 0, 2};
static const uint16_t i_9d81d2bf4cd0f868[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9d81d2bf4cd0f868 = {
  0x9d81d2bf4cd0f868, b_9d81d2bf4cd0f868.words, 73, nullptr, m_9d81d2bf4cd0f868,
  0, 3, i_9d81d2bf4cd0f868, nullptr, nullptr, { &s_9d81d2bf4cd0f868, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<59> b_eed4e55bb04289ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239, 137,  66, 176,  91, 229, 212, 238,
     24,   0,   0,   0,   1,   0,   1,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     72,  97, 114, 118, 101, 115, 116,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    115, 147,  88,  32, 196, 190,  12, 143,
      9,   0,   0,   0,  82,   0,   0,   0,
    101,  54,  13, 197, 227, 179, 182, 140,
      9,   0,   0,   0, 146,   0,   0,   0,
     67, 114, 111, 112,  85, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
     79, 112, 116,  67,  97, 114,  98, 111,
    110,  77, 103, 109, 116,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 112, 111, 114, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116,  67,  97, 114,  98,  77,
    103, 109, 116,  68,  97, 116,  97,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    101,  54,  13, 197, 227, 179, 182, 140,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eed4e55bb04289ef = b_eed4e55bb04289ef.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eed4e55bb04289ef[] = {
  &s_8cb6b3e3c50d3665,
};
static const uint16_t m_eed4e55bb04289ef[] = {0, 1};
static const uint16_t i_eed4e55bb04289ef[] = {0, 1};
const ::capnp::_::RawSchema s_eed4e55bb04289ef = {
  0xeed4e55bb04289ef, b_eed4e55bb04289ef.words, 59, d_eed4e55bb04289ef, m_eed4e55bb04289ef,
  1, 2, i_eed4e55bb04289ef, nullptr, nullptr, { &s_eed4e55bb04289ef, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_8f0cbec420589373 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 147,  88,  32, 196, 190,  12, 143,
     32,   0,   0,   0,   2,   0,   0,   0,
    239, 137,  66, 176,  91, 229, 212, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     72,  97, 114, 118, 101, 115, 116,  46,
     67, 114, 111, 112,  85, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 101, 101, 110,  77,  97, 110,
    117, 114, 101,   0,   0,   0,   0,   0,
     98, 105, 111, 109,  97, 115, 115,  80,
    114, 111, 100, 117,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8f0cbec420589373 = b_8f0cbec420589373.words;
#if !CAPNP_LITE
static const uint16_t m_8f0cbec420589373[] = {1, 0};
const ::capnp::_::RawSchema s_8f0cbec420589373 = {
  0x8f0cbec420589373, b_8f0cbec420589373.words, 31, nullptr, m_8f0cbec420589373,
  0, 2, nullptr, nullptr, nullptr, { &s_8f0cbec420589373, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CropUsage_8f0cbec420589373, 8f0cbec420589373);
static const ::capnp::_::AlignedData<123> b_8cb6b3e3c50d3665 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    101,  54,  13, 197, 227, 179, 182, 140,
     32,   0,   0,   0,   1,   0,   5,   0,
    239, 137,  66, 176,  91, 229, 212, 238,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     72,  97, 114, 118, 101, 115, 116,  46,
     79, 112, 116,  67,  97, 114,  98, 111,
    110,  77, 103, 109, 116,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 210,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
    111, 112, 116,  67,  97, 114,  98, 111,
    110,  67, 111, 110, 115, 101, 114, 118,
     97, 116, 105, 111, 110,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 111, 112,  73, 109, 112,  97,
     99, 116,  79, 110,  72, 117, 109, 117,
    115,  66,  97, 108,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 111, 112,  85, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    115, 147,  88,  32, 196, 190,  12, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 105, 100, 117, 101,  72,
    101, 113,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,  72, 101, 113,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  82, 101, 115, 105, 100,
    117, 101,  82, 101,  99, 111, 118, 101,
    114,  70, 114,  97,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8cb6b3e3c50d3665 = b_8cb6b3e3c50d3665.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8cb6b3e3c50d3665[] = {
  &s_8f0cbec420589373,
};
static const uint16_t m_8cb6b3e3c50d3665[] = {1, 2, 5, 0, 4, 3};
static const uint16_t i_8cb6b3e3c50d3665[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_8cb6b3e3c50d3665 = {
  0x8cb6b3e3c50d3665, b_8cb6b3e3c50d3665.words, 123, d_8cb6b3e3c50d3665, m_8cb6b3e3c50d3665,
  1, 6, i_8cb6b3e3c50d3665, nullptr, nullptr, { &s_8cb6b3e3c50d3665, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<117> b_e3a37e340f816cd1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 108, 129,  15,  52, 126, 163, 227,
     24,   0,   0,   0,   1,   0,   5,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,  89,  64,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  51, 100,  97, 121,  80,
    114, 101,  99, 105, 112,  83, 117, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  67, 117, 114, 114, 101,
    110, 116,  68,  97, 121,  80, 114, 101,
     99, 105, 112,  83, 117, 109,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 114, 118, 101, 115, 116,  84,
    105, 109, 101,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     52, 252,  27, 188,  87, 148, 160, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    239, 137,  66, 176,  91, 229, 212, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3a37e340f816cd1 = b_e3a37e340f816cd1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3a37e340f816cd1[] = {
  &s_8fa09457bc1bfc34,
  &s_eed4e55bb04289ef,
};
static const uint16_t m_e3a37e340f816cd1[] = {5, 4, 2, 3, 1, 0};
static const uint16_t i_e3a37e340f816cd1[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_e3a37e340f816cd1 = {
  0xe3a37e340f816cd1, b_e3a37e340f816cd1.words, 117, d_e3a37e340f816cd1, m_e3a37e340f816cd1,
  2, 6, i_e3a37e340f816cd1, nullptr, nullptr, { &s_e3a37e340f816cd1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_fec75f2ddd43431d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  67,  67, 221,  45,  95, 199, 254,
     24,   0,   0,   0,   1,   0,   1,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     67, 117, 116, 116, 105, 110, 103,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    178,  55,  11, 140,  80, 178,  91, 130,
     17,   0,   0,   0,  26,   0,   0,   0,
    162, 155,  64, 114, 228,  99, 199, 240,
     13,   0,   0,   0,  42,   0,   0,   0,
    252, 158, 247, 250,   4,  30,  34, 154,
      9,   0,   0,   0,  42,   0,   0,   0,
     67,  76,   0,   0,   0,   0,   0,   0,
     85, 110, 105, 116,   0,   0,   0,   0,
     83, 112, 101,  99,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     99, 117, 116, 116, 105, 110, 103,  83,
    112, 101,  99,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    252, 158, 247, 250,   4,  30,  34, 154,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 116,  77,  97, 120,  65, 115,
    115, 105, 109, 105, 108,  97, 116, 105,
    111, 110,  82,  97, 116, 101,  80, 101,
    114,  99, 101, 110, 116,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fec75f2ddd43431d = b_fec75f2ddd43431d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fec75f2ddd43431d[] = {
  &s_9a221e04faf79efc,
};
static const uint16_t m_fec75f2ddd43431d[] = {1, 0};
static const uint16_t i_fec75f2ddd43431d[] = {0, 1};
const ::capnp::_::RawSchema s_fec75f2ddd43431d = {
  0xfec75f2ddd43431d, b_fec75f2ddd43431d.words, 66, d_fec75f2ddd43431d, m_fec75f2ddd43431d,
  1, 2, i_fec75f2ddd43431d, nullptr, nullptr, { &s_fec75f2ddd43431d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_825bb2508c0b37b2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178,  55,  11, 140,  80, 178,  91, 130,
     32,   0,   0,   0,   2,   0,   0,   0,
     29,  67,  67, 221,  45,  95, 199, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     67, 117, 116, 116, 105, 110, 103,  46,
     67,  76,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 116,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0, }
};
::capnp::word const* const bp_825bb2508c0b37b2 = b_825bb2508c0b37b2.words;
#if !CAPNP_LITE
static const uint16_t m_825bb2508c0b37b2[] = {0, 1};
const ::capnp::_::RawSchema s_825bb2508c0b37b2 = {
  0x825bb2508c0b37b2, b_825bb2508c0b37b2.words, 27, nullptr, m_825bb2508c0b37b2,
  0, 2, nullptr, nullptr, nullptr, { &s_825bb2508c0b37b2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CL_825bb2508c0b37b2, 825bb2508c0b37b2);
static const ::capnp::_::AlignedData<32> b_f0c763e472409ba2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    162, 155,  64, 114, 228,  99, 199, 240,
     32,   0,   0,   0,   2,   0,   0,   0,
     29,  67,  67, 221,  45,  95, 199, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     67, 117, 116, 116, 105, 110, 103,  46,
     85, 110, 105, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114,  99, 101, 110, 116,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
     98, 105, 111, 109,  97, 115, 115,   0,
    108,  97, 105,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0c763e472409ba2 = b_f0c763e472409ba2.words;
#if !CAPNP_LITE
static const uint16_t m_f0c763e472409ba2[] = {1, 2, 0};
const ::capnp::_::RawSchema s_f0c763e472409ba2 = {
  0xf0c763e472409ba2, b_f0c763e472409ba2.words, 32, nullptr, m_f0c763e472409ba2,
  0, 3, nullptr, nullptr, nullptr, { &s_f0c763e472409ba2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Unit_f0c763e472409ba2, f0c763e472409ba2);
static const ::capnp::_::AlignedData<97> b_9a221e04faf79efc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    252, 158, 247, 250,   4,  30,  34, 154,
     32,   0,   0,   0,   1,   0,   3,   0,
     29,  67,  67, 221,  45,  95, 199, 254,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     67, 117, 116, 116, 105, 110, 103,  46,
     83, 112, 101,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 103,  97, 110,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    222,  66,  61, 184,  20,   9, 213, 194,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 105, 116,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    162, 155,  64, 114, 228,  99, 199, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 116,  79, 114,  76, 101, 102,
    116,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    178,  55,  11, 140,  80, 178,  91, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 111, 114, 116,  80, 101,
    114,  99, 101, 110, 116,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,  89,  64,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9a221e04faf79efc = b_9a221e04faf79efc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9a221e04faf79efc[] = {
  &s_825bb2508c0b37b2,
  &s_c2d50914b83d42de,
  &s_f0c763e472409ba2,
};
static const uint16_t m_9a221e04faf79efc[] = {3, 4, 0, 2, 1};
static const uint16_t i_9a221e04faf79efc[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_9a221e04faf79efc = {
  0x9a221e04faf79efc, b_9a221e04faf79efc.words, 97, d_9a221e04faf79efc, m_9a221e04faf79efc,
  3, 5, i_9a221e04faf79efc, nullptr, nullptr, { &s_9a221e04faf79efc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_d3da30ea7b25d921 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33, 217,  37, 123, 234,  48, 218, 211,
     24,   0,   0,   0,   1,   0,   1,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     77, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    225,  21,   5,  57,  97, 131, 215, 252,
      1,   0,   0,   0,  90,   0,   0,   0,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    225,  21,   5,  57,  97, 131, 215, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 109, 111, 117, 110, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d3da30ea7b25d921 = b_d3da30ea7b25d921.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d3da30ea7b25d921[] = {
  &s_fcd78361390515e1,
};
static const uint16_t m_d3da30ea7b25d921[] = {1, 0};
static const uint16_t i_d3da30ea7b25d921[] = {0, 1};
const ::capnp::_::RawSchema s_d3da30ea7b25d921 = {
  0xd3da30ea7b25d921, b_d3da30ea7b25d921.words, 55, d_d3da30ea7b25d921, m_d3da30ea7b25d921,
  1, 2, i_d3da30ea7b25d921, nullptr, nullptr, { &s_d3da30ea7b25d921, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<97> b_fcd78361390515e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225,  21,   5,  57,  97, 131, 215, 252,
     45,   0,   0,   0,   1,   0,   3,   0,
     33, 217,  37, 123, 234,  48, 218, 211,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     77, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,  46,  80,  97, 114,
     97, 109, 101, 116, 101, 114, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114,  98,  97, 109, 105, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 104,  52,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  51,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fcd78361390515e1 = b_fcd78361390515e1.words;
#if !CAPNP_LITE
static const uint16_t m_fcd78361390515e1[] = {2, 0, 1, 3, 4};
static const uint16_t i_fcd78361390515e1[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_fcd78361390515e1 = {
  0xfcd78361390515e1, b_fcd78361390515e1.words, 97, nullptr, m_fcd78361390515e1,
  0, 5, i_fcd78361390515e1, nullptr, nullptr, { &s_fcd78361390515e1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<81> b_953375ac67d4f573 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 245, 212, 103, 172, 117,  51, 149,
     24,   0,   0,   0,   1,   0,   3,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     78,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    110,  68, 101, 109,  97, 110, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    225,  21,   5,  57,  97, 131, 215, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 103, 101,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_953375ac67d4f573 = b_953375ac67d4f573.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_953375ac67d4f573[] = {
  &s_fcd78361390515e1,
};
static const uint16_t m_953375ac67d4f573[] = {2, 0, 1, 3};
static const uint16_t i_953375ac67d4f573[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_953375ac67d4f573 = {
  0x953375ac67d4f573, b_953375ac67d4f573.words, 81, d_953375ac67d4f573, m_953375ac67d4f573,
  1, 4, i_953375ac67d4f573, nullptr, nullptr, { &s_953375ac67d4f573, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<75> b_e98c76fb0fb0b2cd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    205, 178, 176,  15, 251, 118, 140, 233,
     24,   0,   0,   0,   1,   0,   2,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    129,  86, 200, 157, 122,  21,  43, 150,
      9,   0,   0,   0, 194,   0,   0,   0,
    154, 253, 162, 204, 137, 153, 145, 176,
     13,   0,   0,   0,  90,   0,   0,   0,
     79, 114, 103,  97, 110, 105,  99,  77,
     97, 116, 116, 101, 114,  80,  97, 114,
     97, 109, 101, 116, 101, 114, 115,   0,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  64,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    154, 253, 162, 204, 137, 153, 145, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 109, 111, 117, 110, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 111, 114, 112, 111, 114,
     97, 116, 105, 111, 110,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e98c76fb0fb0b2cd = b_e98c76fb0fb0b2cd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e98c76fb0fb0b2cd[] = {
  &s_b0919989cca2fd9a,
};
static const uint16_t m_e98c76fb0fb0b2cd[] = {1, 2, 0};
static const uint16_t i_e98c76fb0fb0b2cd[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e98c76fb0fb0b2cd = {
  0xe98c76fb0fb0b2cd, b_e98c76fb0fb0b2cd.words, 75, d_e98c76fb0fb0b2cd, m_e98c76fb0fb0b2cd,
  1, 3, i_e98c76fb0fb0b2cd, nullptr, nullptr, { &s_e98c76fb0fb0b2cd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<239> b_962b157a9dc85681 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129,  86, 200, 157, 122,  21,  43, 150,
     45,   0,   0,   0,   1,   0,  13,   0,
    205, 178, 176,  15, 251, 118, 140, 233,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 223,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,  46,  79, 114, 103,
     97, 110, 105,  99,  77,  97, 116, 116,
    101, 114,  80,  97, 114,  97, 109, 101,
    116, 101, 114, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     52,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   1,   0,   0,   3,   0,   1,   0,
    136,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   1,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    160,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    172,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   1,   0,   0,   3,   0,   1,   0,
    192,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   1,   0,   0,   3,   0,   1,   0,
    200,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
     97, 111, 109,  68, 114, 121,  77,  97,
    116, 116, 101, 114,  67, 111, 110, 116,
    101, 110, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  78,  72,  52,  67, 111,
    110, 116, 101, 110, 116,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  78,  79,  51,  67, 111,
    110, 116, 101, 110, 116,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  67,  97, 114,  98,  97,
    109, 105, 100,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  83, 108, 111, 119,  68,
    101,  99,  67, 111, 101, 102, 102,  83,
    116,  97, 110, 100,  97, 114, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  70,  97, 115, 116,  68,
    101,  99,  67, 111, 101, 102, 102,  83,
    116,  97, 110, 100,  97, 114, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  84,
    111,  65,  79,  77,  83, 108, 111, 119,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  84,
    111,  65,  79,  77,  70,  97, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 110,  82,  97, 116, 105, 111,  65,
     79,  77,  83, 108, 111, 119,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 110,  82,  97, 116, 105, 111,  65,
     79,  77,  70,  97, 115, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  83,
    108, 111, 119,  84, 111,  83,  77,  66,
     83, 108, 111, 119,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  83,
    108, 111, 119,  84, 111,  83,  77,  66,
     70,  97, 115, 116,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  67, 111, 110,  99, 101, 110, 116,
    114,  97, 116, 105, 111, 110,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_962b157a9dc85681 = b_962b157a9dc85681.words;
#if !CAPNP_LITE
static const uint16_t m_962b157a9dc85681[] = {3, 0, 5, 1, 2, 4, 9, 8, 12, 11, 10, 7, 6};
static const uint16_t i_962b157a9dc85681[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
const ::capnp::_::RawSchema s_962b157a9dc85681 = {
  0x962b157a9dc85681, b_962b157a9dc85681.words, 239, nullptr, m_962b157a9dc85681,
  0, 13, i_962b157a9dc85681, nullptr, nullptr, { &s_962b157a9dc85681, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_b0919989cca2fd9a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    154, 253, 162, 204, 137, 153, 145, 176,
     45,   0,   0,   0,   1,   0,   0,   0,
    205, 178, 176,  15, 251, 118, 140, 233,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,  46,  80,  97, 114,
     97, 109, 101, 116, 101, 114, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    129,  86, 200, 157, 122,  21,  43, 150,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0919989cca2fd9a = b_b0919989cca2fd9a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b0919989cca2fd9a[] = {
  &s_962b157a9dc85681,
};
static const uint16_t m_b0919989cca2fd9a[] = {1, 2, 0};
static const uint16_t i_b0919989cca2fd9a[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b0919989cca2fd9a = {
  0xb0919989cca2fd9a, b_b0919989cca2fd9a.words, 66, d_b0919989cca2fd9a, m_b0919989cca2fd9a,
  1, 3, i_b0919989cca2fd9a, nullptr, nullptr, { &s_b0919989cca2fd9a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_88a5848ef8603554 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     84,  53,  96, 248, 142, 132, 165, 136,
     24,   0,   0,   0,   1,   0,   1,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     84, 105, 108, 108,  97, 103, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     51,  51,  51,  51,  51,  51, 211,  63,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_88a5848ef8603554 = b_88a5848ef8603554.words;
#if !CAPNP_LITE
static const uint16_t m_88a5848ef8603554[] = {0};
static const uint16_t i_88a5848ef8603554[] = {0};
const ::capnp::_::RawSchema s_88a5848ef8603554 = {
  0x88a5848ef8603554, b_88a5848ef8603554.words, 33, nullptr, m_88a5848ef8603554,
  0, 1, i_88a5848ef8603554, nullptr, nullptr, { &s_88a5848ef8603554, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<53> b_87feb816363ff43c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60, 244,  63,  54,  22, 184, 254, 135,
     24,   0,   0,   0,   1,   0,   1,   0,
     23, 201,  52,  35, 129, 124,  36, 157,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     73, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     45, 142,  39, 114, 149, 190, 145, 185,
      1,   0,   0,   0,  90,   0,   0,   0,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     97, 109, 111, 117, 110, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     45, 142,  39, 114, 149, 190, 145, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87feb816363ff43c = b_87feb816363ff43c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_87feb816363ff43c[] = {
  &s_b991be9572278e2d,
};
static const uint16_t m_87feb816363ff43c[] = {0, 1};
static const uint16_t i_87feb816363ff43c[] = {0, 1};
const ::capnp::_::RawSchema s_87feb816363ff43c = {
  0x87feb816363ff43c, b_87feb816363ff43c.words, 53, d_87feb816363ff43c, m_87feb816363ff43c,
  1, 2, i_87feb816363ff43c, nullptr, nullptr, { &s_87feb816363ff43c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_b991be9572278e2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45, 142,  39, 114, 149, 190, 145, 185,
     35,   0,   0,   0,   1,   0,   2,   0,
     60, 244,  63,  54,  22, 184, 254, 135,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  80,  97, 114,  97, 109, 115,  46,
     73, 114, 114, 105, 103,  97, 116, 105,
    111, 110,  46,  80,  97, 114,  97, 109,
    101, 116, 101, 114, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    110, 105, 116, 114,  97, 116, 101,  67,
    111, 110,  99, 101, 110, 116, 114,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117, 108, 102,  97, 116, 101,  67,
    111, 110,  99, 101, 110, 116, 114,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b991be9572278e2d = b_b991be9572278e2d.words;
#if !CAPNP_LITE
static const uint16_t m_b991be9572278e2d[] = {0, 1};
static const uint16_t i_b991be9572278e2d[] = {0, 1};
const ::capnp::_::RawSchema s_b991be9572278e2d = {
  0xb991be9572278e2d, b_b991be9572278e2d.words, 54, nullptr, m_b991be9572278e2d,
  0, 2, i_b991be9572278e2d, nullptr, nullptr, { &s_b991be9572278e2d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_bbb7aeae0d097e05 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5, 126,   9,  13, 174, 174, 183, 187,
     17,   0,   0,   0,   3,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 135,   0,   0,   0,
    137,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  70, 101, 114, 116, 105, 108, 105,
    122, 101, 114,  83, 101, 114, 118, 105,
     99, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    194,  21,  38, 222, 148,  41,  41, 197,
    133, 225, 101, 120,  92, 205, 177, 129,
     49,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    128, 212,  65, 111,  84, 250, 194, 177,
    148, 154, 163, 111, 107, 241,   1, 216,
     37,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,  80,  97, 114, 116, 105, 116, 105,
    111, 110,  70, 111, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,  80,  97, 114,  97, 109, 101, 116,
    101, 114, 115,  70, 111, 114,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bbb7aeae0d097e05 = b_bbb7aeae0d097e05.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bbb7aeae0d097e05[] = {
  &s_81b1cd5c7865e185,
  &s_b1c2fa546f41d480,
  &s_b2afd1cb599c48d5,
  &s_c5292994de2615c2,
  &s_d801f16b6fa39a94,
};
static const uint16_t m_bbb7aeae0d097e05[] = {0, 1};
const ::capnp::_::RawSchema s_bbb7aeae0d097e05 = {
  0xbbb7aeae0d097e05, b_bbb7aeae0d097e05.words, 48, d_bbb7aeae0d097e05, m_bbb7aeae0d097e05,
  5, 2, nullptr, nullptr, nullptr, { &s_bbb7aeae0d097e05, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_c5292994de2615c2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194,  21,  38, 222, 148,  41,  41, 197,
     35,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  70, 101, 114, 116, 105, 108, 105,
    122, 101, 114,  83, 101, 114, 118, 105,
     99, 101,  46, 109, 105, 110, 101, 114,
     97, 108,  70, 101, 114, 116, 105, 108,
    105, 122, 101, 114,  80,  97, 114, 116,
    105, 116, 105, 111, 110,  70, 111, 114,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  70, 101, 114, 116,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     59,  75, 106, 196,   8, 160,  92, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c5292994de2615c2 = b_c5292994de2615c2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c5292994de2615c2[] = {
  &s_f95ca008c46a4b3b,
};
static const uint16_t m_c5292994de2615c2[] = {0};
static const uint16_t i_c5292994de2615c2[] = {0};
const ::capnp::_::RawSchema s_c5292994de2615c2 = {
  0xc5292994de2615c2, b_c5292994de2615c2.words, 37, d_c5292994de2615c2, m_c5292994de2615c2,
  1, 1, i_c5292994de2615c2, nullptr, nullptr, { &s_c5292994de2615c2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_81b1cd5c7865e185 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    133, 225, 101, 120,  92, 205, 177, 129,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  70, 101, 114, 116, 105, 108, 105,
    122, 101, 114,  83, 101, 114, 118, 105,
     99, 101,  46, 109, 105, 110, 101, 114,
     97, 108,  70, 101, 114, 116, 105, 108,
    105, 122, 101, 114,  80,  97, 114, 116,
    105, 116, 105, 111, 110,  70, 111, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    225,  21,   5,  57,  97, 131, 215, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81b1cd5c7865e185 = b_81b1cd5c7865e185.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_81b1cd5c7865e185[] = {
  &s_fcd78361390515e1,
};
static const uint16_t m_81b1cd5c7865e185[] = {0};
static const uint16_t i_81b1cd5c7865e185[] = {0};
const ::capnp::_::RawSchema s_81b1cd5c7865e185 = {
  0x81b1cd5c7865e185, b_81b1cd5c7865e185.words, 39, d_81b1cd5c7865e185, m_81b1cd5c7865e185,
  1, 1, i_81b1cd5c7865e185, nullptr, nullptr, { &s_81b1cd5c7865e185, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_b1c2fa546f41d480 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    128, 212,  65, 111,  84, 250, 194, 177,
     35,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  70, 101, 114, 116, 105, 108, 105,
    122, 101, 114,  83, 101, 114, 118, 105,
     99, 101,  46, 111, 114, 103,  97, 110,
    105,  99,  70, 101, 114, 116, 105, 108,
    105, 122, 101, 114,  80,  97, 114,  97,
    109, 101, 116, 101, 114, 115,  70, 111,
    114,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 103,  70, 101, 114, 116,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    185,   8, 181, 234, 248, 184, 172, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1c2fa546f41d480 = b_b1c2fa546f41d480.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1c2fa546f41d480[] = {
  &s_84acb8f8eab508b9,
};
static const uint16_t m_b1c2fa546f41d480[] = {0};
static const uint16_t i_b1c2fa546f41d480[] = {0};
const ::capnp::_::RawSchema s_b1c2fa546f41d480 = {
  0xb1c2fa546f41d480, b_b1c2fa546f41d480.words, 38, d_b1c2fa546f41d480, m_b1c2fa546f41d480,
  1, 1, i_b1c2fa546f41d480, nullptr, nullptr, { &s_b1c2fa546f41d480, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_d801f16b6fa39a94 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 154, 163, 111, 107, 241,   1, 216,
     35,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  70, 101, 114, 116, 105, 108, 105,
    122, 101, 114,  83, 101, 114, 118, 105,
     99, 101,  46, 111, 114, 103,  97, 110,
    105,  99,  70, 101, 114, 116, 105, 108,
    105, 122, 101, 114,  80,  97, 114,  97,
    109, 101, 116, 101, 114, 115,  70, 111,
    114,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    154, 253, 162, 204, 137, 153, 145, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d801f16b6fa39a94 = b_d801f16b6fa39a94.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d801f16b6fa39a94[] = {
  &s_b0919989cca2fd9a,
};
static const uint16_t m_d801f16b6fa39a94[] = {0};
static const uint16_t i_d801f16b6fa39a94[] = {0};
const ::capnp::_::RawSchema s_d801f16b6fa39a94 = {
  0xd801f16b6fa39a94, b_d801f16b6fa39a94.words, 38, d_d801f16b6fa39a94, m_d801f16b6fa39a94,
  1, 1, i_d801f16b6fa39a94, nullptr, nullptr, { &s_d801f16b6fa39a94, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_c876b729b7d7f6d9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    217, 246, 215, 183,  41, 183, 118, 200,
     17,   0,   0,   0,   3,   0,   0,   0,
     62, 107, 234,  60, 245,  58,  10, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  71,   0,   0,   0,
     73,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  83, 101, 114, 118, 105,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    251, 143, 204,  57,  48, 252, 241, 236,
     81, 177, 125,  54, 141, 116, 167, 204,
     17,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   7,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  65, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c876b729b7d7f6d9 = b_c876b729b7d7f6d9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c876b729b7d7f6d9[] = {
  &s_b2afd1cb599c48d5,
  &s_cca7748d367db151,
  &s_ecf1fc3039cc8ffb,
};
static const uint16_t m_c876b729b7d7f6d9[] = {0};
const ::capnp::_::RawSchema s_c876b729b7d7f6d9 = {
  0xc876b729b7d7f6d9, b_c876b729b7d7f6d9.words, 32, d_c876b729b7d7f6d9, m_c876b729b7d7f6d9,
  3, 1, nullptr, nullptr, nullptr, { &s_c876b729b7d7f6d9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_cca7748d367db151 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     81, 177, 125,  54, 141, 116, 167, 204,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  46,  99,  97, 112, 110, 112,
     58,  83, 101, 114, 118, 105,  99, 101,
     46, 109,  97, 110,  97, 103, 101, 109,
    101, 110, 116,  65, 116,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    109, 103, 109, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     66, 200, 154, 103, 253, 237,  93, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cca7748d367db151 = b_cca7748d367db151.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cca7748d367db151[] = {
  &s_9c5dedfd679ac842,
};
static const uint16_t m_cca7748d367db151[] = {0};
static const uint16_t i_cca7748d367db151[] = {0};
const ::capnp::_::RawSchema s_cca7748d367db151 = {
  0xcca7748d367db151, b_cca7748d367db151.words, 38, d_cca7748d367db151, m_cca7748d367db151,
  1, 1, i_cca7748d367db151, nullptr, nullptr, { &s_cca7748d367db151, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mas {
namespace schema {
namespace management {

// Event
constexpr uint16_t Event::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::Type
constexpr uint16_t Event::Type::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Type::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Type::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Type::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::At
constexpr uint16_t Event::At::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::At::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::At::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::At::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::Between
constexpr uint16_t Event::Between::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Between::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Between::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Between::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::After
constexpr uint16_t Event::After::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::After::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::After::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::After::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params
constexpr uint16_t Params::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Sowing
constexpr uint16_t Params::Sowing::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Sowing::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Sowing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Sowing::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::AutomaticSowing
constexpr uint16_t Params::AutomaticSowing::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::AutomaticSowing::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::AutomaticSowing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::AutomaticSowing::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::AutomaticSowing::AvgSoilTemp
constexpr uint16_t Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Harvest
constexpr uint16_t Params::Harvest::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Harvest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Harvest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Harvest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Harvest::OptCarbonMgmtData
constexpr uint16_t Params::Harvest::OptCarbonMgmtData::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Harvest::OptCarbonMgmtData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Harvest::OptCarbonMgmtData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Harvest::OptCarbonMgmtData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::AutomaticHarvest
constexpr uint16_t Params::AutomaticHarvest::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::AutomaticHarvest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::AutomaticHarvest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::AutomaticHarvest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Cutting
constexpr uint16_t Params::Cutting::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Cutting::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Cutting::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Cutting::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Cutting::Spec
constexpr uint16_t Params::Cutting::Spec::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Cutting::Spec::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Cutting::Spec::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Cutting::Spec::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::MineralFertilization
constexpr uint16_t Params::MineralFertilization::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::MineralFertilization::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::MineralFertilization::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::MineralFertilization::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::MineralFertilization::Parameters
constexpr uint16_t Params::MineralFertilization::Parameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::MineralFertilization::Parameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::MineralFertilization::Parameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::MineralFertilization::Parameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::NDemandFertilization
constexpr uint16_t Params::NDemandFertilization::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::NDemandFertilization::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::NDemandFertilization::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::NDemandFertilization::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::OrganicFertilization
constexpr uint16_t Params::OrganicFertilization::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::OrganicFertilization::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::OrganicFertilization::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::OrganicFertilization::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::OrganicFertilization::OrganicMatterParameters
constexpr uint16_t Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::OrganicFertilization::Parameters
constexpr uint16_t Params::OrganicFertilization::Parameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::OrganicFertilization::Parameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::OrganicFertilization::Parameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::OrganicFertilization::Parameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Tillage
constexpr uint16_t Params::Tillage::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Tillage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Tillage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Tillage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Irrigation
constexpr uint16_t Params::Irrigation::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Irrigation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Irrigation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Irrigation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Irrigation::Parameters
constexpr uint16_t Params::Irrigation::Parameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Irrigation::Parameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Irrigation::Parameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Irrigation::Parameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::management::FertilizerService::MineralFertilizerPartitionForParams,  ::mas::schema::management::FertilizerService::MineralFertilizerPartitionForResults>
FertilizerService::Client::mineralFertilizerPartitionForRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::management::FertilizerService::MineralFertilizerPartitionForParams,  ::mas::schema::management::FertilizerService::MineralFertilizerPartitionForResults>(
      0xbbb7aeae0d097e05ull, 0, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::mineralFertilizerPartitionFor(MineralFertilizerPartitionForContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "management.capnp:FertilizerService", "mineralFertilizerPartitionFor",
      0xbbb7aeae0d097e05ull, 0);
}
::capnp::Request< ::mas::schema::management::FertilizerService::OrganicFertilizerParametersForParams,  ::mas::schema::management::FertilizerService::OrganicFertilizerParametersForResults>
FertilizerService::Client::organicFertilizerParametersForRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::management::FertilizerService::OrganicFertilizerParametersForParams,  ::mas::schema::management::FertilizerService::OrganicFertilizerParametersForResults>(
      0xbbb7aeae0d097e05ull, 1, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::organicFertilizerParametersFor(OrganicFertilizerParametersForContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "management.capnp:FertilizerService", "organicFertilizerParametersFor",
      0xbbb7aeae0d097e05ull, 1);
}
::capnp::Capability::Server::DispatchCallResult FertilizerService::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xbbb7aeae0d097e05ull:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("management.capnp:FertilizerService", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult FertilizerService::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        mineralFertilizerPartitionFor(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::management::FertilizerService::MineralFertilizerPartitionForParams,  ::mas::schema::management::FertilizerService::MineralFertilizerPartitionForResults>(context)),
        false
      };
    case 1:
      return {
        organicFertilizerParametersFor(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::management::FertilizerService::OrganicFertilizerParametersForParams,  ::mas::schema::management::FertilizerService::OrganicFertilizerParametersForResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "management.capnp:FertilizerService",
          0xbbb7aeae0d097e05ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// FertilizerService
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::MineralFertilizerPartitionForParams
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::MineralFertilizerPartitionForResults
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::OrganicFertilizerParametersForParams
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::OrganicFertilizerParametersForResults
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::geocoord::LatLonCoord,  ::mas::schema::management::Service::ManagementAtResults>
Service::Client::managementAtRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::geocoord::LatLonCoord,  ::mas::schema::management::Service::ManagementAtResults>(
      0xc876b729b7d7f6d9ull, 0, sizeHint);
}
::kj::Promise<void> Service::Server::managementAt(ManagementAtContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "management.capnp:Service", "managementAt",
      0xc876b729b7d7f6d9ull, 0);
}
::capnp::Capability::Server::DispatchCallResult Service::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xc876b729b7d7f6d9ull:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("management.capnp:Service", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Service::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        managementAt(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::geocoord::LatLonCoord,  ::mas::schema::management::Service::ManagementAtResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "management.capnp:Service",
          0xc876b729b7d7f6d9ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Service
#if !CAPNP_LITE
constexpr ::capnp::Kind Service::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Service::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Service::ManagementAtResults
constexpr uint16_t Service::ManagementAtResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Service::ManagementAtResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Service::ManagementAtResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Service::ManagementAtResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

