// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: monica_management.capnp

#include "monica_management.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<98> b_a1f99f32eea02590 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144,  37, 160, 238,  50, 159, 249, 161,
     37,   0,   0,   0,   1,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  73,  76,  82,
     68,  97, 116, 101, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,  97, 114, 108, 105, 101, 115, 116,
     83, 111, 119, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116, 101, 115, 116,  83, 111,
    119, 105, 110, 103,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116, 101, 115, 116,  72,  97,
    114, 118, 101, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a1f99f32eea02590 = b_a1f99f32eea02590.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a1f99f32eea02590[] = {
  &s_97e6feac0322118d,
};
static const uint16_t m_a1f99f32eea02590[] = {1, 3, 4, 2, 0};
static const uint16_t i_a1f99f32eea02590[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_a1f99f32eea02590 = {
  0xa1f99f32eea02590, b_a1f99f32eea02590.words, 98, d_a1f99f32eea02590, m_a1f99f32eea02590,
  1, 5, i_a1f99f32eea02590, nullptr, nullptr, { &s_a1f99f32eea02590, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<85> b_94aa9c195abf0a1a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     26,  10, 191,  90,  25, 156, 170, 148,
     37,   0,   0,   0,   2,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 135,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  77, 105, 110,
    101, 114,  97, 108,  70, 101, 114, 116,
    105, 108, 105, 122, 101, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     64,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 104, 108, 115,   0,   0,   0,   0,
     97, 108, 122, 111, 110,   0,   0,   0,
     97, 110,   0,   0,   0,   0,   0,   0,
     97, 112,   0,   0,   0,   0,   0,   0,
     97, 115,   0,   0,   0,   0,   0,   0,
     97, 115, 104,   0,   0,   0,   0,   0,
     99, 102,  52,   0,   0,   0,   0,   0,
     99, 112,  49,   0,   0,   0,   0,   0,
     99, 112,  50,   0,   0,   0,   0,   0,
     99, 112,  51,   0,   0,   0,   0,   0,
    110, 112, 107,   0,   0,   0,   0,   0,
    110, 115,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,   0,   0,   0,   0,
    117,  97, 110,   0,   0,   0,   0,   0,
    117,  97, 115,   0,   0,   0,   0,   0,
    117, 110, 105,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94aa9c195abf0a1a = b_94aa9c195abf0a1a.words;
#if !CAPNP_LITE
static const uint16_t m_94aa9c195abf0a1a[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
const ::capnp::_::RawSchema s_94aa9c195abf0a1a = {
  0x94aa9c195abf0a1a, b_94aa9c195abf0a1a.words, 85, nullptr, m_94aa9c195abf0a1a,
  0, 16, nullptr, nullptr, nullptr, { &s_94aa9c195abf0a1a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(MineralFertilizer_94aa9c195abf0a1a, 94aa9c195abf0a1a);
static const ::capnp::_::AlignedData<117> b_fd676465ae0b8cf0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    240, 140,  11, 174, 101, 100, 103, 253,
     37,   0,   0,   0,   2,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  71,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  79, 114, 103,
     97, 110, 105,  99,  70, 101, 114, 116,
    105, 108, 105, 122, 101, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     96,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     23,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 115, 104,   0,   0,   0,   0,   0,
     99,  97, 100, 108, 109,   0,   0,   0,
     99,  97, 109,   0,   0,   0,   0,   0,
     99,  97, 115,   0,   0,   0,   0,   0,
     99,  97, 117,   0,   0,   0,   0,   0,
    100, 103, 100, 108, 109,   0,   0,   0,
    103, 119,  99,   0,   0,   0,   0,   0,
    104, 111, 100, 108, 109,   0,   0,   0,
    109,  99,   0,   0,   0,   0,   0,   0,
    109, 115,   0,   0,   0,   0,   0,   0,
    111, 105,  99,   0,   0,   0,   0,   0,
    112, 105, 100, 108, 109,   0,   0,   0,
    112, 105, 109,   0,   0,   0,   0,   0,
    112, 105, 115,   0,   0,   0,   0,   0,
    112, 105, 117,   0,   0,   0,   0,   0,
    112, 105, 117, 100, 107,   0,   0,   0,
    112, 108, 119,   0,   0,   0,   0,   0,
    112, 111, 100, 108, 109,   0,   0,   0,
    112, 111, 109,   0,   0,   0,   0,   0,
    115, 111, 121,   0,   0,   0,   0,   0,
    115, 115,   0,   0,   0,   0,   0,   0,
    116, 117, 100, 108, 109,   0,   0,   0,
    119, 101, 101, 100, 115,   0,   0,   0,
    119, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fd676465ae0b8cf0 = b_fd676465ae0b8cf0.words;
#if !CAPNP_LITE
static const uint16_t m_fd676465ae0b8cf0[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};
const ::capnp::_::RawSchema s_fd676465ae0b8cf0 = {
  0xfd676465ae0b8cf0, b_fd676465ae0b8cf0.words, 117, nullptr, m_fd676465ae0b8cf0,
  0, 24, nullptr, nullptr, nullptr, { &s_fd676465ae0b8cf0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(OrganicFertilizer_fd676465ae0b8cf0, fd676465ae0b8cf0);
static const ::capnp::_::AlignedData<80> b_d0290daf8de9f2b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176, 242, 233, 141, 175,  13,  41, 208,
     37,   0,   0,   0,   2,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  39,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 108,  97, 103, 101,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    110,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     99, 117, 116, 116, 105, 110, 103,   0,
    115, 101, 116,  86,  97, 108, 117, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 118, 101,  83, 116,  97, 116,
    101,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0290daf8de9f2b0 = b_d0290daf8de9f2b0.words;
#if !CAPNP_LITE
static const uint16_t m_d0290daf8de9f2b0[] = {3, 1, 9, 2, 4, 7, 8, 6, 11, 10, 0, 5};
const ::capnp::_::RawSchema s_d0290daf8de9f2b0 = {
  0xd0290daf8de9f2b0, b_d0290daf8de9f2b0.words, 80, nullptr, m_d0290daf8de9f2b0,
  0, 12, nullptr, nullptr, nullptr, { &s_d0290daf8de9f2b0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(EventType_d0290daf8de9f2b0, d0290daf8de9f2b0);
static const ::capnp::_::AlignedData<44> b_b33447204cdf022c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     44,   2, 223,  76,  32,  71,  52, 179,
     37,   0,   0,   0,   2,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 108,  97,
    110, 116,  79, 114, 103,  97, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 116,   0,   0,   0,   0,
    108, 101,  97, 102,   0,   0,   0,   0,
    115, 104, 111, 111, 116,   0,   0,   0,
    102, 114, 117, 105, 116,   0,   0,   0,
    115, 116, 114, 117, 107, 116,   0,   0,
    115, 117, 103,  97, 114,   0,   0,   0, }
};
::capnp::word const* const bp_b33447204cdf022c = b_b33447204cdf022c.words;
#if !CAPNP_LITE
static const uint16_t m_b33447204cdf022c[] = {3, 1, 0, 2, 4, 5};
const ::capnp::_::RawSchema s_b33447204cdf022c = {
  0xb33447204cdf022c, b_b33447204cdf022c.words, 44, nullptr, m_b33447204cdf022c,
  0, 6, nullptr, nullptr, nullptr, { &s_b33447204cdf022c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PlantOrgan_b33447204cdf022c, b33447204cdf022c);
static const ::capnp::_::AlignedData<116> b_cf672ab379467704 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
     37,   0,   0,   0,   1,   0,   1,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      4,   0,   7,   0,   0,   0,   3,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    224,  17, 238,  19, 197,  77,  72, 229,
     17,   0,   0,   0, 106,   0,   0,   0,
    193,  27, 121,  87,  85,  58, 191, 178,
     17,   0,   0,   0,  90,   0,   0,   0,
    164, 104, 229,  99, 195,  16,  16, 185,
     17,   0,   0,   0,  42,   0,   0,   0,
     69, 120, 116, 101, 114, 110,  97, 108,
     84, 121, 112, 101,   0,   0,   0,   0,
     80, 104, 101, 110, 111,  83, 116,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   3,   0,   1,   0,
    188,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 255, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    250,  75,  21, 243, 203, 116,  70, 219,
    189,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    252, 177, 152,  23,  15, 158,  71, 200,
    165,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0, 253, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     94,  88, 107,  14, 123, 171, 182, 190,
    141,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  48,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    224,  17, 238,  19, 197,  77,  72, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 218,   3, 254, 203, 126, 203, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 116,   0,   0,   0,   0,   0,   0,
     98, 101, 116, 119, 101, 101, 110,   0,
     97, 102, 116, 101, 114,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 117, 110,  65, 116,  83, 116,  97,
    114, 116,  79, 102,  68,  97, 121,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf672ab379467704 = b_cf672ab379467704.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cf672ab379467704[] = {
  &s_beb6ab7b0e6b585e,
  &s_c8479e0f1798b1fc,
  &s_d4cb7ecbfe03dad3,
  &s_db4674cbf3154bfa,
  &s_e5484dc513ee11e0,
};
static const uint16_t m_cf672ab379467704[] = {4, 2, 3, 1, 5, 6, 0};
static const uint16_t i_cf672ab379467704[] = {2, 3, 4, 0, 1, 5, 6};
const ::capnp::_::RawSchema s_cf672ab379467704 = {
  0xcf672ab379467704, b_cf672ab379467704.words, 116, d_cf672ab379467704, m_cf672ab379467704,
  5, 7, i_cf672ab379467704, nullptr, nullptr, { &s_cf672ab379467704, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<71> b_e5484dc513ee11e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224,  17, 238,  19, 197,  77,  72, 229,
     43,   0,   0,   0,   2,   0,   0,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 247,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  46,  69, 120, 116, 101, 114,
    110,  97, 108,  84, 121, 112, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     40,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     97, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 108,  97, 103, 101,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
    110,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     99, 117, 116, 116, 105, 110, 103,   0, }
};
::capnp::word const* const bp_e5484dc513ee11e0 = b_e5484dc513ee11e0.words;
#if !CAPNP_LITE
static const uint16_t m_e5484dc513ee11e0[] = {3, 1, 9, 2, 4, 7, 8, 6, 0, 5};
const ::capnp::_::RawSchema s_e5484dc513ee11e0 = {
  0xe5484dc513ee11e0, b_e5484dc513ee11e0.words, 71, nullptr, m_e5484dc513ee11e0,
  0, 10, nullptr, nullptr, nullptr, { &s_e5484dc513ee11e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ExternalType_e5484dc513ee11e0, e5484dc513ee11e0);
static const ::capnp::_::AlignedData<41> b_b2bf3a5557791bc1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193,  27, 121,  87,  85,  58, 191, 178,
     43,   0,   0,   0,   2,   0,   0,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  46,  80, 104, 101, 110, 111,
     83, 116,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 101, 114, 103, 101, 110,  99,
    101,   0,   0,   0,   0,   0,   0,   0,
    102, 108, 111, 119, 101, 114, 105, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
     97, 110, 116, 104, 101, 115, 105, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116, 117, 114, 105, 116, 121,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2bf3a5557791bc1 = b_b2bf3a5557791bc1.words;
#if !CAPNP_LITE
static const uint16_t m_b2bf3a5557791bc1[] = {2, 0, 1, 3};
const ::capnp::_::RawSchema s_b2bf3a5557791bc1 = {
  0xb2bf3a5557791bc1, b_b2bf3a5557791bc1.words, 41, nullptr, m_b2bf3a5557791bc1,
  0, 4, nullptr, nullptr, nullptr, { &s_b2bf3a5557791bc1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PhenoStage_b2bf3a5557791bc1, b2bf3a5557791bc1);
static const ::capnp::_::AlignedData<52> b_b91010c363e568a4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    164, 104, 229,  99, 195,  16,  16, 185,
     43,   0,   0,   0,   1,   0,   1,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      0,   0,   7,   0,   0,   0,   2,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  46,  84, 121, 112, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 116, 101, 114, 110,  97, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    224,  17, 238,  19, 197,  77,  72, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 110,  97, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    193,  27, 121,  87,  85,  58, 191, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b91010c363e568a4 = b_b91010c363e568a4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b91010c363e568a4[] = {
  &s_b2bf3a5557791bc1,
  &s_e5484dc513ee11e0,
};
static const uint16_t m_b91010c363e568a4[] = {0, 1};
static const uint16_t i_b91010c363e568a4[] = {0, 1};
const ::capnp::_::RawSchema s_b91010c363e568a4 = {
  0xb91010c363e568a4, b_b91010c363e568a4.words, 52, d_b91010c363e568a4, m_b91010c363e568a4,
  2, 2, i_b91010c363e568a4, nullptr, nullptr, { &s_b91010c363e568a4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_db4674cbf3154bfa = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    250,  75,  21, 243, 203, 116,  70, 219,
     43,   0,   0,   0,   1,   0,   1,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  46,  97, 116,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_db4674cbf3154bfa = b_db4674cbf3154bfa.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_db4674cbf3154bfa[] = {
  &s_97e6feac0322118d,
  &s_cf672ab379467704,
};
static const uint16_t m_db4674cbf3154bfa[] = {0};
static const uint16_t i_db4674cbf3154bfa[] = {0};
const ::capnp::_::RawSchema s_db4674cbf3154bfa = {
  0xdb4674cbf3154bfa, b_db4674cbf3154bfa.words, 34, d_db4674cbf3154bfa, m_db4674cbf3154bfa,
  2, 1, i_db4674cbf3154bfa, nullptr, nullptr, { &s_db4674cbf3154bfa, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_c8479e0f1798b1fc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    252, 177, 152,  23,  15, 158,  71, 200,
     43,   0,   0,   0,   1,   0,   1,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  46,  98, 101, 116, 119, 101,
    101, 110,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101,  97, 114, 108, 105, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116, 101, 115, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  17,  34,   3, 172, 254, 230, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c8479e0f1798b1fc = b_c8479e0f1798b1fc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c8479e0f1798b1fc[] = {
  &s_97e6feac0322118d,
  &s_cf672ab379467704,
};
static const uint16_t m_c8479e0f1798b1fc[] = {0, 1};
static const uint16_t i_c8479e0f1798b1fc[] = {0, 1};
const ::capnp::_::RawSchema s_c8479e0f1798b1fc = {
  0xc8479e0f1798b1fc, b_c8479e0f1798b1fc.words, 51, d_c8479e0f1798b1fc, m_c8479e0f1798b1fc,
  2, 2, i_c8479e0f1798b1fc, nullptr, nullptr, { &s_c8479e0f1798b1fc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_beb6ab7b0e6b585e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94,  88, 107,  14, 123, 171, 182, 190,
     43,   0,   0,   0,   1,   0,   1,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      4,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  69, 118, 101,
    110, 116,  46,  97, 102, 116, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    164, 104, 229,  99, 195,  16,  16, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 121, 115,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_beb6ab7b0e6b585e = b_beb6ab7b0e6b585e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_beb6ab7b0e6b585e[] = {
  &s_b91010c363e568a4,
  &s_cf672ab379467704,
};
static const uint16_t m_beb6ab7b0e6b585e[] = {1, 0};
static const uint16_t i_beb6ab7b0e6b585e[] = {0, 1};
const ::capnp::_::RawSchema s_beb6ab7b0e6b585e = {
  0xbeb6ab7b0e6b585e, b_beb6ab7b0e6b585e.words, 50, d_beb6ab7b0e6b585e, m_beb6ab7b0e6b585e,
  2, 2, i_beb6ab7b0e6b585e, nullptr, nullptr, { &s_beb6ab7b0e6b585e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<59> b_cb20e21466098705 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
     37,   0,   0,   0,   1,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0, 167,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   1,   0,   1,   0,
    220,  20, 236,  19,  28,  13, 136, 198,
     73,   0,   0,   0,  58,   0,   0,   0,
     83, 148, 125,  97, 201, 193, 191, 209,
     69,   0,   0,   0, 130,   0,   0,   0,
    104, 164, 242, 112,  29, 148, 235, 143,
     69,   0,   0,   0,  66,   0,   0,   0,
      2,   7, 184, 171,  47, 210,   5, 248,
     65,   0,   0,   0, 138,   0,   0,   0,
    217, 126, 255, 171, 198, 218,  96, 132,
     69,   0,   0,   0,  66,   0,   0,   0,
    189, 222, 120, 225,  38, 210,  99, 163,
     65,   0,   0,   0, 170,   0,   0,   0,
     28,  70, 205, 224, 146,  78, 193, 199,
     69,   0,   0,   0, 170,   0,   0,   0,
    176,  80, 237, 127, 140, 131, 146, 180,
     73,   0,   0,   0, 170,   0,   0,   0,
     89,  44,  62,  78,  26, 129,  73, 170,
     77,   0,   0,   0,  66,   0,   0,   0,
    248,  79,  64, 142, 165,  57,   9, 217,
     73,   0,   0,   0,  90,   0,   0,   0,
     83, 111, 119, 105, 110, 103,   0,   0,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  83, 111, 119, 105, 110, 103,   0,
     72,  97, 114, 118, 101, 115, 116,   0,
     65, 117, 116, 111, 109,  97, 116, 105,
     99,  72,  97, 114, 118, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     67, 117, 116, 116, 105, 110, 103,   0,
     77, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     78,  68, 101, 109,  97, 110, 100,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     84, 105, 108, 108,  97, 103, 101,   0,
     73, 114, 114, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cb20e21466098705 = b_cb20e21466098705.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cb20e21466098705 = {
  0xcb20e21466098705, b_cb20e21466098705.words, 59, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cb20e21466098705, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_c6880d1c13ec14dc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    220,  20, 236,  19,  28,  13, 136, 198,
     44,   0,   0,   0,   1,   0,   1,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  83, 111, 119, 105,
    110, 103,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
     99, 117, 108, 116, 105, 118,  97, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    180, 226, 100,   8,  82, 176, 129, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 110, 116,  68, 101, 110,
    115, 105, 116, 121,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 111, 112,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    132,  92, 191,  36, 163, 151, 141, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c6880d1c13ec14dc = b_c6880d1c13ec14dc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c6880d1c13ec14dc[] = {
  &s_dd81b0520864e2b4,
  &s_e88d97a324bf5c84,
};
static const uint16_t m_c6880d1c13ec14dc[] = {2, 0, 1};
static const uint16_t i_c6880d1c13ec14dc[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c6880d1c13ec14dc = {
  0xc6880d1c13ec14dc, b_c6880d1c13ec14dc.words, 68, d_c6880d1c13ec14dc, m_c6880d1c13ec14dc,
  2, 3, i_c6880d1c13ec14dc, nullptr, nullptr, { &s_c6880d1c13ec14dc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<190> b_d1bfc1c9617d9453 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83, 148, 125,  97, 201, 193, 191, 209,
     44,   0,   0,   0,   1,   0,   8,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   1,   0,   0,
     49,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  55,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  65, 117, 116, 111,
    109,  97, 116, 105,  99,  83, 111, 119,
    105, 110, 103,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    209, 134, 177,  51, 116,  86, 111, 132,
      1,   0,   0,   0,  98,   0,   0,   0,
     65, 118, 103,  83, 111, 105, 108,  84,
    101, 109, 112,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   1,   0,   0,   3,   0,   1,   0,
     36,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   3,   0,   1,   0,
     64,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   1,   0,   0,   3,   0,   1,   0,
     76,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
     88,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   1,   0,   0,   3,   0,   1,   0,
     96,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    104,   1,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  84, 101, 109, 112,  84,
    104, 114, 101, 115, 104, 111, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 121, 115,  73, 110,  84, 101,
    109, 112,  87, 105, 110, 100, 111, 119,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,  89,  64,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  51, 100,  97, 121,  80,
    114, 101,  99, 105, 112,  83, 117, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  67, 117, 114, 114, 101,
    110, 116,  68,  97, 121,  80, 114, 101,
     99, 105, 112,  83, 117, 109,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 109, 112,  83, 117, 109,  65,
     98, 111, 118, 101,  66,  97, 115, 101,
     84, 101, 109, 112,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 115, 101,  84, 101, 109, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 118, 103,  83, 111, 105, 108,  84,
    101, 109, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209, 134, 177,  51, 116,  86, 111, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    220,  20, 236,  19,  28,  13, 136, 198,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d1bfc1c9617d9453 = b_d1bfc1c9617d9453.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d1bfc1c9617d9453[] = {
  &s_846f567433b186d1,
  &s_c6880d1c13ec14dc,
};
static const uint16_t m_d1bfc1c9617d9453[] = {8, 7, 1, 4, 5, 3, 2, 0, 9, 6};
static const uint16_t i_d1bfc1c9617d9453[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
const ::capnp::_::RawSchema s_d1bfc1c9617d9453 = {
  0xd1bfc1c9617d9453, b_d1bfc1c9617d9453.words, 190, d_d1bfc1c9617d9453, m_d1bfc1c9617d9453,
  2, 10, i_d1bfc1c9617d9453, nullptr, nullptr, { &s_d1bfc1c9617d9453, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<75> b_846f567433b186d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 134, 177,  51, 116,  86, 111, 132,
     60,   0,   0,   0,   1,   0,   3,   0,
     83, 148, 125,  97, 201, 193, 191, 209,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  65, 117, 116, 111,
    109,  97, 116, 105,  99,  83, 111, 119,
    105, 110, 103,  46,  65, 118, 103,  83,
    111, 105, 108,  84, 101, 109, 112,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 105, 108,  68, 101, 112, 116,
    104,  70, 111, 114,  65, 118, 101, 114,
     97, 103, 105, 110, 103,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     51,  51,  51,  51,  51,  51, 211,  63,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 121, 115,  73, 110,  83, 111,
    105, 108,  84, 101, 109, 112,  87, 105,
    110, 100, 111, 119,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 119, 105, 110, 103,  73, 102,
     65,  98, 111, 118, 101,  65, 118, 103,
     83, 111, 105, 108,  84, 101, 109, 112,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_846f567433b186d1 = b_846f567433b186d1.words;
#if !CAPNP_LITE
static const uint16_t m_846f567433b186d1[] = {1, 0, 2};
static const uint16_t i_846f567433b186d1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_846f567433b186d1 = {
  0x846f567433b186d1, b_846f567433b186d1.words, 75, nullptr, m_846f567433b186d1,
  0, 3, i_846f567433b186d1, nullptr, nullptr, { &s_846f567433b186d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<62> b_8feb941d70f2a468 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 164, 242, 112,  29, 148, 235, 143,
     44,   0,   0,   0,   1,   0,   1,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  72,  97, 114, 118,
    101, 115, 116,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,  55, 150,  30, 148, 188, 169, 169,
      9,   0,   0,   0,  82,   0,   0,   0,
    117, 227, 118, 190, 155, 171,  73, 175,
      9,   0,   0,   0, 146,   0,   0,   0,
     67, 114, 111, 112,  85, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
     79, 112, 116,  67,  97, 114,  98, 111,
    110,  77, 103, 109, 116,  68,  97, 116,
     97,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    101, 120, 112, 111, 114, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 112, 116,  67,  97, 114,  98,  77,
    103, 109, 116,  68,  97, 116,  97,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    117, 227, 118, 190, 155, 171,  73, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8feb941d70f2a468 = b_8feb941d70f2a468.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8feb941d70f2a468[] = {
  &s_af49ab9bbe76e375,
};
static const uint16_t m_8feb941d70f2a468[] = {0, 1};
static const uint16_t i_8feb941d70f2a468[] = {0, 1};
const ::capnp::_::RawSchema s_8feb941d70f2a468 = {
  0x8feb941d70f2a468, b_8feb941d70f2a468.words, 62, d_8feb941d70f2a468, m_8feb941d70f2a468,
  1, 2, i_8feb941d70f2a468, nullptr, nullptr, { &s_8feb941d70f2a468, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_a9a9bc941e963701 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      1,  55, 150,  30, 148, 188, 169, 169,
     52,   0,   0,   0,   2,   0,   0,   0,
    104, 164, 242, 112,  29, 148, 235, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  72,  97, 114, 118,
    101, 115, 116,  46,  67, 114, 111, 112,
     85, 115,  97, 103, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 114, 101, 101, 110,  77,  97, 110,
    117, 114, 101,   0,   0,   0,   0,   0,
     98, 105, 111, 109,  97, 115, 115,  80,
    114, 111, 100, 117,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9a9bc941e963701 = b_a9a9bc941e963701.words;
#if !CAPNP_LITE
static const uint16_t m_a9a9bc941e963701[] = {1, 0};
const ::capnp::_::RawSchema s_a9a9bc941e963701 = {
  0xa9a9bc941e963701, b_a9a9bc941e963701.words, 33, nullptr, m_a9a9bc941e963701,
  0, 2, nullptr, nullptr, nullptr, { &s_a9a9bc941e963701, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CropUsage_a9a9bc941e963701, a9a9bc941e963701);
static const ::capnp::_::AlignedData<125> b_af49ab9bbe76e375 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    117, 227, 118, 190, 155, 171,  73, 175,
     52,   0,   0,   0,   1,   0,   5,   0,
    104, 164, 242, 112,  29, 148, 235, 143,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  72,  97, 114, 118,
    101, 115, 116,  46,  79, 112, 116,  67,
     97, 114,  98, 111, 110,  77, 103, 109,
    116,  68,  97, 116,  97,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 210,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
    111, 112, 116,  67,  97, 114,  98, 111,
    110,  67, 111, 110, 115, 101, 114, 118,
     97, 116, 105, 111, 110,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 111, 112,  73, 109, 112,  97,
     99, 116,  79, 110,  72, 117, 109, 117,
    115,  66,  97, 108,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 111, 112,  85, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      1,  55, 150,  30, 148, 188, 169, 169,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 105, 100, 117, 101,  72,
    101, 113,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,  72, 101, 113,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  82, 101, 115, 105, 100,
    117, 101,  82, 101,  99, 111, 118, 101,
    114,  70, 114,  97,  99, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af49ab9bbe76e375 = b_af49ab9bbe76e375.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_af49ab9bbe76e375[] = {
  &s_a9a9bc941e963701,
};
static const uint16_t m_af49ab9bbe76e375[] = {1, 2, 5, 0, 4, 3};
static const uint16_t i_af49ab9bbe76e375[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_af49ab9bbe76e375 = {
  0xaf49ab9bbe76e375, b_af49ab9bbe76e375.words, 125, d_af49ab9bbe76e375, m_af49ab9bbe76e375,
  1, 6, i_af49ab9bbe76e375, nullptr, nullptr, { &s_af49ab9bbe76e375, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<119> b_f805d22fabb80702 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      2,   7, 184, 171,  47, 210,   5, 248,
     44,   0,   0,   0,   1,   0,   5,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  65, 117, 116, 111,
    109,  97, 116, 105,  99,  72,  97, 114,
    118, 101, 115, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  80, 101, 114,  99, 101,
    110, 116,  65,  83,  87,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,  89,  64,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  51, 100,  97, 121,  80,
    114, 101,  99, 105, 112,  83, 117, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 120,  67, 117, 114, 114, 101,
    110, 116,  68,  97, 121,  80, 114, 101,
     99, 105, 112,  83, 117, 109,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 114, 118, 101, 115, 116,  84,
    105, 109, 101,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    193,  27, 121,  87,  85,  58, 191, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 114, 118, 101, 115, 116,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    104, 164, 242, 112,  29, 148, 235, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f805d22fabb80702 = b_f805d22fabb80702.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f805d22fabb80702[] = {
  &s_8feb941d70f2a468,
  &s_b2bf3a5557791bc1,
};
static const uint16_t m_f805d22fabb80702[] = {5, 4, 2, 3, 1, 0};
static const uint16_t i_f805d22fabb80702[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_f805d22fabb80702 = {
  0xf805d22fabb80702, b_f805d22fabb80702.words, 119, d_f805d22fabb80702, m_f805d22fabb80702,
  2, 6, i_f805d22fabb80702, nullptr, nullptr, { &s_f805d22fabb80702, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_8460dac6abff7ed9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    217, 126, 255, 171, 198, 218,  96, 132,
     44,   0,   0,   0,   1,   0,   1,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  67, 117, 116, 116,
    105, 110, 103,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    167,  65, 149, 178, 128, 247,  68, 228,
     17,   0,   0,   0,  26,   0,   0,   0,
     94, 101,  54, 241,  71,  41, 211, 148,
     13,   0,   0,   0,  42,   0,   0,   0,
     35,  58, 185, 203, 252, 220, 229, 250,
      9,   0,   0,   0,  42,   0,   0,   0,
     67,  76,   0,   0,   0,   0,   0,   0,
     85, 110, 105, 116,   0,   0,   0,   0,
     83, 112, 101,  99,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     99, 117, 116, 116, 105, 110, 103,  83,
    112, 101,  99,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     35,  58, 185, 203, 252, 220, 229, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 116,  77,  97, 120,  65, 115,
    115, 105, 109, 105, 108,  97, 116, 105,
    111, 110,  82,  97, 116, 101,  80, 101,
    114,  99, 101, 110, 116,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8460dac6abff7ed9 = b_8460dac6abff7ed9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8460dac6abff7ed9[] = {
  &s_fae5dcfccbb93a23,
};
static const uint16_t m_8460dac6abff7ed9[] = {1, 0};
static const uint16_t i_8460dac6abff7ed9[] = {0, 1};
const ::capnp::_::RawSchema s_8460dac6abff7ed9 = {
  0x8460dac6abff7ed9, b_8460dac6abff7ed9.words, 69, d_8460dac6abff7ed9, m_8460dac6abff7ed9,
  1, 2, i_8460dac6abff7ed9, nullptr, nullptr, { &s_8460dac6abff7ed9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<29> b_e444f780b29541a7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    167,  65, 149, 178, 128, 247,  68, 228,
     52,   0,   0,   0,   2,   0,   0,   0,
    217, 126, 255, 171, 198, 218,  96, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  67, 117, 116, 116,
    105, 110, 103,  46,  67,  76,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 116,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e444f780b29541a7 = b_e444f780b29541a7.words;
#if !CAPNP_LITE
static const uint16_t m_e444f780b29541a7[] = {0, 1};
const ::capnp::_::RawSchema s_e444f780b29541a7 = {
  0xe444f780b29541a7, b_e444f780b29541a7.words, 29, nullptr, m_e444f780b29541a7,
  0, 2, nullptr, nullptr, nullptr, { &s_e444f780b29541a7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CL_e444f780b29541a7, e444f780b29541a7);
static const ::capnp::_::AlignedData<35> b_94d32947f136655e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     94, 101,  54, 241,  71,  41, 211, 148,
     52,   0,   0,   0,   2,   0,   0,   0,
    217, 126, 255, 171, 198, 218,  96, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  67, 117, 116, 116,
    105, 110, 103,  46,  85, 110, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114,  99, 101, 110, 116,  97,
    103, 101,   0,   0,   0,   0,   0,   0,
     98, 105, 111, 109,  97, 115, 115,   0,
    108,  97, 105,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94d32947f136655e = b_94d32947f136655e.words;
#if !CAPNP_LITE
static const uint16_t m_94d32947f136655e[] = {1, 2, 0};
const ::capnp::_::RawSchema s_94d32947f136655e = {
  0x94d32947f136655e, b_94d32947f136655e.words, 35, nullptr, m_94d32947f136655e,
  0, 3, nullptr, nullptr, nullptr, { &s_94d32947f136655e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Unit_94d32947f136655e, 94d32947f136655e);
static const ::capnp::_::AlignedData<100> b_fae5dcfccbb93a23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35,  58, 185, 203, 252, 220, 229, 250,
     52,   0,   0,   0,   1,   0,   3,   0,
    217, 126, 255, 171, 198, 218,  96, 132,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  67, 117, 116, 116,
    105, 110, 103,  46,  83, 112, 101,  99,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 103,  97, 110,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     44,   2, 223,  76,  32,  71,  52, 179,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 105, 116,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     94, 101,  54, 241,  71,  41, 211, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 116,  79, 114,  76, 101, 102,
    116,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    167,  65, 149, 178, 128, 247,  68, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 112, 111, 114, 116,  80, 101,
    114,  99, 101, 110, 116,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,  89,  64,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fae5dcfccbb93a23 = b_fae5dcfccbb93a23.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fae5dcfccbb93a23[] = {
  &s_94d32947f136655e,
  &s_b33447204cdf022c,
  &s_e444f780b29541a7,
};
static const uint16_t m_fae5dcfccbb93a23[] = {3, 4, 0, 2, 1};
static const uint16_t i_fae5dcfccbb93a23[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_fae5dcfccbb93a23 = {
  0xfae5dcfccbb93a23, b_fae5dcfccbb93a23.words, 100, d_fae5dcfccbb93a23, m_fae5dcfccbb93a23,
  3, 5, i_fae5dcfccbb93a23, nullptr, nullptr, { &s_fae5dcfccbb93a23, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_a363d226e178debd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    189, 222, 120, 225,  38, 210,  99, 163,
     44,   0,   0,   0,   1,   0,   1,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   2,   0,   0,
     53,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  77, 105, 110, 101,
    114,  97, 108,  70, 101, 114, 116, 105,
    108, 105, 122,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     45,  92, 176, 233, 242,  94,  91, 199,
      1,   0,   0,   0,  90,   0,   0,   0,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     45,  92, 176, 233, 242,  94,  91, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 109, 111, 117, 110, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a363d226e178debd = b_a363d226e178debd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a363d226e178debd[] = {
  &s_c75b5ef2e9b05c2d,
};
static const uint16_t m_a363d226e178debd[] = {1, 0};
static const uint16_t i_a363d226e178debd[] = {0, 1};
const ::capnp::_::RawSchema s_a363d226e178debd = {
  0xa363d226e178debd, b_a363d226e178debd.words, 58, d_a363d226e178debd, m_a363d226e178debd,
  1, 2, i_a363d226e178debd, nullptr, nullptr, { &s_a363d226e178debd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<70> b_c75b5ef2e9b05c2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45,  92, 176, 233, 242,  94,  91, 199,
     65,   0,   0,   0,   1,   0,   3,   0,
    189, 222, 120, 225,  38, 210,  99, 163,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  77, 105, 110, 101,
    114,  97, 108,  70, 101, 114, 116, 105,
    108, 105, 122,  97, 116, 105, 111, 110,
     46,  80,  97, 114,  97, 109, 101, 116,
    101, 114, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 114,  98,  97, 109, 105, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 104,  52,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  51,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c75b5ef2e9b05c2d = b_c75b5ef2e9b05c2d.words;
#if !CAPNP_LITE
static const uint16_t m_c75b5ef2e9b05c2d[] = {0, 1, 2};
static const uint16_t i_c75b5ef2e9b05c2d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c75b5ef2e9b05c2d = {
  0xc75b5ef2e9b05c2d, b_c75b5ef2e9b05c2d.words, 70, nullptr, m_c75b5ef2e9b05c2d,
  0, 3, i_c75b5ef2e9b05c2d, nullptr, nullptr, { &s_c75b5ef2e9b05c2d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_c7c14e92e0cd461c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     28,  70, 205, 224, 146,  78, 193, 199,
     44,   0,   0,   0,   1,   0,   3,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  78,  68, 101, 109,
     97, 110, 100,  70, 101, 114, 116, 105,
    108, 105, 122,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    110,  68, 101, 109,  97, 110, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     45,  92, 176, 233, 242,  94,  91, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 103, 101,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c7c14e92e0cd461c = b_c7c14e92e0cd461c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c7c14e92e0cd461c[] = {
  &s_c75b5ef2e9b05c2d,
};
static const uint16_t m_c7c14e92e0cd461c[] = {2, 0, 1, 3};
static const uint16_t i_c7c14e92e0cd461c[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_c7c14e92e0cd461c = {
  0xc7c14e92e0cd461c, b_c7c14e92e0cd461c.words, 84, d_c7c14e92e0cd461c, m_c7c14e92e0cd461c,
  1, 4, i_c7c14e92e0cd461c, nullptr, nullptr, { &s_c7c14e92e0cd461c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_b492838c7fed50b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176,  80, 237, 127, 140, 131, 146, 180,
     44,   0,   0,   0,   1,   0,   2,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   2,   0,   0,
     53,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  79, 114, 103,  97,
    110, 105,  99,  70, 101, 114, 116, 105,
    108, 105, 122,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
     55,   1,  96, 166,  97, 198, 205, 149,
      9,   0,   0,   0, 194,   0,   0,   0,
    253,  41, 141, 129, 207,  17,  12, 186,
     13,   0,   0,   0,  90,   0,   0,   0,
     79, 114, 103,  97, 110, 105,  99,  77,
     97, 116, 116, 101, 114,  80,  97, 114,
     97, 109, 101, 116, 101, 114, 115,   0,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  64,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    253,  41, 141, 129, 207,  17,  12, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 109, 111, 117, 110, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110,  99, 111, 114, 112, 111, 114,
     97, 116, 105, 111, 110,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b492838c7fed50b0 = b_b492838c7fed50b0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b492838c7fed50b0[] = {
  &s_ba0c11cf818d29fd,
};
static const uint16_t m_b492838c7fed50b0[] = {1, 2, 0};
static const uint16_t i_b492838c7fed50b0[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b492838c7fed50b0 = {
  0xb492838c7fed50b0, b_b492838c7fed50b0.words, 78, d_b492838c7fed50b0, m_b492838c7fed50b0,
  1, 3, i_b492838c7fed50b0, nullptr, nullptr, { &s_b492838c7fed50b0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<242> b_95cdc661a6600137 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55,   1,  96, 166,  97, 198, 205, 149,
     65,   0,   0,   0,   1,   0,  13,   0,
    176,  80, 237, 127, 140, 131, 146, 180,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   2,   0,   0,
     65,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0, 223,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  79, 114, 103,  97,
    110, 105,  99,  70, 101, 114, 116, 105,
    108, 105, 122,  97, 116, 105, 111, 110,
     46,  79, 114, 103,  97, 110, 105,  99,
     77,  97, 116, 116, 101, 114,  80,  97,
    114,  97, 109, 101, 116, 101, 114, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     52,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   1,   0,   0,   3,   0,   1,   0,
    116,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   1,   0,   0,   3,   0,   1,   0,
    136,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   1,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    160,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   1,   0,   0,   3,   0,   1,   0,
    172,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   1,   0,   0,   3,   0,   1,   0,
    184,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   1,   0,   0,   3,   0,   1,   0,
    192,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   1,   0,   0,   3,   0,   1,   0,
    200,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   1,   0,   0,   3,   0,   1,   0,
    224,   1,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   1,   0,   0,   3,   0,   1,   0,
    232,   1,   0,   0,   2,   0,   1,   0,
     97, 111, 109,  68, 114, 121,  77,  97,
    116, 116, 101, 114,  67, 111, 110, 116,
    101, 110, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  78,  72,  52,  67, 111,
    110, 116, 101, 110, 116,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  78,  79,  51,  67, 111,
    110, 116, 101, 110, 116,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  67,  97, 114,  98,  97,
    109, 105, 100,  67, 111, 110, 116, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  83, 108, 111, 119,  68,
    101,  99,  67, 111, 101, 102, 102,  83,
    116,  97, 110, 100,  97, 114, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 111, 109,  70,  97, 115, 116,  68,
    101,  99,  67, 111, 101, 102, 102,  83,
    116,  97, 110, 100,  97, 114, 100,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  84,
    111,  65,  79,  77,  83, 108, 111, 119,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  84,
    111,  65,  79,  77,  70,  97, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 110,  82,  97, 116, 105, 111,  65,
     79,  77,  83, 108, 111, 119,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 110,  82,  97, 116, 105, 111,  65,
     79,  77,  70,  97, 115, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  83,
    108, 111, 119,  84, 111,  83,  77,  66,
     83, 108, 111, 119,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116,  65,  79,  77,  83,
    108, 111, 119,  84, 111,  83,  77,  66,
     70,  97, 115, 116,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  67, 111, 110,  99, 101, 110, 116,
    114,  97, 116, 105, 111, 110,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_95cdc661a6600137 = b_95cdc661a6600137.words;
#if !CAPNP_LITE
static const uint16_t m_95cdc661a6600137[] = {3, 0, 5, 1, 2, 4, 9, 8, 12, 11, 10, 7, 6};
static const uint16_t i_95cdc661a6600137[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
const ::capnp::_::RawSchema s_95cdc661a6600137 = {
  0x95cdc661a6600137, b_95cdc661a6600137.words, 242, nullptr, m_95cdc661a6600137,
  0, 13, i_95cdc661a6600137, nullptr, nullptr, { &s_95cdc661a6600137, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_ba0c11cf818d29fd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    253,  41, 141, 129, 207,  17,  12, 186,
     65,   0,   0,   0,   1,   0,   0,   0,
    176,  80, 237, 127, 140, 131, 146, 180,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  79, 114, 103,  97,
    110, 105,  99,  70, 101, 114, 116, 105,
    108, 105, 122,  97, 116, 105, 111, 110,
     46,  80,  97, 114,  97, 109, 101, 116,
    101, 114, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,   1,  96, 166,  97, 198, 205, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba0c11cf818d29fd = b_ba0c11cf818d29fd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba0c11cf818d29fd[] = {
  &s_95cdc661a6600137,
};
static const uint16_t m_ba0c11cf818d29fd[] = {1, 2, 0};
static const uint16_t i_ba0c11cf818d29fd[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ba0c11cf818d29fd = {
  0xba0c11cf818d29fd, b_ba0c11cf818d29fd.words, 69, d_ba0c11cf818d29fd, m_ba0c11cf818d29fd,
  1, 3, i_ba0c11cf818d29fd, nullptr, nullptr, { &s_ba0c11cf818d29fd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_aa49811a4e3e2c59 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89,  44,  62,  78,  26, 129,  73, 170,
     44,   0,   0,   0,   1,   0,   1,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  84, 105, 108, 108,
     97, 103, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 112, 116, 104,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     51,  51,  51,  51,  51,  51, 211,  63,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aa49811a4e3e2c59 = b_aa49811a4e3e2c59.words;
#if !CAPNP_LITE
static const uint16_t m_aa49811a4e3e2c59[] = {0};
static const uint16_t i_aa49811a4e3e2c59[] = {0};
const ::capnp::_::RawSchema s_aa49811a4e3e2c59 = {
  0xaa49811a4e3e2c59, b_aa49811a4e3e2c59.words, 36, nullptr, m_aa49811a4e3e2c59,
  0, 1, i_aa49811a4e3e2c59, nullptr, nullptr, { &s_aa49811a4e3e2c59, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_d90939a58e404ff8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248,  79,  64, 142, 165,  57,   9, 217,
     44,   0,   0,   0,   1,   0,   1,   0,
      5, 135,   9, 102,  20, 226,  32, 203,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  73, 114, 114, 105,
    103,  97, 116, 105, 111, 110,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    153,  21, 127, 232, 137, 224, 201, 174,
      1,   0,   0,   0,  90,   0,   0,   0,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     97, 109, 111, 117, 110, 116,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    153,  21, 127, 232, 137, 224, 201, 174,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d90939a58e404ff8 = b_d90939a58e404ff8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d90939a58e404ff8[] = {
  &s_aec9e089e87f1599,
};
static const uint16_t m_d90939a58e404ff8[] = {0, 1};
static const uint16_t i_d90939a58e404ff8[] = {0, 1};
const ::capnp::_::RawSchema s_d90939a58e404ff8 = {
  0xd90939a58e404ff8, b_d90939a58e404ff8.words, 55, d_d90939a58e404ff8, m_d90939a58e404ff8,
  1, 2, i_d90939a58e404ff8, nullptr, nullptr, { &s_d90939a58e404ff8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_aec9e089e87f1599 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    153,  21, 127, 232, 137, 224, 201, 174,
     55,   0,   0,   0,   1,   0,   2,   0,
    248,  79,  64, 142, 165,  57,   9, 217,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
     53,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 114,
     97, 109, 115,  46,  73, 114, 114, 105,
    103,  97, 116, 105, 111, 110,  46,  80,
     97, 114,  97, 109, 101, 116, 101, 114,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    110, 105, 116, 114,  97, 116, 101,  67,
    111, 110,  99, 101, 110, 116, 114,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117, 108, 102,  97, 116, 101,  67,
    111, 110,  99, 101, 110, 116, 114,  97,
    116, 105, 111, 110,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aec9e089e87f1599 = b_aec9e089e87f1599.words;
#if !CAPNP_LITE
static const uint16_t m_aec9e089e87f1599[] = {0, 1};
static const uint16_t i_aec9e089e87f1599[] = {0, 1};
const ::capnp::_::RawSchema s_aec9e089e87f1599 = {
  0xaec9e089e87f1599, b_aec9e089e87f1599.words, 57, nullptr, m_aec9e089e87f1599,
  0, 2, i_aec9e089e87f1599, nullptr, nullptr, { &s_aec9e089e87f1599, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<103> b_e3da81cc36d5741d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29, 116, 213,  54, 204, 129, 218, 227,
     37,   0,   0,   0,   3,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 135,   1,   0,   0,
    101,   1,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    205, 114,  43,  14,  80, 134,  69, 245,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   5,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     49, 142, 144,  94,  48,   0,  57, 186,
    171, 171, 199,  88, 166, 234, 181, 189,
    177,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    180, 137, 241,   2,  68, 194, 216, 234,
    153, 149, 242,  76,  26,  63, 181, 246,
    165,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    199, 242,   6,  62,  71, 157, 184, 169,
     86, 193, 206, 167, 119, 128,  96, 189,
    153,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    231, 103, 117,  95, 105, 218,  55, 148,
    138,  71,  42, 189, 106,  84,  73, 171,
    141,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    115, 144, 109,   9,  54,  11, 173, 158,
    132, 173, 197,  28, 191, 198, 163, 130,
    129,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    212,  58,  29,  77,  94,   9,  69, 217,
     82,   7, 192,  33,  82,  48, 148, 207,
    113,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,   7,   0,   0,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,  80,  97, 114, 116, 105, 116, 105,
    111, 110,  70, 111, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,  80,  97, 114,  97, 109, 101, 116,
    101, 114, 115,  70, 111, 114,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97, 118,  97, 105, 108,  97,  98, 108,
    101,  77, 105, 110, 101, 114,  97, 108,
     70, 101, 114, 116, 105, 108, 105, 122,
    101, 114, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97, 118,  97, 105, 108,  97,  98, 108,
    101,  79, 114, 103,  97, 110, 105,  99,
     70, 101, 114, 116, 105, 108, 105, 122,
    101, 114, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    109, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    111, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3da81cc36d5741d = b_e3da81cc36d5741d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3da81cc36d5741d[] = {
  &s_82a3c6bf1cc5ad84,
  &s_9437da695f7567e7,
  &s_9ead0b36096d9073,
  &s_a9b89d473e06f2c7,
  &s_ab49546abd2a478a,
  &s_b2afd1cb599c48d5,
  &s_ba3900305e908e31,
  &s_bd608077a7cec156,
  &s_bdb5eaa658c7abab,
  &s_cf94305221c00752,
  &s_d945095e4d1d3ad4,
  &s_ead8c24402f189b4,
  &s_f6b53f1a4cf29599,
};
static const uint16_t m_e3da81cc36d5741d[] = {2, 3, 4, 0, 5, 1};
const ::capnp::_::RawSchema s_e3da81cc36d5741d = {
  0xe3da81cc36d5741d, b_e3da81cc36d5741d.words, 103, d_e3da81cc36d5741d, m_e3da81cc36d5741d,
  13, 6, nullptr, nullptr, nullptr, { &s_e3da81cc36d5741d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_f54586500e2b72cd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    205, 114,  43,  14,  80, 134,  69, 245,
     55,   0,   0,   0,   1,   0,   0,   0,
     29, 116, 213,  54, 204, 129, 218, 227,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46,  69,
    110, 116, 114, 121,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 218,   3, 254, 203, 126, 203, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      1, 193, 124,  56, 221, 197, 246, 137,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f54586500e2b72cd = b_f54586500e2b72cd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f54586500e2b72cd[] = {
  &s_89f6c5dd387cc101,
  &s_d4cb7ecbfe03dad3,
};
static const uint16_t m_f54586500e2b72cd[] = {0, 1};
static const uint16_t i_f54586500e2b72cd[] = {0, 1};
const ::capnp::_::RawSchema s_f54586500e2b72cd = {
  0xf54586500e2b72cd, b_f54586500e2b72cd.words, 52, d_f54586500e2b72cd, m_f54586500e2b72cd,
  2, 2, i_f54586500e2b72cd, nullptr, nullptr, { &s_f54586500e2b72cd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_ba3900305e908e31 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49, 142, 144,  94,  48,   0,  57, 186,
     55,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 109,
    105, 110, 101, 114,  97, 108,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     80,  97, 114, 116, 105, 116, 105, 111,
    110,  70, 111, 114,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  70, 101, 114, 116,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     26,  10, 191,  90,  25, 156, 170, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ba3900305e908e31 = b_ba3900305e908e31.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ba3900305e908e31[] = {
  &s_94aa9c195abf0a1a,
};
static const uint16_t m_ba3900305e908e31[] = {0};
static const uint16_t i_ba3900305e908e31[] = {0};
const ::capnp::_::RawSchema s_ba3900305e908e31 = {
  0xba3900305e908e31, b_ba3900305e908e31.words, 40, d_ba3900305e908e31, m_ba3900305e908e31,
  1, 1, i_ba3900305e908e31, nullptr, nullptr, { &s_ba3900305e908e31, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<41> b_bdb5eaa658c7abab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171, 171, 199,  88, 166, 234, 181, 189,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 109,
    105, 110, 101, 114,  97, 108,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     80,  97, 114, 116, 105, 116, 105, 111,
    110,  70, 111, 114,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     45,  92, 176, 233, 242,  94,  91, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bdb5eaa658c7abab = b_bdb5eaa658c7abab.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bdb5eaa658c7abab[] = {
  &s_c75b5ef2e9b05c2d,
};
static const uint16_t m_bdb5eaa658c7abab[] = {0};
static const uint16_t i_bdb5eaa658c7abab[] = {0};
const ::capnp::_::RawSchema s_bdb5eaa658c7abab = {
  0xbdb5eaa658c7abab, b_bdb5eaa658c7abab.words, 41, d_bdb5eaa658c7abab, m_bdb5eaa658c7abab,
  1, 1, i_bdb5eaa658c7abab, nullptr, nullptr, { &s_bdb5eaa658c7abab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_ead8c24402f189b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180, 137, 241,   2,  68, 194, 216, 234,
     55,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 111,
    114, 103,  97, 110, 105,  99,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,  70, 111, 114,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 103,  70, 101, 114, 116,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    240, 140,  11, 174, 101, 100, 103, 253,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ead8c24402f189b4 = b_ead8c24402f189b4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ead8c24402f189b4[] = {
  &s_fd676465ae0b8cf0,
};
static const uint16_t m_ead8c24402f189b4[] = {0};
static const uint16_t i_ead8c24402f189b4[] = {0};
const ::capnp::_::RawSchema s_ead8c24402f189b4 = {
  0xead8c24402f189b4, b_ead8c24402f189b4.words, 40, d_ead8c24402f189b4, m_ead8c24402f189b4,
  1, 1, i_ead8c24402f189b4, nullptr, nullptr, { &s_ead8c24402f189b4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_f6b53f1a4cf29599 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    153, 149, 242,  76,  26,  63, 181, 246,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 111,
    114, 103,  97, 110, 105,  99,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     80,  97, 114,  97, 109, 101, 116, 101,
    114, 115,  70, 111, 114,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    253,  41, 141, 129, 207,  17,  12, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6b53f1a4cf29599 = b_f6b53f1a4cf29599.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f6b53f1a4cf29599[] = {
  &s_ba0c11cf818d29fd,
};
static const uint16_t m_f6b53f1a4cf29599[] = {0};
static const uint16_t i_f6b53f1a4cf29599[] = {0};
const ::capnp::_::RawSchema s_f6b53f1a4cf29599 = {
  0xf6b53f1a4cf29599, b_f6b53f1a4cf29599.words, 40, d_f6b53f1a4cf29599, m_f6b53f1a4cf29599,
  1, 1, i_f6b53f1a4cf29599, nullptr, nullptr, { &s_f6b53f1a4cf29599, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<24> b_a9b89d473e06f2c7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199, 242,   6,  62,  71, 157, 184, 169,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46,  97,
    118,  97, 105, 108,  97,  98, 108, 101,
     77, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a9b89d473e06f2c7 = b_a9b89d473e06f2c7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a9b89d473e06f2c7 = {
  0xa9b89d473e06f2c7, b_a9b89d473e06f2c7.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a9b89d473e06f2c7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_bd608077a7cec156 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 193, 206, 167, 119, 128,  96, 189,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46,  97,
    118,  97, 105, 108,  97,  98, 108, 101,
     77, 105, 110, 101, 114,  97, 108,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    205, 114,  43,  14,  80, 134,  69, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bd608077a7cec156 = b_bd608077a7cec156.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bd608077a7cec156[] = {
  &s_f54586500e2b72cd,
};
static const uint16_t m_bd608077a7cec156[] = {0};
static const uint16_t i_bd608077a7cec156[] = {0};
const ::capnp::_::RawSchema s_bd608077a7cec156 = {
  0xbd608077a7cec156, b_bd608077a7cec156.words, 44, d_bd608077a7cec156, m_bd608077a7cec156,
  1, 1, i_bd608077a7cec156, nullptr, nullptr, { &s_bd608077a7cec156, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<24> b_9437da695f7567e7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    231, 103, 117,  95, 105, 218,  55, 148,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46,  97,
    118,  97, 105, 108,  97,  98, 108, 101,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9437da695f7567e7 = b_9437da695f7567e7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9437da695f7567e7 = {
  0x9437da695f7567e7, b_9437da695f7567e7.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9437da695f7567e7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_ab49546abd2a478a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    138,  71,  42, 189, 106,  84,  73, 171,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46,  97,
    118,  97, 105, 108,  97,  98, 108, 101,
     79, 114, 103,  97, 110, 105,  99,  70,
    101, 114, 116, 105, 108, 105, 122, 101,
    114, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    205, 114,  43,  14,  80, 134,  69, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab49546abd2a478a = b_ab49546abd2a478a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ab49546abd2a478a[] = {
  &s_f54586500e2b72cd,
};
static const uint16_t m_ab49546abd2a478a[] = {0};
static const uint16_t i_ab49546abd2a478a[] = {0};
const ::capnp::_::RawSchema s_ab49546abd2a478a = {
  0xab49546abd2a478a, b_ab49546abd2a478a.words, 44, d_ab49546abd2a478a, m_ab49546abd2a478a,
  1, 1, i_ab49546abd2a478a, nullptr, nullptr, { &s_ab49546abd2a478a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_9ead0b36096d9073 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 144, 109,   9,  54,  11, 173, 158,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 109,
    105, 110, 101, 114,  97, 108,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ead0b36096d9073 = b_9ead0b36096d9073.words;
#if !CAPNP_LITE
static const uint16_t m_9ead0b36096d9073[] = {0};
static const uint16_t i_9ead0b36096d9073[] = {0};
const ::capnp::_::RawSchema s_9ead0b36096d9073 = {
  0x9ead0b36096d9073, b_9ead0b36096d9073.words, 38, nullptr, m_9ead0b36096d9073,
  0, 1, i_9ead0b36096d9073, nullptr, nullptr, { &s_9ead0b36096d9073, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_82a3c6bf1cc5ad84 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132, 173, 197,  28, 191, 198, 163, 130,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 109,
    105, 110, 101, 114,  97, 108,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 101, 114, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     45,  92, 176, 233, 242,  94,  91, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82a3c6bf1cc5ad84 = b_82a3c6bf1cc5ad84.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_82a3c6bf1cc5ad84[] = {
  &s_c75b5ef2e9b05c2d,
};
static const uint16_t m_82a3c6bf1cc5ad84[] = {0};
static const uint16_t i_82a3c6bf1cc5ad84[] = {0};
const ::capnp::_::RawSchema s_82a3c6bf1cc5ad84 = {
  0x82a3c6bf1cc5ad84, b_82a3c6bf1cc5ad84.words, 39, d_82a3c6bf1cc5ad84, m_82a3c6bf1cc5ad84,
  1, 1, i_82a3c6bf1cc5ad84, nullptr, nullptr, { &s_82a3c6bf1cc5ad84, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_d945095e4d1d3ad4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    212,  58,  29,  77,  94,   9,  69, 217,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 111,
    114, 103,  97, 110, 105,  99,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d945095e4d1d3ad4 = b_d945095e4d1d3ad4.words;
#if !CAPNP_LITE
static const uint16_t m_d945095e4d1d3ad4[] = {0};
static const uint16_t i_d945095e4d1d3ad4[] = {0};
const ::capnp::_::RawSchema s_d945095e4d1d3ad4 = {
  0xd945095e4d1d3ad4, b_d945095e4d1d3ad4.words, 38, nullptr, m_d945095e4d1d3ad4,
  0, 1, i_d945095e4d1d3ad4, nullptr, nullptr, { &s_d945095e4d1d3ad4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_cf94305221c00752 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     82,   7, 192,  33,  82,  48, 148, 207,
     55,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  70, 101, 114,
    116, 105, 108, 105, 122, 101, 114,  83,
    101, 114, 118, 105,  99, 101,  46, 111,
    114, 103,  97, 110, 105,  99,  70, 101,
    114, 116, 105, 108, 105, 122, 101, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 101, 114, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,   1,  96, 166,  97, 198, 205, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf94305221c00752 = b_cf94305221c00752.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cf94305221c00752[] = {
  &s_95cdc661a6600137,
};
static const uint16_t m_cf94305221c00752[] = {0};
static const uint16_t i_cf94305221c00752[] = {0};
const ::capnp::_::RawSchema s_cf94305221c00752 = {
  0xcf94305221c00752, b_cf94305221c00752.words, 39, d_cf94305221c00752, m_cf94305221c00752,
  1, 1, i_cf94305221c00752, nullptr, nullptr, { &s_cf94305221c00752, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_bfda1920aff38c07 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      7, 140, 243, 175,  32,  25, 218, 191,
     37,   0,   0,   0,   3,   0,   0,   0,
     47, 212, 149, 162, 101, 124,  51, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  71,   0,   0,   0,
     81,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 101, 114,
    118, 105,  99, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    251, 143, 204,  57,  48, 252, 241, 236,
    219, 123,  86, 220,  63, 122,  45, 243,
     17,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   7,   0,   0,   0,
    109,  97, 110,  97, 103, 101, 109, 101,
    110, 116,  65, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bfda1920aff38c07 = b_bfda1920aff38c07.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bfda1920aff38c07[] = {
  &s_b2afd1cb599c48d5,
  &s_ecf1fc3039cc8ffb,
  &s_f32d7a3fdc567bdb,
};
static const uint16_t m_bfda1920aff38c07[] = {0};
const ::capnp::_::RawSchema s_bfda1920aff38c07 = {
  0xbfda1920aff38c07, b_bfda1920aff38c07.words, 34, d_bfda1920aff38c07, m_bfda1920aff38c07,
  3, 1, nullptr, nullptr, nullptr, { &s_bfda1920aff38c07, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<41> b_f32d7a3fdc567bdb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219, 123,  86, 220,  63, 122,  45, 243,
     45,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 109, 111, 110,
    105,  99,  97,  95, 109,  97, 110,  97,
    103, 101, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 101, 114,
    118, 105,  99, 101,  46, 109,  97, 110,
     97, 103, 101, 109, 101, 110, 116,  65,
    116,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    109, 103, 109, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4, 119,  70, 121, 179,  42, 103, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f32d7a3fdc567bdb = b_f32d7a3fdc567bdb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f32d7a3fdc567bdb[] = {
  &s_cf672ab379467704,
};
static const uint16_t m_f32d7a3fdc567bdb[] = {0};
static const uint16_t i_f32d7a3fdc567bdb[] = {0};
const ::capnp::_::RawSchema s_f32d7a3fdc567bdb = {
  0xf32d7a3fdc567bdb, b_f32d7a3fdc567bdb.words, 41, d_f32d7a3fdc567bdb, m_f32d7a3fdc567bdb,
  1, 1, i_f32d7a3fdc567bdb, nullptr, nullptr, { &s_f32d7a3fdc567bdb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mas {
namespace schema {
namespace model {
namespace monica {

// ILRDates
constexpr uint16_t ILRDates::_capnpPrivate::dataWordSize;
constexpr uint16_t ILRDates::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ILRDates::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ILRDates::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event
constexpr uint16_t Event::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::Type
constexpr uint16_t Event::Type::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Type::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Type::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Type::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::At
constexpr uint16_t Event::At::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::At::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::At::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::At::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::Between
constexpr uint16_t Event::Between::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::Between::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::Between::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::Between::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Event::After
constexpr uint16_t Event::After::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::After::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::After::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::After::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params
constexpr uint16_t Params::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Sowing
constexpr uint16_t Params::Sowing::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Sowing::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Sowing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Sowing::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::AutomaticSowing
constexpr uint16_t Params::AutomaticSowing::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::AutomaticSowing::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::AutomaticSowing::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::AutomaticSowing::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::AutomaticSowing::AvgSoilTemp
constexpr uint16_t Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::AutomaticSowing::AvgSoilTemp::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Harvest
constexpr uint16_t Params::Harvest::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Harvest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Harvest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Harvest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Harvest::OptCarbonMgmtData
constexpr uint16_t Params::Harvest::OptCarbonMgmtData::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Harvest::OptCarbonMgmtData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Harvest::OptCarbonMgmtData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Harvest::OptCarbonMgmtData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::AutomaticHarvest
constexpr uint16_t Params::AutomaticHarvest::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::AutomaticHarvest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::AutomaticHarvest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::AutomaticHarvest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Cutting
constexpr uint16_t Params::Cutting::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Cutting::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Cutting::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Cutting::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Cutting::Spec
constexpr uint16_t Params::Cutting::Spec::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Cutting::Spec::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Cutting::Spec::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Cutting::Spec::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::MineralFertilization
constexpr uint16_t Params::MineralFertilization::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::MineralFertilization::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::MineralFertilization::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::MineralFertilization::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::MineralFertilization::Parameters
constexpr uint16_t Params::MineralFertilization::Parameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::MineralFertilization::Parameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::MineralFertilization::Parameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::MineralFertilization::Parameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::NDemandFertilization
constexpr uint16_t Params::NDemandFertilization::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::NDemandFertilization::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::NDemandFertilization::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::NDemandFertilization::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::OrganicFertilization
constexpr uint16_t Params::OrganicFertilization::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::OrganicFertilization::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::OrganicFertilization::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::OrganicFertilization::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::OrganicFertilization::OrganicMatterParameters
constexpr uint16_t Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::OrganicFertilization::OrganicMatterParameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::OrganicFertilization::Parameters
constexpr uint16_t Params::OrganicFertilization::Parameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::OrganicFertilization::Parameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::OrganicFertilization::Parameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::OrganicFertilization::Parameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Tillage
constexpr uint16_t Params::Tillage::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Tillage::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Tillage::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Tillage::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Irrigation
constexpr uint16_t Params::Irrigation::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Irrigation::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Irrigation::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Irrigation::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Params::Irrigation::Parameters
constexpr uint16_t Params::Irrigation::Parameters::_capnpPrivate::dataWordSize;
constexpr uint16_t Params::Irrigation::Parameters::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Params::Irrigation::Parameters::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Params::Irrigation::Parameters::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::model::monica::FertilizerService::MineralFertilizerPartitionForParams,  ::mas::schema::model::monica::FertilizerService::MineralFertilizerPartitionForResults>
FertilizerService::Client::mineralFertilizerPartitionForRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::model::monica::FertilizerService::MineralFertilizerPartitionForParams,  ::mas::schema::model::monica::FertilizerService::MineralFertilizerPartitionForResults>(
      0xe3da81cc36d5741dull, 0, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::mineralFertilizerPartitionFor(MineralFertilizerPartitionForContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:FertilizerService", "mineralFertilizerPartitionFor",
      0xe3da81cc36d5741dull, 0);
}
::capnp::Request< ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParametersForParams,  ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParametersForResults>
FertilizerService::Client::organicFertilizerParametersForRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParametersForParams,  ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParametersForResults>(
      0xe3da81cc36d5741dull, 1, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::organicFertilizerParametersFor(OrganicFertilizerParametersForContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:FertilizerService", "organicFertilizerParametersFor",
      0xe3da81cc36d5741dull, 1);
}
::capnp::Request< ::mas::schema::model::monica::FertilizerService::AvailableMineralFertilizersParams,  ::mas::schema::model::monica::FertilizerService::AvailableMineralFertilizersResults>
FertilizerService::Client::availableMineralFertilizersRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::model::monica::FertilizerService::AvailableMineralFertilizersParams,  ::mas::schema::model::monica::FertilizerService::AvailableMineralFertilizersResults>(
      0xe3da81cc36d5741dull, 2, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::availableMineralFertilizers(AvailableMineralFertilizersContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:FertilizerService", "availableMineralFertilizers",
      0xe3da81cc36d5741dull, 2);
}
::capnp::Request< ::mas::schema::model::monica::FertilizerService::AvailableOrganicFertilizersParams,  ::mas::schema::model::monica::FertilizerService::AvailableOrganicFertilizersResults>
FertilizerService::Client::availableOrganicFertilizersRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::model::monica::FertilizerService::AvailableOrganicFertilizersParams,  ::mas::schema::model::monica::FertilizerService::AvailableOrganicFertilizersResults>(
      0xe3da81cc36d5741dull, 3, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::availableOrganicFertilizers(AvailableOrganicFertilizersContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:FertilizerService", "availableOrganicFertilizers",
      0xe3da81cc36d5741dull, 3);
}
::capnp::Request< ::mas::schema::model::monica::FertilizerService::MineralFertilizerParams,  ::mas::schema::model::monica::FertilizerService::MineralFertilizerResults>
FertilizerService::Client::mineralFertilizerRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::model::monica::FertilizerService::MineralFertilizerParams,  ::mas::schema::model::monica::FertilizerService::MineralFertilizerResults>(
      0xe3da81cc36d5741dull, 4, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::mineralFertilizer(MineralFertilizerContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:FertilizerService", "mineralFertilizer",
      0xe3da81cc36d5741dull, 4);
}
::capnp::Request< ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParams,  ::mas::schema::model::monica::FertilizerService::OrganicFertilizerResults>
FertilizerService::Client::organicFertilizerRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParams,  ::mas::schema::model::monica::FertilizerService::OrganicFertilizerResults>(
      0xe3da81cc36d5741dull, 5, sizeHint);
}
::kj::Promise<void> FertilizerService::Server::organicFertilizer(OrganicFertilizerContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:FertilizerService", "organicFertilizer",
      0xe3da81cc36d5741dull, 5);
}
::capnp::Capability::Server::DispatchCallResult FertilizerService::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xe3da81cc36d5741dull:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("model/monica/monica_management.capnp:FertilizerService", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult FertilizerService::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        mineralFertilizerPartitionFor(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::model::monica::FertilizerService::MineralFertilizerPartitionForParams,  ::mas::schema::model::monica::FertilizerService::MineralFertilizerPartitionForResults>(context)),
        false
      };
    case 1:
      return {
        organicFertilizerParametersFor(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParametersForParams,  ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParametersForResults>(context)),
        false
      };
    case 2:
      return {
        availableMineralFertilizers(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::model::monica::FertilizerService::AvailableMineralFertilizersParams,  ::mas::schema::model::monica::FertilizerService::AvailableMineralFertilizersResults>(context)),
        false
      };
    case 3:
      return {
        availableOrganicFertilizers(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::model::monica::FertilizerService::AvailableOrganicFertilizersParams,  ::mas::schema::model::monica::FertilizerService::AvailableOrganicFertilizersResults>(context)),
        false
      };
    case 4:
      return {
        mineralFertilizer(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::model::monica::FertilizerService::MineralFertilizerParams,  ::mas::schema::model::monica::FertilizerService::MineralFertilizerResults>(context)),
        false
      };
    case 5:
      return {
        organicFertilizer(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::model::monica::FertilizerService::OrganicFertilizerParams,  ::mas::schema::model::monica::FertilizerService::OrganicFertilizerResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "model/monica/monica_management.capnp:FertilizerService",
          0xe3da81cc36d5741dull, methodId);
  }
}
#endif  // !CAPNP_LITE

// FertilizerService
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::Entry
constexpr uint16_t FertilizerService::Entry::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::Entry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::Entry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::Entry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::MineralFertilizerPartitionForParams
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::MineralFertilizerPartitionForParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::MineralFertilizerPartitionForResults
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::MineralFertilizerPartitionForResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::OrganicFertilizerParametersForParams
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::OrganicFertilizerParametersForParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::OrganicFertilizerParametersForResults
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::OrganicFertilizerParametersForResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::AvailableMineralFertilizersParams
constexpr uint16_t FertilizerService::AvailableMineralFertilizersParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::AvailableMineralFertilizersParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::AvailableMineralFertilizersParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::AvailableMineralFertilizersParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::AvailableMineralFertilizersResults
constexpr uint16_t FertilizerService::AvailableMineralFertilizersResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::AvailableMineralFertilizersResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::AvailableMineralFertilizersResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::AvailableMineralFertilizersResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::AvailableOrganicFertilizersParams
constexpr uint16_t FertilizerService::AvailableOrganicFertilizersParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::AvailableOrganicFertilizersParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::AvailableOrganicFertilizersParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::AvailableOrganicFertilizersParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::AvailableOrganicFertilizersResults
constexpr uint16_t FertilizerService::AvailableOrganicFertilizersResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::AvailableOrganicFertilizersResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::AvailableOrganicFertilizersResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::AvailableOrganicFertilizersResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::MineralFertilizerParams
constexpr uint16_t FertilizerService::MineralFertilizerParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::MineralFertilizerParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::MineralFertilizerParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::MineralFertilizerParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::MineralFertilizerResults
constexpr uint16_t FertilizerService::MineralFertilizerResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::MineralFertilizerResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::MineralFertilizerResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::MineralFertilizerResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::OrganicFertilizerParams
constexpr uint16_t FertilizerService::OrganicFertilizerParams::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::OrganicFertilizerParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::OrganicFertilizerParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::OrganicFertilizerParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// FertilizerService::OrganicFertilizerResults
constexpr uint16_t FertilizerService::OrganicFertilizerResults::_capnpPrivate::dataWordSize;
constexpr uint16_t FertilizerService::OrganicFertilizerResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind FertilizerService::OrganicFertilizerResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* FertilizerService::OrganicFertilizerResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::mas::schema::geo::LatLonCoord,  ::mas::schema::model::monica::Service::ManagementAtResults>
Service::Client::managementAtRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::mas::schema::geo::LatLonCoord,  ::mas::schema::model::monica::Service::ManagementAtResults>(
      0xbfda1920aff38c07ull, 0, sizeHint);
}
::kj::Promise<void> Service::Server::managementAt(ManagementAtContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "model/monica/monica_management.capnp:Service", "managementAt",
      0xbfda1920aff38c07ull, 0);
}
::capnp::Capability::Server::DispatchCallResult Service::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xbfda1920aff38c07ull:
      return dispatchCallInternal(methodId, context);
    case 0xb2afd1cb599c48d5ull:
      return  ::mas::schema::common::Identifiable::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("model/monica/monica_management.capnp:Service", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Service::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        managementAt(::capnp::Capability::Server::internalGetTypedContext<
             ::mas::schema::geo::LatLonCoord,  ::mas::schema::model::monica::Service::ManagementAtResults>(context)),
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "model/monica/monica_management.capnp:Service",
          0xbfda1920aff38c07ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Service
#if !CAPNP_LITE
constexpr ::capnp::Kind Service::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Service::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Service::ManagementAtResults
constexpr uint16_t Service::ManagementAtResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Service::ManagementAtResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Service::ManagementAtResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Service::ManagementAtResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace
}  // namespace

