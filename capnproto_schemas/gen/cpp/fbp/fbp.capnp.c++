// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: fbp.capnp

#include "fbp.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_af0a1dc4709a5ccf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    207,  92, 154, 112, 196,  29,  10, 175,
     10,   0,   0,   0,   1,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   0,   0,   0,
     25,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  73,  80,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    230, 153, 196, 224, 145,  83, 158, 158,
      1,   0,   0,   0,  26,   0,   0,   0,
     75,  86,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
     97, 116, 116, 114, 105,  98, 117, 116,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    230, 153, 196, 224, 145,  83, 158, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_af0a1dc4709a5ccf = b_af0a1dc4709a5ccf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_af0a1dc4709a5ccf[] = {
  &s_9e9e5391e0c499e6,
};
static const uint16_t m_af0a1dc4709a5ccf[] = {0, 1};
static const uint16_t i_af0a1dc4709a5ccf[] = {0, 1};
const ::capnp::_::RawSchema s_af0a1dc4709a5ccf = {
  0xaf0a1dc4709a5ccf, b_af0a1dc4709a5ccf.words, 54, d_af0a1dc4709a5ccf, m_af0a1dc4709a5ccf,
  1, 2, i_af0a1dc4709a5ccf, nullptr, nullptr, { &s_af0a1dc4709a5ccf, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<46> b_9e9e5391e0c499e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 153, 196, 224, 145,  83, 158, 158,
     13,   0,   0,   0,   1,   0,   0,   0,
    207,  92, 154, 112, 196,  29,  10, 175,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  73,  80,  46,  75,  86,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e9e5391e0c499e6 = b_9e9e5391e0c499e6.words;
#if !CAPNP_LITE
static const uint16_t m_9e9e5391e0c499e6[] = {0, 1};
static const uint16_t i_9e9e5391e0c499e6[] = {0, 1};
const ::capnp::_::RawSchema s_9e9e5391e0c499e6 = {
  0x9e9e5391e0c499e6, b_9e9e5391e0c499e6.words, 46, nullptr, m_9e9e5391e0c499e6,
  0, 2, i_9e9e5391e0c499e6, nullptr, nullptr, { &s_9e9e5391e0c499e6, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<166> b_9c62c32b2ff2b1e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
     10,   0,   0,   0,   3,   0,   0,   0,
     47, 178, 219, 104,  72,  44,  96, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,  87,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 135,   1,   0,   0,
     77,   2,   0,   0,  39,   0,   0,   0,
     93,   2,   0,   0,  15,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,   0,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   1,   0,   1,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
     33,   0,   0,   0, 122,   0,   0,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
     33,   0,   0,   0,  34,   0,   0,   0,
     40,  80,  23, 127,  35, 163, 215, 227,
     29,   0,   0,   0,  98,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
     29,   0,   0,   0,  58,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
     25,   0,   0,   0,  58,   0,   0,   0,
     67, 108, 111, 115, 101,  83, 101, 109,
     97, 110, 116, 105,  99, 115,   0,   0,
     77, 115, 103,   0,   0,   0,   0,   0,
     83, 116,  97, 114, 116, 117, 112,  73,
    110, 102, 111,   0,   0,   0,   0,   0,
     82, 101,  97, 100, 101, 114,   0,   0,
     87, 114, 105, 116, 101, 114,   0,   0,
     24,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     51,  19, 118, 122,  59,  30,  16, 146,
     35,  44, 113, 224, 213,   8, 106, 254,
    177,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    176,   0,   0,   0,   0,   0,   1,   0,
    192,   0,   0,   0,   0,   0,   1,   0,
    209,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    196,   4, 218, 100, 221, 201,   7, 230,
    166, 236, 201, 204, 201, 255,  53, 177,
    197,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   0,   0,   1,   0,
    208,   0,   0,   0,   0,   0,   1,   0,
    225,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      9, 225, 104, 227,  52,  29,  97, 190,
    126,  92, 152, 158, 103,  83, 123, 180,
    213,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   0,   0,   1,   0,
    224,   0,   0,   0,   0,   0,   1,   0,
    241,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    216, 115,  67, 145, 126, 129,  63, 210,
    187, 151, 141,  31, 210,   1, 116, 243,
    229,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   0,   0,   1,   0,
    244,   0,   0,   0,   0,   0,   1,   0,
      5,   1,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    221,  58,  88,  69, 181,  54, 152, 180,
      6,  50, 203,  63,  90, 110, 252, 192,
    249,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   0,   0,   1,   0,
     12,   1,   0,   0,   0,   0,   1,   0,
     29,   1,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    156,  61,  17, 193,   1, 173, 216, 149,
    183,  99,  19,  15, 214, 154,   7, 204,
     17,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   0,   0,   1,   0,
     28,   1,   0,   0,   0,   0,   1,   0,
     45,   1,   0,   0,   7,   0,   0,   0,
    115, 101, 116,  66, 117, 102, 102, 101,
    114,  83, 105, 122, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    114, 101,  97, 100, 101, 114,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    119, 114, 105, 116, 101, 114,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    101, 110, 100, 112, 111, 105, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 101, 116,  65, 117, 116, 111,  67,
    108, 111, 115, 101,  83, 101, 109,  97,
    110, 116, 105,  99, 115,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    213,  72, 156,  89, 203, 209, 175, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 203,  54, 220, 160, 218, 167, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  18,   0,   0,   0,
     86,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c62c32b2ff2b1e8 = b_9c62c32b2ff2b1e8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9c62c32b2ff2b1e8[] = {
  &s_92101e3b7a761333,
  &s_95d8ad01c1113d9c,
  &s_b135ffc9ccc9eca6,
  &s_b2afd1cb599c48d5,
  &s_b47b53679e985c7e,
  &s_b49836b545583add,
  &s_be611d34e368e109,
  &s_c0fc6e5a3fcb3206,
  &s_c1a7daa0dc36cb65,
  &s_cc079ad60f1363b7,
  &s_d23f817e914373d8,
  &s_e607c9dd64da04c4,
  &s_f37401d21f8d97bb,
  &s_fe6a08d5e0712c23,
};
static const uint16_t m_9c62c32b2ff2b1e8[] = {5, 3, 1, 4, 0, 2};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_9c62c32b2ff2b1e8[] = {
  { 33554432,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetBufferSizeParams::_capnpPrivate::brand() },
  { 33554433,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ReaderParams::_capnpPrivate::brand() },
  { 33554434,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::WriterParams::_capnpPrivate::brand() },
  { 33554435,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::EndpointsParams::_capnpPrivate::brand() },
  { 33554436,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetAutoCloseSemanticsParams::_capnpPrivate::brand() },
  { 33554437,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::CloseParams::_capnpPrivate::brand() },
  { 50331648,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetBufferSizeResults::_capnpPrivate::brand() },
  { 50331649,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ReaderResults::_capnpPrivate::brand() },
  { 50331650,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::WriterResults::_capnpPrivate::brand() },
  { 50331651,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::EndpointsResults::_capnpPrivate::brand() },
  { 50331652,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::SetAutoCloseSemanticsResults::_capnpPrivate::brand() },
  { 50331653,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::CloseResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_9c62c32b2ff2b1e8 = {
  0x9c62c32b2ff2b1e8, b_9c62c32b2ff2b1e8.words, 166, d_9c62c32b2ff2b1e8, m_9c62c32b2ff2b1e8,
  14, 6, nullptr, nullptr, nullptr, { &s_9c62c32b2ff2b1e8, nullptr, bd_9c62c32b2ff2b1e8, 0, sizeof(bd_9c62c32b2ff2b1e8) / sizeof(bd_9c62c32b2ff2b1e8[0]), nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_a8d787cae7e0b243 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
     18,   0,   0,   0,   2,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  67, 108, 111, 115, 101,  83,
    101, 109,  97, 110, 116, 105,  99, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,   0,   0,   0,   0,   0,
    110, 111,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8d787cae7e0b243 = b_a8d787cae7e0b243.words;
#if !CAPNP_LITE
static const uint16_t m_a8d787cae7e0b243[] = {0, 1};
const ::capnp::_::RawSchema s_a8d787cae7e0b243 = {
  0xa8d787cae7e0b243, b_a8d787cae7e0b243.words, 27, nullptr, m_a8d787cae7e0b243,
  0, 2, nullptr, nullptr, nullptr, { &s_a8d787cae7e0b243, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CloseSemantics_a8d787cae7e0b243, a8d787cae7e0b243);
static const ::capnp::_::AlignedData<47> b_d5b512f4bcd0aa2e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
     18,   0,   0,   0,   1,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  77, 115, 103,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5b512f4bcd0aa2e = b_d5b512f4bcd0aa2e.words;
#if !CAPNP_LITE
static const uint16_t m_d5b512f4bcd0aa2e[] = {1, 0};
static const uint16_t i_d5b512f4bcd0aa2e[] = {0, 1};
const ::capnp::_::RawSchema s_d5b512f4bcd0aa2e = {
  0xd5b512f4bcd0aa2e, b_d5b512f4bcd0aa2e.words, 47, nullptr, m_d5b512f4bcd0aa2e,
  0, 2, i_d5b512f4bcd0aa2e, nullptr, nullptr, { &s_d5b512f4bcd0aa2e, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<111> b_e3d7a3237f175028 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40,  80,  23, 127,  35, 163, 215, 227,
     18,   0,   0,   0,   1,   0,   2,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  83, 116,  97, 114, 116, 117,
    112,  73, 110, 102, 111,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
     98, 117, 102, 102, 101, 114,  83, 105,
    122, 101,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 111, 115, 101,  83, 101, 109,
     97, 110, 116, 105,  99, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 110, 110, 101, 108,  83,
     82,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100, 101, 114,  83,  82,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 105, 116, 101, 114,  83,  82,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e3d7a3237f175028 = b_e3d7a3237f175028.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e3d7a3237f175028[] = {
  &s_a8d787cae7e0b243,
};
static const uint16_t m_e3d7a3237f175028[] = {0, 2, 1, 3, 4};
static const uint16_t i_e3d7a3237f175028[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_e3d7a3237f175028 = {
  0xe3d7a3237f175028, b_e3d7a3237f175028.words, 111, d_e3d7a3237f175028, m_e3d7a3237f175028,
  1, 5, i_e3d7a3237f175028, nullptr, nullptr, { &s_e3d7a3237f175028, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_8bc69192f3bc97cc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
     18,   0,   0,   0,   3,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
     69,   0,   0,   0, 135,   0,   0,   0,
    229,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    206, 145, 241, 254, 121, 167, 100, 242,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  90,   0,   0,   0,
     67, 104,  97, 110,  82, 101,  97, 100,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,  43, 139, 219, 153,  93,  51, 192,
     46, 170, 208, 188, 244,  18, 181, 213,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   0,   0,   1,   0,
     60,   0,   0,   0,   0,   0,   1,   0,
     77,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    200,  65, 140, 241, 100, 234,  40, 148,
     26, 130,  83, 191, 161,   8, 254, 179,
     65,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   0,   0,   1,   0,
     76,   0,   0,   0,   0,   0,   1,   0,
     93,   0,   0,   0,   7,   0,   0,   0,
    114, 101,  97, 100,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_8bc69192f3bc97cc = b_8bc69192f3bc97cc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8bc69192f3bc97cc[] = {
  &s_9428ea64f18c41c8,
  &s_b3fe08a1bf53821a,
  &s_c0335d99db8b2ba5,
  &s_d5b512f4bcd0aa2e,
};
static const uint16_t m_8bc69192f3bc97cc[] = {1, 0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_8bc69192f3bc97cc[] = {
  { 33554432,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::ReadParams::_capnpPrivate::brand() },
  { 33554433,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::CloseParams::_capnpPrivate::brand() },
  { 50331648,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::Msg::_capnpPrivate::brand() },
  { 50331649,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::CloseResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_8bc69192f3bc97cc = {
  0x8bc69192f3bc97cc, b_8bc69192f3bc97cc.words, 69, d_8bc69192f3bc97cc, m_8bc69192f3bc97cc,
  4, 2, nullptr, nullptr, nullptr, { &s_8bc69192f3bc97cc, nullptr, bd_8bc69192f3bc97cc, 0, sizeof(bd_8bc69192f3bc97cc) / sizeof(bd_8bc69192f3bc97cc[0]), nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c0335d99db8b2ba5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    165,  43, 139, 219, 153,  93,  51, 192,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46, 114, 101,  97, 100,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0335d99db8b2ba5 = b_c0335d99db8b2ba5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0335d99db8b2ba5 = {
  0xc0335d99db8b2ba5, b_c0335d99db8b2ba5.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0335d99db8b2ba5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_9428ea64f18c41c8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    200,  65, 140, 241, 100, 234,  40, 148,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0, }
};
::capnp::word const* const bp_9428ea64f18c41c8 = b_9428ea64f18c41c8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9428ea64f18c41c8 = {
  0x9428ea64f18c41c8, b_9428ea64f18c41c8.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9428ea64f18c41c8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b3fe08a1bf53821a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     26, 130,  83, 191, 161,   8, 254, 179,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  82, 101,  97, 100, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0, }
};
::capnp::word const* const bp_b3fe08a1bf53821a = b_b3fe08a1bf53821a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b3fe08a1bf53821a = {
  0xb3fe08a1bf53821a, b_b3fe08a1bf53821a.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b3fe08a1bf53821a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_f7fec613b4a8c79f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
     18,   0,   0,   0,   3,   0,   0,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
     33,   0,   0,   0,  31,   0,   0,   0,
     69,   0,   0,   0, 135,   0,   0,   0,
    229,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   2,   0,
    206, 145, 241, 254, 121, 167, 100, 242,
      4,   0,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,   0,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  90,   0,   0,   0,
     67, 104,  97, 110,  87, 114, 105, 116,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     46, 170, 208, 188, 244,  18, 181, 213,
     36, 149,  20, 236, 184,  36, 159, 206,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   0,   0,   1,   0,
     60,   0,   0,   0,   0,   0,   1,   0,
     77,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     80,  30,  61, 218, 141, 152, 220, 186,
    201,  88, 142, 225, 145, 220,   2, 203,
     65,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   0,   0,   1,   0,
     76,   0,   0,   0,   0,   0,   1,   0,
     93,   0,   0,   0,   7,   0,   0,   0,
    119, 114, 105, 116, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 108, 111, 115, 101,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f7fec613b4a8c79f = b_f7fec613b4a8c79f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f7fec613b4a8c79f[] = {
  &s_badc988dda3d1e50,
  &s_cb02dc91e18e58c9,
  &s_ce9f24b8ec149524,
  &s_d5b512f4bcd0aa2e,
};
static const uint16_t m_f7fec613b4a8c79f[] = {1, 0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f7fec613b4a8c79f[] = {
  { 33554432,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::Msg::_capnpPrivate::brand() },
  { 33554433,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::CloseParams::_capnpPrivate::brand() },
  { 50331648,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::WriteResults::_capnpPrivate::brand() },
  { 50331649,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::CloseResults::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f7fec613b4a8c79f = {
  0xf7fec613b4a8c79f, b_f7fec613b4a8c79f.words, 69, d_f7fec613b4a8c79f, m_f7fec613b4a8c79f,
  4, 2, nullptr, nullptr, nullptr, { &s_f7fec613b4a8c79f, nullptr, bd_f7fec613b4a8c79f, 0, sizeof(bd_f7fec613b4a8c79f) / sizeof(bd_f7fec613b4a8c79f[0]), nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_ce9f24b8ec149524 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 149,  20, 236, 184,  36, 159, 206,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46, 119, 114, 105, 116, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0, }
};
::capnp::word const* const bp_ce9f24b8ec149524 = b_ce9f24b8ec149524.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ce9f24b8ec149524 = {
  0xce9f24b8ec149524, b_ce9f24b8ec149524.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ce9f24b8ec149524, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_badc988dda3d1e50 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     80,  30,  61, 218, 141, 152, 220, 186,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0, }
};
::capnp::word const* const bp_badc988dda3d1e50 = b_badc988dda3d1e50.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_badc988dda3d1e50 = {
  0xbadc988dda3d1e50, b_badc988dda3d1e50.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_badc988dda3d1e50, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_cb02dc91e18e58c9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201,  88, 142, 225, 145, 220,   2, 203,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  87, 114, 105, 116, 101, 114,
     46,  99, 108, 111, 115, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0, }
};
::capnp::word const* const bp_cb02dc91e18e58c9 = b_cb02dc91e18e58c9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cb02dc91e18e58c9 = {
  0xcb02dc91e18e58c9, b_cb02dc91e18e58c9.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cb02dc91e18e58c9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_92101e3b7a761333 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     51,  19, 118, 122,  59,  30,  16, 146,
     18,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  66, 117, 102,
    102, 101, 114,  83, 105, 122, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92101e3b7a761333 = b_92101e3b7a761333.words;
#if !CAPNP_LITE
static const uint16_t m_92101e3b7a761333[] = {0};
static const uint16_t i_92101e3b7a761333[] = {0};
const ::capnp::_::RawSchema s_92101e3b7a761333 = {
  0x92101e3b7a761333, b_92101e3b7a761333.words, 33, nullptr, m_92101e3b7a761333,
  0, 1, i_92101e3b7a761333, nullptr, nullptr, { &s_92101e3b7a761333, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_fe6a08d5e0712c23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35,  44, 113, 224, 213,   8, 106, 254,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  66, 117, 102,
    102, 101, 114,  83, 105, 122, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_fe6a08d5e0712c23 = b_fe6a08d5e0712c23.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fe6a08d5e0712c23 = {
  0xfe6a08d5e0712c23, b_fe6a08d5e0712c23.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fe6a08d5e0712c23, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_e607c9dd64da04c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196,   4, 218, 100, 221, 201,   7, 230,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 114, 101,  97, 100, 101, 114,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_e607c9dd64da04c4 = b_e607c9dd64da04c4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e607c9dd64da04c4 = {
  0xe607c9dd64da04c4, b_e607c9dd64da04c4.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e607c9dd64da04c4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_b135ffc9ccc9eca6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    166, 236, 201, 204, 201, 255,  53, 177,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 114, 101,  97, 100, 101, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b135ffc9ccc9eca6 = b_b135ffc9ccc9eca6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b135ffc9ccc9eca6[] = {
  &s_8bc69192f3bc97cc,
};
static const uint16_t m_b135ffc9ccc9eca6[] = {0};
static const uint16_t i_b135ffc9ccc9eca6[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b135ffc9ccc9eca6[] = {
  { 16777216,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b135ffc9ccc9eca6 = {
  0xb135ffc9ccc9eca6, b_b135ffc9ccc9eca6.words, 38, d_b135ffc9ccc9eca6, m_b135ffc9ccc9eca6,
  1, 1, i_b135ffc9ccc9eca6, nullptr, nullptr, { &s_b135ffc9ccc9eca6, nullptr, bd_b135ffc9ccc9eca6, 0, sizeof(bd_b135ffc9ccc9eca6) / sizeof(bd_b135ffc9ccc9eca6[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_be611d34e368e109 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      9, 225, 104, 227,  52,  29,  97, 190,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 119, 114, 105, 116, 101, 114,
     36,  80,  97, 114,  97, 109, 115,   0, }
};
::capnp::word const* const bp_be611d34e368e109 = b_be611d34e368e109.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_be611d34e368e109 = {
  0xbe611d34e368e109, b_be611d34e368e109.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_be611d34e368e109, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_b47b53679e985c7e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126,  92, 152, 158, 103,  83, 123, 180,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 119, 114, 105, 116, 101, 114,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    119,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b47b53679e985c7e = b_b47b53679e985c7e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b47b53679e985c7e[] = {
  &s_f7fec613b4a8c79f,
};
static const uint16_t m_b47b53679e985c7e[] = {0};
static const uint16_t i_b47b53679e985c7e[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b47b53679e985c7e[] = {
  { 16777216,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b47b53679e985c7e = {
  0xb47b53679e985c7e, b_b47b53679e985c7e.words, 38, d_b47b53679e985c7e, m_b47b53679e985c7e,
  1, 1, i_b47b53679e985c7e, nullptr, nullptr, { &s_b47b53679e985c7e, nullptr, bd_b47b53679e985c7e, 0, sizeof(bd_b47b53679e985c7e) / sizeof(bd_b47b53679e985c7e[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_d23f817e914373d8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216, 115,  67, 145, 126, 129,  63, 210,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 101, 110, 100, 112, 111, 105,
    110, 116, 115,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d23f817e914373d8 = b_d23f817e914373d8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d23f817e914373d8 = {
  0xd23f817e914373d8, b_d23f817e914373d8.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d23f817e914373d8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<58> b_f37401d21f8d97bb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187, 151, 141,  31, 210,   1, 116, 243,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 101, 110, 100, 112, 111, 105,
    110, 116, 115,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    204, 151, 188, 243, 146, 145, 198, 139,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    159, 199, 168, 180,  19, 198, 254, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f37401d21f8d97bb = b_f37401d21f8d97bb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f37401d21f8d97bb[] = {
  &s_8bc69192f3bc97cc,
  &s_f7fec613b4a8c79f,
};
static const uint16_t m_f37401d21f8d97bb[] = {0, 1};
static const uint16_t i_f37401d21f8d97bb[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f37401d21f8d97bb[] = {
  { 16777216,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanReader::_capnpPrivate::brand() },
  { 16777217,  ::mas::schema::fbp::Channel< ::capnp::AnyPointer>::ChanWriter::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f37401d21f8d97bb = {
  0xf37401d21f8d97bb, b_f37401d21f8d97bb.words, 58, d_f37401d21f8d97bb, m_f37401d21f8d97bb,
  2, 2, i_f37401d21f8d97bb, nullptr, nullptr, { &s_f37401d21f8d97bb, nullptr, bd_f37401d21f8d97bb, 0, sizeof(bd_f37401d21f8d97bb) / sizeof(bd_f37401d21f8d97bb[0]), nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_b49836b545583add = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    221,  58,  88,  69, 181,  54, 152, 180,
     18,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  65, 117, 116,
    111,  67, 108, 111, 115, 101,  83, 101,
    109,  97, 110, 116, 105,  99, 115,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     99, 115,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     67, 178, 224, 231, 202, 135, 215, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    232, 177, 242,  47,  43, 195,  98, 156,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b49836b545583add = b_b49836b545583add.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b49836b545583add[] = {
  &s_a8d787cae7e0b243,
};
static const uint16_t m_b49836b545583add[] = {0};
static const uint16_t i_b49836b545583add[] = {0};
const ::capnp::_::RawSchema s_b49836b545583add = {
  0xb49836b545583add, b_b49836b545583add.words, 39, d_b49836b545583add, m_b49836b545583add,
  1, 1, i_b49836b545583add, nullptr, nullptr, { &s_b49836b545583add, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_c0fc6e5a3fcb3206 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      6,  50, 203,  63,  90, 110, 252, 192,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46, 115, 101, 116,  65, 117, 116,
    111,  67, 108, 111, 115, 101,  83, 101,
    109,  97, 110, 116, 105,  99, 115,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_c0fc6e5a3fcb3206 = b_c0fc6e5a3fcb3206.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0fc6e5a3fcb3206 = {
  0xc0fc6e5a3fcb3206, b_c0fc6e5a3fcb3206.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0fc6e5a3fcb3206, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_95d8ad01c1113d9c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    156,  61,  17, 193,   1, 173, 216, 149,
     18,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  99, 108, 111, 115, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     28,   0,   0,   0,   2,   0,   1,   0,
    119,  97, 105, 116,  70, 111, 114,  69,
    109, 112, 116, 121,  66, 117, 102, 102,
    101, 114,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_95d8ad01c1113d9c = b_95d8ad01c1113d9c.words;
#if !CAPNP_LITE
static const uint16_t m_95d8ad01c1113d9c[] = {0};
static const uint16_t i_95d8ad01c1113d9c[] = {0};
const ::capnp::_::RawSchema s_95d8ad01c1113d9c = {
  0x95d8ad01c1113d9c, b_95d8ad01c1113d9c.words, 34, nullptr, m_95d8ad01c1113d9c,
  0, 1, i_95d8ad01c1113d9c, nullptr, nullptr, { &s_95d8ad01c1113d9c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_cc079ad60f1363b7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    183,  99,  19,  15, 214, 154,   7, 204,
     18,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102,  98, 112,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 110, 110, 101,
    108,  46,  99, 108, 111, 115, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_cc079ad60f1363b7 = b_cc079ad60f1363b7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cc079ad60f1363b7 = {
  0xcc079ad60f1363b7, b_cc079ad60f1363b7.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cc079ad60f1363b7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mas {
namespace schema {
namespace fbp {

// IP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t IP::_capnpPrivate::dataWordSize;
constexpr uint16_t IP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind IP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// IP::KV
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t IP::KV::_capnpPrivate::dataWordSize;
constexpr uint16_t IP::KV::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind IP::KV::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* IP::KV::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

