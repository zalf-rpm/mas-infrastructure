// Code generated by capnpc-go. DO NOT EDIT.

package grid

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/common"
	geo "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/geo"
	persistence "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/persistence"
	math "math"
	strconv "strconv"
)

type Aggregation uint16

// Aggregation_TypeID is the unique identifier for the type Aggregation.
const Aggregation_TypeID = 0xa5ecdc7767a6b301

// Values of Aggregation.
const (
	Aggregation_none    Aggregation = 0
	Aggregation_avg     Aggregation = 8
	Aggregation_wAvg    Aggregation = 1
	Aggregation_iAvg    Aggregation = 6
	Aggregation_median  Aggregation = 9
	Aggregation_wMedian Aggregation = 2
	Aggregation_iMedian Aggregation = 7
	Aggregation_min     Aggregation = 3
	Aggregation_wMin    Aggregation = 12
	Aggregation_iMin    Aggregation = 13
	Aggregation_max     Aggregation = 4
	Aggregation_wMax    Aggregation = 14
	Aggregation_iMax    Aggregation = 15
	Aggregation_sum     Aggregation = 5
	Aggregation_wSum    Aggregation = 10
	Aggregation_iSum    Aggregation = 11
)

// String returns the enum's constant name.
func (c Aggregation) String() string {
	switch c {
	case Aggregation_none:
		return "none"
	case Aggregation_avg:
		return "avg"
	case Aggregation_wAvg:
		return "wAvg"
	case Aggregation_iAvg:
		return "iAvg"
	case Aggregation_median:
		return "median"
	case Aggregation_wMedian:
		return "wMedian"
	case Aggregation_iMedian:
		return "iMedian"
	case Aggregation_min:
		return "min"
	case Aggregation_wMin:
		return "wMin"
	case Aggregation_iMin:
		return "iMin"
	case Aggregation_max:
		return "max"
	case Aggregation_wMax:
		return "wMax"
	case Aggregation_iMax:
		return "iMax"
	case Aggregation_sum:
		return "sum"
	case Aggregation_wSum:
		return "wSum"
	case Aggregation_iSum:
		return "iSum"

	default:
		return ""
	}
}

// AggregationFromString returns the enum value with a name,
// or the zero value if there's no such value.
func AggregationFromString(c string) Aggregation {
	switch c {
	case "none":
		return Aggregation_none
	case "avg":
		return Aggregation_avg
	case "wAvg":
		return Aggregation_wAvg
	case "iAvg":
		return Aggregation_iAvg
	case "median":
		return Aggregation_median
	case "wMedian":
		return Aggregation_wMedian
	case "iMedian":
		return Aggregation_iMedian
	case "min":
		return Aggregation_min
	case "wMin":
		return Aggregation_wMin
	case "iMin":
		return Aggregation_iMin
	case "max":
		return Aggregation_max
	case "wMax":
		return Aggregation_wMax
	case "iMax":
		return Aggregation_iMax
	case "sum":
		return Aggregation_sum
	case "wSum":
		return Aggregation_wSum
	case "iSum":
		return Aggregation_iSum

	default:
		return 0
	}
}

type Aggregation_List struct{ capnp.List }

func NewAggregation_List(s *capnp.Segment, sz int32) (Aggregation_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Aggregation_List{l.List}, err
}

func (l Aggregation_List) At(i int) Aggregation {
	ul := capnp.UInt16List{List: l.List}
	return Aggregation(ul.At(i))
}

func (l Aggregation_List) Set(i int, v Aggregation) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Grid struct{ Client *capnp.Client }

// Grid_TypeID is the unique identifier for the type Grid.
const Grid_TypeID = 0xe42973b29661e3c6

func (c Grid) ClosestValueAt(ctx context.Context, params func(Grid_closestValueAt_Params) error) (Grid_closestValueAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "closestValueAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_closestValueAt_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_closestValueAt_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Resolution(ctx context.Context, params func(Grid_resolution_Params) error) (Grid_resolution_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      1,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "resolution",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_resolution_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_resolution_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Dimension(ctx context.Context, params func(Grid_dimension_Params) error) (Grid_dimension_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      2,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "dimension",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_dimension_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_dimension_Results_Future{Future: ans.Future()}, release
}
func (c Grid) NoDataValue(ctx context.Context, params func(Grid_noDataValue_Params) error) (Grid_noDataValue_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      3,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "noDataValue",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_noDataValue_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_noDataValue_Results_Future{Future: ans.Future()}, release
}
func (c Grid) ValueAt(ctx context.Context, params func(Grid_valueAt_Params) error) (Grid_valueAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      4,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "valueAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 32, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_valueAt_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_valueAt_Results_Future{Future: ans.Future()}, release
}
func (c Grid) LatLonBounds(ctx context.Context, params func(Grid_latLonBounds_Params) error) (Grid_latLonBounds_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      5,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "latLonBounds",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_latLonBounds_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_latLonBounds_Results_Future{Future: ans.Future()}, release
}
func (c Grid) StreamCells(ctx context.Context, params func(Grid_streamCells_Params) error) (Grid_streamCells_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      6,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "streamCells",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_streamCells_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_streamCells_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}
func (c Grid) Save(ctx context.Context, params func(persistence.Persistent_save_Params) error) (persistence.Persistent_save_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1a7daa0dc36cb65,
			MethodID:      0,
			InterfaceName: "persistence.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistence.Persistent_save_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return persistence.Persistent_save_Results_Future{Future: ans.Future()}, release
}

func (c Grid) AddRef() Grid {
	return Grid{
		Client: c.Client.AddRef(),
	}
}

func (c Grid) Release() {
	c.Client.Release()
}

// A Grid_Server is a Grid with a local implementation.
type Grid_Server interface {
	ClosestValueAt(context.Context, Grid_closestValueAt) error

	Resolution(context.Context, Grid_resolution) error

	Dimension(context.Context, Grid_dimension) error

	NoDataValue(context.Context, Grid_noDataValue) error

	ValueAt(context.Context, Grid_valueAt) error

	LatLonBounds(context.Context, Grid_latLonBounds) error

	StreamCells(context.Context, Grid_streamCells) error

	Info(context.Context, common.Identifiable_info) error

	Save(context.Context, persistence.Persistent_save) error
}

// Grid_NewServer creates a new Server from an implementation of Grid_Server.
func Grid_NewServer(s Grid_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Grid_Methods(nil, s), s, c, policy)
}

// Grid_ServerToClient creates a new Client from an implementation of Grid_Server.
// The caller is responsible for calling Release on the returned Client.
func Grid_ServerToClient(s Grid_Server, policy *server.Policy) Grid {
	return Grid{Client: capnp.NewClient(Grid_NewServer(s, policy))}
}

// Grid_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Grid_Methods(methods []server.Method, s Grid_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "closestValueAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClosestValueAt(ctx, Grid_closestValueAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      1,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "resolution",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Resolution(ctx, Grid_resolution{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      2,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "dimension",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Dimension(ctx, Grid_dimension{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      3,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "noDataValue",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NoDataValue(ctx, Grid_noDataValue{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      4,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "valueAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ValueAt(ctx, Grid_valueAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      5,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "latLonBounds",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.LatLonBounds(ctx, Grid_latLonBounds{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      6,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "streamCells",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StreamCells(ctx, Grid_streamCells{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1a7daa0dc36cb65,
			MethodID:      0,
			InterfaceName: "persistence.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistence.Persistent_save{call})
		},
	})

	return methods
}

// Grid_closestValueAt holds the state for a server call to Grid.closestValueAt.
// See server.Call for documentation.
type Grid_closestValueAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_closestValueAt) Args() Grid_closestValueAt_Params {
	return Grid_closestValueAt_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_closestValueAt) AllocResults() (Grid_closestValueAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{Struct: r}, err
}

// Grid_resolution holds the state for a server call to Grid.resolution.
// See server.Call for documentation.
type Grid_resolution struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_resolution) Args() Grid_resolution_Params {
	return Grid_resolution_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_resolution) AllocResults() (Grid_resolution_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{Struct: r}, err
}

// Grid_dimension holds the state for a server call to Grid.dimension.
// See server.Call for documentation.
type Grid_dimension struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_dimension) Args() Grid_dimension_Params {
	return Grid_dimension_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_dimension) AllocResults() (Grid_dimension_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{Struct: r}, err
}

// Grid_noDataValue holds the state for a server call to Grid.noDataValue.
// See server.Call for documentation.
type Grid_noDataValue struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_noDataValue) Args() Grid_noDataValue_Params {
	return Grid_noDataValue_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_noDataValue) AllocResults() (Grid_noDataValue_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{Struct: r}, err
}

// Grid_valueAt holds the state for a server call to Grid.valueAt.
// See server.Call for documentation.
type Grid_valueAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_valueAt) Args() Grid_valueAt_Params {
	return Grid_valueAt_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_valueAt) AllocResults() (Grid_valueAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{Struct: r}, err
}

// Grid_latLonBounds holds the state for a server call to Grid.latLonBounds.
// See server.Call for documentation.
type Grid_latLonBounds struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_latLonBounds) Args() Grid_latLonBounds_Params {
	return Grid_latLonBounds_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_latLonBounds) AllocResults() (Grid_latLonBounds_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{Struct: r}, err
}

// Grid_streamCells holds the state for a server call to Grid.streamCells.
// See server.Call for documentation.
type Grid_streamCells struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_streamCells) Args() Grid_streamCells_Params {
	return Grid_streamCells_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_streamCells) AllocResults() (Grid_streamCells_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{Struct: r}, err
}

type Grid_Value struct{ capnp.Struct }
type Grid_Value_Which uint16

const (
	Grid_Value_Which_f  Grid_Value_Which = 0
	Grid_Value_Which_i  Grid_Value_Which = 1
	Grid_Value_Which_ui Grid_Value_Which = 2
	Grid_Value_Which_no Grid_Value_Which = 3
)

func (w Grid_Value_Which) String() string {
	const s = "fiuino"
	switch w {
	case Grid_Value_Which_f:
		return s[0:1]
	case Grid_Value_Which_i:
		return s[1:2]
	case Grid_Value_Which_ui:
		return s[2:4]
	case Grid_Value_Which_no:
		return s[4:6]

	}
	return "Grid_Value_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Grid_Value_TypeID is the unique identifier for the type Grid_Value.
const Grid_Value_TypeID = 0xfe2e0dfae573d9d0

func NewGrid_Value(s *capnp.Segment) (Grid_Value, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_Value{st}, err
}

func NewRootGrid_Value(s *capnp.Segment) (Grid_Value, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_Value{st}, err
}

func ReadRootGrid_Value(msg *capnp.Message) (Grid_Value, error) {
	root, err := msg.Root()
	return Grid_Value{root.Struct()}, err
}

func (s Grid_Value) String() string {
	str, _ := text.Marshal(0xfe2e0dfae573d9d0, s.Struct)
	return str
}

func (s Grid_Value) Which() Grid_Value_Which {
	return Grid_Value_Which(s.Struct.Uint16(8))
}
func (s Grid_Value) F() float64 {
	if s.Struct.Uint16(8) != 0 {
		panic("Which() != f")
	}
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Grid_Value) SetF(v float64) {
	s.Struct.SetUint16(8, 0)
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Grid_Value) I() int64 {
	if s.Struct.Uint16(8) != 1 {
		panic("Which() != i")
	}
	return int64(s.Struct.Uint64(0))
}

func (s Grid_Value) SetI(v int64) {
	s.Struct.SetUint16(8, 1)
	s.Struct.SetUint64(0, uint64(v))
}

func (s Grid_Value) Ui() uint64 {
	if s.Struct.Uint16(8) != 2 {
		panic("Which() != ui")
	}
	return s.Struct.Uint64(0)
}

func (s Grid_Value) SetUi(v uint64) {
	s.Struct.SetUint16(8, 2)
	s.Struct.SetUint64(0, v)
}

func (s Grid_Value) No() bool {
	if s.Struct.Uint16(8) != 3 {
		panic("Which() != no")
	}
	return s.Struct.Bit(0)
}

func (s Grid_Value) SetNo(v bool) {
	s.Struct.SetUint16(8, 3)
	s.Struct.SetBit(0, v)
}

// Grid_Value_List is a list of Grid_Value.
type Grid_Value_List struct{ capnp.List }

// NewGrid_Value creates a new list of Grid_Value.
func NewGrid_Value_List(s *capnp.Segment, sz int32) (Grid_Value_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_Value_List{l}, err
}

func (s Grid_Value_List) At(i int) Grid_Value { return Grid_Value{s.List.Struct(i)} }

func (s Grid_Value_List) Set(i int, v Grid_Value) error { return s.List.SetStruct(i, v.Struct) }

func (s Grid_Value_List) String() string {
	str, _ := text.MarshalList(0xfe2e0dfae573d9d0, s.List)
	return str
}

// Grid_Value_Future is a wrapper for a Grid_Value promised by a client call.
type Grid_Value_Future struct{ *capnp.Future }

func (p Grid_Value_Future) Struct() (Grid_Value, error) {
	s, err := p.Future.Struct()
	return Grid_Value{s}, err
}

type Grid_RowCol struct{ capnp.Struct }

// Grid_RowCol_TypeID is the unique identifier for the type Grid_RowCol.
const Grid_RowCol_TypeID = 0xb9e2d85d086206ff

func NewGrid_RowCol(s *capnp.Segment) (Grid_RowCol, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_RowCol{st}, err
}

func NewRootGrid_RowCol(s *capnp.Segment) (Grid_RowCol, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_RowCol{st}, err
}

func ReadRootGrid_RowCol(msg *capnp.Message) (Grid_RowCol, error) {
	root, err := msg.Root()
	return Grid_RowCol{root.Struct()}, err
}

func (s Grid_RowCol) String() string {
	str, _ := text.Marshal(0xb9e2d85d086206ff, s.Struct)
	return str
}

func (s Grid_RowCol) Row() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_RowCol) SetRow(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_RowCol) Col() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_RowCol) SetCol(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Grid_RowCol_List is a list of Grid_RowCol.
type Grid_RowCol_List struct{ capnp.List }

// NewGrid_RowCol creates a new list of Grid_RowCol.
func NewGrid_RowCol_List(s *capnp.Segment, sz int32) (Grid_RowCol_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_RowCol_List{l}, err
}

func (s Grid_RowCol_List) At(i int) Grid_RowCol { return Grid_RowCol{s.List.Struct(i)} }

func (s Grid_RowCol_List) Set(i int, v Grid_RowCol) error { return s.List.SetStruct(i, v.Struct) }

func (s Grid_RowCol_List) String() string {
	str, _ := text.MarshalList(0xb9e2d85d086206ff, s.List)
	return str
}

// Grid_RowCol_Future is a wrapper for a Grid_RowCol promised by a client call.
type Grid_RowCol_Future struct{ *capnp.Future }

func (p Grid_RowCol_Future) Struct() (Grid_RowCol, error) {
	s, err := p.Future.Struct()
	return Grid_RowCol{s}, err
}

type Grid_AggregationPart struct{ capnp.Struct }

// Grid_AggregationPart_TypeID is the unique identifier for the type Grid_AggregationPart.
const Grid_AggregationPart_TypeID = 0xac444617ef333a1d

func NewGrid_AggregationPart(s *capnp.Segment) (Grid_AggregationPart, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Grid_AggregationPart{st}, err
}

func NewRootGrid_AggregationPart(s *capnp.Segment) (Grid_AggregationPart, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Grid_AggregationPart{st}, err
}

func ReadRootGrid_AggregationPart(msg *capnp.Message) (Grid_AggregationPart, error) {
	root, err := msg.Root()
	return Grid_AggregationPart{root.Struct()}, err
}

func (s Grid_AggregationPart) String() string {
	str, _ := text.Marshal(0xac444617ef333a1d, s.Struct)
	return str
}

func (s Grid_AggregationPart) Value() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_AggregationPart) HasValue() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_AggregationPart) SetValue(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewValue sets the value field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_AggregationPart) NewValue() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_AggregationPart) RowCol() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_AggregationPart) HasRowCol() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_AggregationPart) SetRowCol(v Grid_RowCol) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewRowCol sets the rowCol field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_AggregationPart) NewRowCol() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_AggregationPart) AreaFrac() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Grid_AggregationPart) SetAreaFrac(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Grid_AggregationPart) IValue() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Grid_AggregationPart) SetIValue(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// Grid_AggregationPart_List is a list of Grid_AggregationPart.
type Grid_AggregationPart_List struct{ capnp.List }

// NewGrid_AggregationPart creates a new list of Grid_AggregationPart.
func NewGrid_AggregationPart_List(s *capnp.Segment, sz int32) (Grid_AggregationPart_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Grid_AggregationPart_List{l}, err
}

func (s Grid_AggregationPart_List) At(i int) Grid_AggregationPart {
	return Grid_AggregationPart{s.List.Struct(i)}
}

func (s Grid_AggregationPart_List) Set(i int, v Grid_AggregationPart) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_AggregationPart_List) String() string {
	str, _ := text.MarshalList(0xac444617ef333a1d, s.List)
	return str
}

// Grid_AggregationPart_Future is a wrapper for a Grid_AggregationPart promised by a client call.
type Grid_AggregationPart_Future struct{ *capnp.Future }

func (p Grid_AggregationPart_Future) Struct() (Grid_AggregationPart, error) {
	s, err := p.Future.Struct()
	return Grid_AggregationPart{s}, err
}

func (p Grid_AggregationPart_Future) Value() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_AggregationPart_Future) RowCol() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(1, nil)}
}

type Grid_Callback struct{ Client *capnp.Client }

// Grid_Callback_TypeID is the unique identifier for the type Grid_Callback.
const Grid_Callback_TypeID = 0xd639518280cb55d3

func (c Grid_Callback) SendCells(ctx context.Context, params func(Grid_Callback_sendCells_Params) error) (Grid_Callback_sendCells_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd639518280cb55d3,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid.Callback",
			MethodName:    "sendCells",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_Callback_sendCells_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_Callback_sendCells_Results_Future{Future: ans.Future()}, release
}

func (c Grid_Callback) AddRef() Grid_Callback {
	return Grid_Callback{
		Client: c.Client.AddRef(),
	}
}

func (c Grid_Callback) Release() {
	c.Client.Release()
}

// A Grid_Callback_Server is a Grid_Callback with a local implementation.
type Grid_Callback_Server interface {
	SendCells(context.Context, Grid_Callback_sendCells) error
}

// Grid_Callback_NewServer creates a new Server from an implementation of Grid_Callback_Server.
func Grid_Callback_NewServer(s Grid_Callback_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Grid_Callback_Methods(nil, s), s, c, policy)
}

// Grid_Callback_ServerToClient creates a new Client from an implementation of Grid_Callback_Server.
// The caller is responsible for calling Release on the returned Client.
func Grid_Callback_ServerToClient(s Grid_Callback_Server, policy *server.Policy) Grid_Callback {
	return Grid_Callback{Client: capnp.NewClient(Grid_Callback_NewServer(s, policy))}
}

// Grid_Callback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Grid_Callback_Methods(methods []server.Method, s Grid_Callback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd639518280cb55d3,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid.Callback",
			MethodName:    "sendCells",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SendCells(ctx, Grid_Callback_sendCells{call})
		},
	})

	return methods
}

// Grid_Callback_sendCells holds the state for a server call to Grid_Callback.sendCells.
// See server.Call for documentation.
type Grid_Callback_sendCells struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_Callback_sendCells) Args() Grid_Callback_sendCells_Params {
	return Grid_Callback_sendCells_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_Callback_sendCells) AllocResults() (Grid_Callback_sendCells_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{Struct: r}, err
}

type Grid_Callback_sendCells_Params struct{ capnp.Struct }

// Grid_Callback_sendCells_Params_TypeID is the unique identifier for the type Grid_Callback_sendCells_Params.
const Grid_Callback_sendCells_Params_TypeID = 0xe9b0c7718f68f6bb

func NewGrid_Callback_sendCells_Params(s *capnp.Segment) (Grid_Callback_sendCells_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_Callback_sendCells_Params{st}, err
}

func NewRootGrid_Callback_sendCells_Params(s *capnp.Segment) (Grid_Callback_sendCells_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_Callback_sendCells_Params{st}, err
}

func ReadRootGrid_Callback_sendCells_Params(msg *capnp.Message) (Grid_Callback_sendCells_Params, error) {
	root, err := msg.Root()
	return Grid_Callback_sendCells_Params{root.Struct()}, err
}

func (s Grid_Callback_sendCells_Params) String() string {
	str, _ := text.Marshal(0xe9b0c7718f68f6bb, s.Struct)
	return str
}

func (s Grid_Callback_sendCells_Params) Cells() (Grid_RowCol_List, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_RowCol_List{List: p.List()}, err
}

func (s Grid_Callback_sendCells_Params) HasCells() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_Callback_sendCells_Params) SetCells(v Grid_RowCol_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCells sets the cells field to a newly
// allocated Grid_RowCol_List, preferring placement in s's segment.
func (s Grid_Callback_sendCells_Params) NewCells(n int32) (Grid_RowCol_List, error) {
	l, err := NewGrid_RowCol_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_RowCol_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Grid_Callback_sendCells_Params_List is a list of Grid_Callback_sendCells_Params.
type Grid_Callback_sendCells_Params_List struct{ capnp.List }

// NewGrid_Callback_sendCells_Params creates a new list of Grid_Callback_sendCells_Params.
func NewGrid_Callback_sendCells_Params_List(s *capnp.Segment, sz int32) (Grid_Callback_sendCells_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Grid_Callback_sendCells_Params_List{l}, err
}

func (s Grid_Callback_sendCells_Params_List) At(i int) Grid_Callback_sendCells_Params {
	return Grid_Callback_sendCells_Params{s.List.Struct(i)}
}

func (s Grid_Callback_sendCells_Params_List) Set(i int, v Grid_Callback_sendCells_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_Callback_sendCells_Params_List) String() string {
	str, _ := text.MarshalList(0xe9b0c7718f68f6bb, s.List)
	return str
}

// Grid_Callback_sendCells_Params_Future is a wrapper for a Grid_Callback_sendCells_Params promised by a client call.
type Grid_Callback_sendCells_Params_Future struct{ *capnp.Future }

func (p Grid_Callback_sendCells_Params_Future) Struct() (Grid_Callback_sendCells_Params, error) {
	s, err := p.Future.Struct()
	return Grid_Callback_sendCells_Params{s}, err
}

type Grid_Callback_sendCells_Results struct{ capnp.Struct }

// Grid_Callback_sendCells_Results_TypeID is the unique identifier for the type Grid_Callback_sendCells_Results.
const Grid_Callback_sendCells_Results_TypeID = 0x8e536f6e598b2579

func NewGrid_Callback_sendCells_Results(s *capnp.Segment) (Grid_Callback_sendCells_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{st}, err
}

func NewRootGrid_Callback_sendCells_Results(s *capnp.Segment) (Grid_Callback_sendCells_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{st}, err
}

func ReadRootGrid_Callback_sendCells_Results(msg *capnp.Message) (Grid_Callback_sendCells_Results, error) {
	root, err := msg.Root()
	return Grid_Callback_sendCells_Results{root.Struct()}, err
}

func (s Grid_Callback_sendCells_Results) String() string {
	str, _ := text.Marshal(0x8e536f6e598b2579, s.Struct)
	return str
}

// Grid_Callback_sendCells_Results_List is a list of Grid_Callback_sendCells_Results.
type Grid_Callback_sendCells_Results_List struct{ capnp.List }

// NewGrid_Callback_sendCells_Results creates a new list of Grid_Callback_sendCells_Results.
func NewGrid_Callback_sendCells_Results_List(s *capnp.Segment, sz int32) (Grid_Callback_sendCells_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_Callback_sendCells_Results_List{l}, err
}

func (s Grid_Callback_sendCells_Results_List) At(i int) Grid_Callback_sendCells_Results {
	return Grid_Callback_sendCells_Results{s.List.Struct(i)}
}

func (s Grid_Callback_sendCells_Results_List) Set(i int, v Grid_Callback_sendCells_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_Callback_sendCells_Results_List) String() string {
	str, _ := text.MarshalList(0x8e536f6e598b2579, s.List)
	return str
}

// Grid_Callback_sendCells_Results_Future is a wrapper for a Grid_Callback_sendCells_Results promised by a client call.
type Grid_Callback_sendCells_Results_Future struct{ *capnp.Future }

func (p Grid_Callback_sendCells_Results_Future) Struct() (Grid_Callback_sendCells_Results, error) {
	s, err := p.Future.Struct()
	return Grid_Callback_sendCells_Results{s}, err
}

type Grid_closestValueAt_Params struct{ capnp.Struct }

// Grid_closestValueAt_Params_TypeID is the unique identifier for the type Grid_closestValueAt_Params.
const Grid_closestValueAt_Params_TypeID = 0xeb7e6f1c610c079a

func NewGrid_closestValueAt_Params(s *capnp.Segment) (Grid_closestValueAt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Grid_closestValueAt_Params{st}, err
}

func NewRootGrid_closestValueAt_Params(s *capnp.Segment) (Grid_closestValueAt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Grid_closestValueAt_Params{st}, err
}

func ReadRootGrid_closestValueAt_Params(msg *capnp.Message) (Grid_closestValueAt_Params, error) {
	root, err := msg.Root()
	return Grid_closestValueAt_Params{root.Struct()}, err
}

func (s Grid_closestValueAt_Params) String() string {
	str, _ := text.Marshal(0xeb7e6f1c610c079a, s.Struct)
	return str
}

func (s Grid_closestValueAt_Params) LatlonCoord() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(0)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Params) HasLatlonCoord() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_closestValueAt_Params) SetLatlonCoord(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewLatlonCoord sets the latlonCoord field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Params) NewLatlonCoord() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Params) IgnoreNoData() bool {
	return !s.Struct.Bit(0)
}

func (s Grid_closestValueAt_Params) SetIgnoreNoData(v bool) {
	s.Struct.SetBit(0, !v)
}

func (s Grid_closestValueAt_Params) Resolution() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_closestValueAt_Params) SetResolution(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Grid_closestValueAt_Params) Agg() Aggregation {
	return Aggregation(s.Struct.Uint16(2))
}

func (s Grid_closestValueAt_Params) SetAgg(v Aggregation) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Grid_closestValueAt_Params) ReturnRowCols() bool {
	return s.Struct.Bit(1)
}

func (s Grid_closestValueAt_Params) SetReturnRowCols(v bool) {
	s.Struct.SetBit(1, v)
}

func (s Grid_closestValueAt_Params) IncludeAggParts() bool {
	return s.Struct.Bit(2)
}

func (s Grid_closestValueAt_Params) SetIncludeAggParts(v bool) {
	s.Struct.SetBit(2, v)
}

// Grid_closestValueAt_Params_List is a list of Grid_closestValueAt_Params.
type Grid_closestValueAt_Params_List struct{ capnp.List }

// NewGrid_closestValueAt_Params creates a new list of Grid_closestValueAt_Params.
func NewGrid_closestValueAt_Params_List(s *capnp.Segment, sz int32) (Grid_closestValueAt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Grid_closestValueAt_Params_List{l}, err
}

func (s Grid_closestValueAt_Params_List) At(i int) Grid_closestValueAt_Params {
	return Grid_closestValueAt_Params{s.List.Struct(i)}
}

func (s Grid_closestValueAt_Params_List) Set(i int, v Grid_closestValueAt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_closestValueAt_Params_List) String() string {
	str, _ := text.MarshalList(0xeb7e6f1c610c079a, s.List)
	return str
}

// Grid_closestValueAt_Params_Future is a wrapper for a Grid_closestValueAt_Params promised by a client call.
type Grid_closestValueAt_Params_Future struct{ *capnp.Future }

func (p Grid_closestValueAt_Params_Future) Struct() (Grid_closestValueAt_Params, error) {
	s, err := p.Future.Struct()
	return Grid_closestValueAt_Params{s}, err
}

func (p Grid_closestValueAt_Params_Future) LatlonCoord() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(0, nil)}
}

type Grid_closestValueAt_Results struct{ capnp.Struct }

// Grid_closestValueAt_Results_TypeID is the unique identifier for the type Grid_closestValueAt_Results.
const Grid_closestValueAt_Results_TypeID = 0xa8bd0263833540b0

func NewGrid_closestValueAt_Results(s *capnp.Segment) (Grid_closestValueAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{st}, err
}

func NewRootGrid_closestValueAt_Results(s *capnp.Segment) (Grid_closestValueAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{st}, err
}

func ReadRootGrid_closestValueAt_Results(msg *capnp.Message) (Grid_closestValueAt_Results, error) {
	root, err := msg.Root()
	return Grid_closestValueAt_Results{root.Struct()}, err
}

func (s Grid_closestValueAt_Results) String() string {
	str, _ := text.Marshal(0xa8bd0263833540b0, s.Struct)
	return str
}

func (s Grid_closestValueAt_Results) Val() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasVal() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_closestValueAt_Results) SetVal(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVal sets the val field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewVal() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) Tl() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasTl() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_closestValueAt_Results) SetTl(v Grid_RowCol) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewTl sets the tl field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewTl() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) Br() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(2)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasBr() bool {
	return s.Struct.HasPtr(2)
}

func (s Grid_closestValueAt_Results) SetBr(v Grid_RowCol) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewBr sets the br field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewBr() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) AggParts() (Grid_AggregationPart_List, error) {
	p, err := s.Struct.Ptr(3)
	return Grid_AggregationPart_List{List: p.List()}, err
}

func (s Grid_closestValueAt_Results) HasAggParts() bool {
	return s.Struct.HasPtr(3)
}

func (s Grid_closestValueAt_Results) SetAggParts(v Grid_AggregationPart_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewAggParts sets the aggParts field to a newly
// allocated Grid_AggregationPart_List, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewAggParts(n int32) (Grid_AggregationPart_List, error) {
	l, err := NewGrid_AggregationPart_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_AggregationPart_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// Grid_closestValueAt_Results_List is a list of Grid_closestValueAt_Results.
type Grid_closestValueAt_Results_List struct{ capnp.List }

// NewGrid_closestValueAt_Results creates a new list of Grid_closestValueAt_Results.
func NewGrid_closestValueAt_Results_List(s *capnp.Segment, sz int32) (Grid_closestValueAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Grid_closestValueAt_Results_List{l}, err
}

func (s Grid_closestValueAt_Results_List) At(i int) Grid_closestValueAt_Results {
	return Grid_closestValueAt_Results{s.List.Struct(i)}
}

func (s Grid_closestValueAt_Results_List) Set(i int, v Grid_closestValueAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_closestValueAt_Results_List) String() string {
	str, _ := text.MarshalList(0xa8bd0263833540b0, s.List)
	return str
}

// Grid_closestValueAt_Results_Future is a wrapper for a Grid_closestValueAt_Results promised by a client call.
type Grid_closestValueAt_Results_Future struct{ *capnp.Future }

func (p Grid_closestValueAt_Results_Future) Struct() (Grid_closestValueAt_Results, error) {
	s, err := p.Future.Struct()
	return Grid_closestValueAt_Results{s}, err
}

func (p Grid_closestValueAt_Results_Future) Val() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_closestValueAt_Results_Future) Tl() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(1, nil)}
}

func (p Grid_closestValueAt_Results_Future) Br() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(2, nil)}
}

type Grid_resolution_Params struct{ capnp.Struct }

// Grid_resolution_Params_TypeID is the unique identifier for the type Grid_resolution_Params.
const Grid_resolution_Params_TypeID = 0xf79edcb97e1e2deb

func NewGrid_resolution_Params(s *capnp.Segment) (Grid_resolution_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_resolution_Params{st}, err
}

func NewRootGrid_resolution_Params(s *capnp.Segment) (Grid_resolution_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_resolution_Params{st}, err
}

func ReadRootGrid_resolution_Params(msg *capnp.Message) (Grid_resolution_Params, error) {
	root, err := msg.Root()
	return Grid_resolution_Params{root.Struct()}, err
}

func (s Grid_resolution_Params) String() string {
	str, _ := text.Marshal(0xf79edcb97e1e2deb, s.Struct)
	return str
}

// Grid_resolution_Params_List is a list of Grid_resolution_Params.
type Grid_resolution_Params_List struct{ capnp.List }

// NewGrid_resolution_Params creates a new list of Grid_resolution_Params.
func NewGrid_resolution_Params_List(s *capnp.Segment, sz int32) (Grid_resolution_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_resolution_Params_List{l}, err
}

func (s Grid_resolution_Params_List) At(i int) Grid_resolution_Params {
	return Grid_resolution_Params{s.List.Struct(i)}
}

func (s Grid_resolution_Params_List) Set(i int, v Grid_resolution_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_resolution_Params_List) String() string {
	str, _ := text.MarshalList(0xf79edcb97e1e2deb, s.List)
	return str
}

// Grid_resolution_Params_Future is a wrapper for a Grid_resolution_Params promised by a client call.
type Grid_resolution_Params_Future struct{ *capnp.Future }

func (p Grid_resolution_Params_Future) Struct() (Grid_resolution_Params, error) {
	s, err := p.Future.Struct()
	return Grid_resolution_Params{s}, err
}

type Grid_resolution_Results struct{ capnp.Struct }

// Grid_resolution_Results_TypeID is the unique identifier for the type Grid_resolution_Results.
const Grid_resolution_Results_TypeID = 0x8cd7ba490778c79a

func NewGrid_resolution_Results(s *capnp.Segment) (Grid_resolution_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{st}, err
}

func NewRootGrid_resolution_Results(s *capnp.Segment) (Grid_resolution_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{st}, err
}

func ReadRootGrid_resolution_Results(msg *capnp.Message) (Grid_resolution_Results, error) {
	root, err := msg.Root()
	return Grid_resolution_Results{root.Struct()}, err
}

func (s Grid_resolution_Results) String() string {
	str, _ := text.Marshal(0x8cd7ba490778c79a, s.Struct)
	return str
}

func (s Grid_resolution_Results) Res() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_resolution_Results) SetRes(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Grid_resolution_Results_List is a list of Grid_resolution_Results.
type Grid_resolution_Results_List struct{ capnp.List }

// NewGrid_resolution_Results creates a new list of Grid_resolution_Results.
func NewGrid_resolution_Results_List(s *capnp.Segment, sz int32) (Grid_resolution_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Grid_resolution_Results_List{l}, err
}

func (s Grid_resolution_Results_List) At(i int) Grid_resolution_Results {
	return Grid_resolution_Results{s.List.Struct(i)}
}

func (s Grid_resolution_Results_List) Set(i int, v Grid_resolution_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_resolution_Results_List) String() string {
	str, _ := text.MarshalList(0x8cd7ba490778c79a, s.List)
	return str
}

// Grid_resolution_Results_Future is a wrapper for a Grid_resolution_Results promised by a client call.
type Grid_resolution_Results_Future struct{ *capnp.Future }

func (p Grid_resolution_Results_Future) Struct() (Grid_resolution_Results, error) {
	s, err := p.Future.Struct()
	return Grid_resolution_Results{s}, err
}

type Grid_dimension_Params struct{ capnp.Struct }

// Grid_dimension_Params_TypeID is the unique identifier for the type Grid_dimension_Params.
const Grid_dimension_Params_TypeID = 0xa6005af20cc08dbe

func NewGrid_dimension_Params(s *capnp.Segment) (Grid_dimension_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_dimension_Params{st}, err
}

func NewRootGrid_dimension_Params(s *capnp.Segment) (Grid_dimension_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_dimension_Params{st}, err
}

func ReadRootGrid_dimension_Params(msg *capnp.Message) (Grid_dimension_Params, error) {
	root, err := msg.Root()
	return Grid_dimension_Params{root.Struct()}, err
}

func (s Grid_dimension_Params) String() string {
	str, _ := text.Marshal(0xa6005af20cc08dbe, s.Struct)
	return str
}

// Grid_dimension_Params_List is a list of Grid_dimension_Params.
type Grid_dimension_Params_List struct{ capnp.List }

// NewGrid_dimension_Params creates a new list of Grid_dimension_Params.
func NewGrid_dimension_Params_List(s *capnp.Segment, sz int32) (Grid_dimension_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_dimension_Params_List{l}, err
}

func (s Grid_dimension_Params_List) At(i int) Grid_dimension_Params {
	return Grid_dimension_Params{s.List.Struct(i)}
}

func (s Grid_dimension_Params_List) Set(i int, v Grid_dimension_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_dimension_Params_List) String() string {
	str, _ := text.MarshalList(0xa6005af20cc08dbe, s.List)
	return str
}

// Grid_dimension_Params_Future is a wrapper for a Grid_dimension_Params promised by a client call.
type Grid_dimension_Params_Future struct{ *capnp.Future }

func (p Grid_dimension_Params_Future) Struct() (Grid_dimension_Params, error) {
	s, err := p.Future.Struct()
	return Grid_dimension_Params{s}, err
}

type Grid_dimension_Results struct{ capnp.Struct }

// Grid_dimension_Results_TypeID is the unique identifier for the type Grid_dimension_Results.
const Grid_dimension_Results_TypeID = 0xe7a46f6b1610256f

func NewGrid_dimension_Results(s *capnp.Segment) (Grid_dimension_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{st}, err
}

func NewRootGrid_dimension_Results(s *capnp.Segment) (Grid_dimension_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{st}, err
}

func ReadRootGrid_dimension_Results(msg *capnp.Message) (Grid_dimension_Results, error) {
	root, err := msg.Root()
	return Grid_dimension_Results{root.Struct()}, err
}

func (s Grid_dimension_Results) String() string {
	str, _ := text.Marshal(0xe7a46f6b1610256f, s.Struct)
	return str
}

func (s Grid_dimension_Results) Rows() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_dimension_Results) SetRows(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_dimension_Results) Cols() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_dimension_Results) SetCols(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Grid_dimension_Results_List is a list of Grid_dimension_Results.
type Grid_dimension_Results_List struct{ capnp.List }

// NewGrid_dimension_Results creates a new list of Grid_dimension_Results.
func NewGrid_dimension_Results_List(s *capnp.Segment, sz int32) (Grid_dimension_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_dimension_Results_List{l}, err
}

func (s Grid_dimension_Results_List) At(i int) Grid_dimension_Results {
	return Grid_dimension_Results{s.List.Struct(i)}
}

func (s Grid_dimension_Results_List) Set(i int, v Grid_dimension_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_dimension_Results_List) String() string {
	str, _ := text.MarshalList(0xe7a46f6b1610256f, s.List)
	return str
}

// Grid_dimension_Results_Future is a wrapper for a Grid_dimension_Results promised by a client call.
type Grid_dimension_Results_Future struct{ *capnp.Future }

func (p Grid_dimension_Results_Future) Struct() (Grid_dimension_Results, error) {
	s, err := p.Future.Struct()
	return Grid_dimension_Results{s}, err
}

type Grid_noDataValue_Params struct{ capnp.Struct }

// Grid_noDataValue_Params_TypeID is the unique identifier for the type Grid_noDataValue_Params.
const Grid_noDataValue_Params_TypeID = 0xf804a76f2ada54b6

func NewGrid_noDataValue_Params(s *capnp.Segment) (Grid_noDataValue_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_noDataValue_Params{st}, err
}

func NewRootGrid_noDataValue_Params(s *capnp.Segment) (Grid_noDataValue_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_noDataValue_Params{st}, err
}

func ReadRootGrid_noDataValue_Params(msg *capnp.Message) (Grid_noDataValue_Params, error) {
	root, err := msg.Root()
	return Grid_noDataValue_Params{root.Struct()}, err
}

func (s Grid_noDataValue_Params) String() string {
	str, _ := text.Marshal(0xf804a76f2ada54b6, s.Struct)
	return str
}

// Grid_noDataValue_Params_List is a list of Grid_noDataValue_Params.
type Grid_noDataValue_Params_List struct{ capnp.List }

// NewGrid_noDataValue_Params creates a new list of Grid_noDataValue_Params.
func NewGrid_noDataValue_Params_List(s *capnp.Segment, sz int32) (Grid_noDataValue_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_noDataValue_Params_List{l}, err
}

func (s Grid_noDataValue_Params_List) At(i int) Grid_noDataValue_Params {
	return Grid_noDataValue_Params{s.List.Struct(i)}
}

func (s Grid_noDataValue_Params_List) Set(i int, v Grid_noDataValue_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_noDataValue_Params_List) String() string {
	str, _ := text.MarshalList(0xf804a76f2ada54b6, s.List)
	return str
}

// Grid_noDataValue_Params_Future is a wrapper for a Grid_noDataValue_Params promised by a client call.
type Grid_noDataValue_Params_Future struct{ *capnp.Future }

func (p Grid_noDataValue_Params_Future) Struct() (Grid_noDataValue_Params, error) {
	s, err := p.Future.Struct()
	return Grid_noDataValue_Params{s}, err
}

type Grid_noDataValue_Results struct{ capnp.Struct }

// Grid_noDataValue_Results_TypeID is the unique identifier for the type Grid_noDataValue_Results.
const Grid_noDataValue_Results_TypeID = 0x9bc132bd2a1b1fcf

func NewGrid_noDataValue_Results(s *capnp.Segment) (Grid_noDataValue_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{st}, err
}

func NewRootGrid_noDataValue_Results(s *capnp.Segment) (Grid_noDataValue_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{st}, err
}

func ReadRootGrid_noDataValue_Results(msg *capnp.Message) (Grid_noDataValue_Results, error) {
	root, err := msg.Root()
	return Grid_noDataValue_Results{root.Struct()}, err
}

func (s Grid_noDataValue_Results) String() string {
	str, _ := text.Marshal(0x9bc132bd2a1b1fcf, s.Struct)
	return str
}

func (s Grid_noDataValue_Results) Nodata() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_noDataValue_Results) HasNodata() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_noDataValue_Results) SetNodata(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewNodata sets the nodata field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_noDataValue_Results) NewNodata() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Grid_noDataValue_Results_List is a list of Grid_noDataValue_Results.
type Grid_noDataValue_Results_List struct{ capnp.List }

// NewGrid_noDataValue_Results creates a new list of Grid_noDataValue_Results.
func NewGrid_noDataValue_Results_List(s *capnp.Segment, sz int32) (Grid_noDataValue_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Grid_noDataValue_Results_List{l}, err
}

func (s Grid_noDataValue_Results_List) At(i int) Grid_noDataValue_Results {
	return Grid_noDataValue_Results{s.List.Struct(i)}
}

func (s Grid_noDataValue_Results_List) Set(i int, v Grid_noDataValue_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_noDataValue_Results_List) String() string {
	str, _ := text.MarshalList(0x9bc132bd2a1b1fcf, s.List)
	return str
}

// Grid_noDataValue_Results_Future is a wrapper for a Grid_noDataValue_Results promised by a client call.
type Grid_noDataValue_Results_Future struct{ *capnp.Future }

func (p Grid_noDataValue_Results_Future) Struct() (Grid_noDataValue_Results, error) {
	s, err := p.Future.Struct()
	return Grid_noDataValue_Results{s}, err
}

func (p Grid_noDataValue_Results_Future) Nodata() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

type Grid_valueAt_Params struct{ capnp.Struct }

// Grid_valueAt_Params_TypeID is the unique identifier for the type Grid_valueAt_Params.
const Grid_valueAt_Params_TypeID = 0x948ff2bdd6e6972f

func NewGrid_valueAt_Params(s *capnp.Segment) (Grid_valueAt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Grid_valueAt_Params{st}, err
}

func NewRootGrid_valueAt_Params(s *capnp.Segment) (Grid_valueAt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Grid_valueAt_Params{st}, err
}

func ReadRootGrid_valueAt_Params(msg *capnp.Message) (Grid_valueAt_Params, error) {
	root, err := msg.Root()
	return Grid_valueAt_Params{root.Struct()}, err
}

func (s Grid_valueAt_Params) String() string {
	str, _ := text.Marshal(0x948ff2bdd6e6972f, s.Struct)
	return str
}

func (s Grid_valueAt_Params) Row() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_valueAt_Params) SetRow(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_valueAt_Params) Col() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_valueAt_Params) SetCol(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Grid_valueAt_Params) Resolution() uint64 {
	return s.Struct.Uint64(16)
}

func (s Grid_valueAt_Params) SetResolution(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s Grid_valueAt_Params) Agg() Aggregation {
	return Aggregation(s.Struct.Uint16(24))
}

func (s Grid_valueAt_Params) SetAgg(v Aggregation) {
	s.Struct.SetUint16(24, uint16(v))
}

func (s Grid_valueAt_Params) IncludeAggParts() bool {
	return s.Struct.Bit(208)
}

func (s Grid_valueAt_Params) SetIncludeAggParts(v bool) {
	s.Struct.SetBit(208, v)
}

// Grid_valueAt_Params_List is a list of Grid_valueAt_Params.
type Grid_valueAt_Params_List struct{ capnp.List }

// NewGrid_valueAt_Params creates a new list of Grid_valueAt_Params.
func NewGrid_valueAt_Params_List(s *capnp.Segment, sz int32) (Grid_valueAt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return Grid_valueAt_Params_List{l}, err
}

func (s Grid_valueAt_Params_List) At(i int) Grid_valueAt_Params {
	return Grid_valueAt_Params{s.List.Struct(i)}
}

func (s Grid_valueAt_Params_List) Set(i int, v Grid_valueAt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_valueAt_Params_List) String() string {
	str, _ := text.MarshalList(0x948ff2bdd6e6972f, s.List)
	return str
}

// Grid_valueAt_Params_Future is a wrapper for a Grid_valueAt_Params promised by a client call.
type Grid_valueAt_Params_Future struct{ *capnp.Future }

func (p Grid_valueAt_Params_Future) Struct() (Grid_valueAt_Params, error) {
	s, err := p.Future.Struct()
	return Grid_valueAt_Params{s}, err
}

type Grid_valueAt_Results struct{ capnp.Struct }

// Grid_valueAt_Results_TypeID is the unique identifier for the type Grid_valueAt_Results.
const Grid_valueAt_Results_TypeID = 0xa21ef33efc715994

func NewGrid_valueAt_Results(s *capnp.Segment) (Grid_valueAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{st}, err
}

func NewRootGrid_valueAt_Results(s *capnp.Segment) (Grid_valueAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{st}, err
}

func ReadRootGrid_valueAt_Results(msg *capnp.Message) (Grid_valueAt_Results, error) {
	root, err := msg.Root()
	return Grid_valueAt_Results{root.Struct()}, err
}

func (s Grid_valueAt_Results) String() string {
	str, _ := text.Marshal(0xa21ef33efc715994, s.Struct)
	return str
}

func (s Grid_valueAt_Results) Val() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_valueAt_Results) HasVal() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_valueAt_Results) SetVal(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVal sets the val field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_valueAt_Results) NewVal() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_valueAt_Results) AggParts() (Grid_AggregationPart_List, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_AggregationPart_List{List: p.List()}, err
}

func (s Grid_valueAt_Results) HasAggParts() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_valueAt_Results) SetAggParts(v Grid_AggregationPart_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewAggParts sets the aggParts field to a newly
// allocated Grid_AggregationPart_List, preferring placement in s's segment.
func (s Grid_valueAt_Results) NewAggParts(n int32) (Grid_AggregationPart_List, error) {
	l, err := NewGrid_AggregationPart_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_AggregationPart_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// Grid_valueAt_Results_List is a list of Grid_valueAt_Results.
type Grid_valueAt_Results_List struct{ capnp.List }

// NewGrid_valueAt_Results creates a new list of Grid_valueAt_Results.
func NewGrid_valueAt_Results_List(s *capnp.Segment, sz int32) (Grid_valueAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Grid_valueAt_Results_List{l}, err
}

func (s Grid_valueAt_Results_List) At(i int) Grid_valueAt_Results {
	return Grid_valueAt_Results{s.List.Struct(i)}
}

func (s Grid_valueAt_Results_List) Set(i int, v Grid_valueAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_valueAt_Results_List) String() string {
	str, _ := text.MarshalList(0xa21ef33efc715994, s.List)
	return str
}

// Grid_valueAt_Results_Future is a wrapper for a Grid_valueAt_Results promised by a client call.
type Grid_valueAt_Results_Future struct{ *capnp.Future }

func (p Grid_valueAt_Results_Future) Struct() (Grid_valueAt_Results, error) {
	s, err := p.Future.Struct()
	return Grid_valueAt_Results{s}, err
}

func (p Grid_valueAt_Results_Future) Val() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

type Grid_latLonBounds_Params struct{ capnp.Struct }

// Grid_latLonBounds_Params_TypeID is the unique identifier for the type Grid_latLonBounds_Params.
const Grid_latLonBounds_Params_TypeID = 0xf37338992466bd97

func NewGrid_latLonBounds_Params(s *capnp.Segment) (Grid_latLonBounds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_latLonBounds_Params{st}, err
}

func NewRootGrid_latLonBounds_Params(s *capnp.Segment) (Grid_latLonBounds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_latLonBounds_Params{st}, err
}

func ReadRootGrid_latLonBounds_Params(msg *capnp.Message) (Grid_latLonBounds_Params, error) {
	root, err := msg.Root()
	return Grid_latLonBounds_Params{root.Struct()}, err
}

func (s Grid_latLonBounds_Params) String() string {
	str, _ := text.Marshal(0xf37338992466bd97, s.Struct)
	return str
}

func (s Grid_latLonBounds_Params) UseCellCenter() bool {
	return s.Struct.Bit(0)
}

func (s Grid_latLonBounds_Params) SetUseCellCenter(v bool) {
	s.Struct.SetBit(0, v)
}

// Grid_latLonBounds_Params_List is a list of Grid_latLonBounds_Params.
type Grid_latLonBounds_Params_List struct{ capnp.List }

// NewGrid_latLonBounds_Params creates a new list of Grid_latLonBounds_Params.
func NewGrid_latLonBounds_Params_List(s *capnp.Segment, sz int32) (Grid_latLonBounds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Grid_latLonBounds_Params_List{l}, err
}

func (s Grid_latLonBounds_Params_List) At(i int) Grid_latLonBounds_Params {
	return Grid_latLonBounds_Params{s.List.Struct(i)}
}

func (s Grid_latLonBounds_Params_List) Set(i int, v Grid_latLonBounds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_latLonBounds_Params_List) String() string {
	str, _ := text.MarshalList(0xf37338992466bd97, s.List)
	return str
}

// Grid_latLonBounds_Params_Future is a wrapper for a Grid_latLonBounds_Params promised by a client call.
type Grid_latLonBounds_Params_Future struct{ *capnp.Future }

func (p Grid_latLonBounds_Params_Future) Struct() (Grid_latLonBounds_Params, error) {
	s, err := p.Future.Struct()
	return Grid_latLonBounds_Params{s}, err
}

type Grid_latLonBounds_Results struct{ capnp.Struct }

// Grid_latLonBounds_Results_TypeID is the unique identifier for the type Grid_latLonBounds_Results.
const Grid_latLonBounds_Results_TypeID = 0xe57fce57d3443377

func NewGrid_latLonBounds_Results(s *capnp.Segment) (Grid_latLonBounds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{st}, err
}

func NewRootGrid_latLonBounds_Results(s *capnp.Segment) (Grid_latLonBounds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{st}, err
}

func ReadRootGrid_latLonBounds_Results(msg *capnp.Message) (Grid_latLonBounds_Results, error) {
	root, err := msg.Root()
	return Grid_latLonBounds_Results{root.Struct()}, err
}

func (s Grid_latLonBounds_Results) String() string {
	str, _ := text.Marshal(0xe57fce57d3443377, s.Struct)
	return str
}

func (s Grid_latLonBounds_Results) Tl() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(0)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasTl() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_latLonBounds_Results) SetTl(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTl sets the tl field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewTl() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Tr() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(1)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasTr() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_latLonBounds_Results) SetTr(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewTr sets the tr field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewTr() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Br() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(2)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasBr() bool {
	return s.Struct.HasPtr(2)
}

func (s Grid_latLonBounds_Results) SetBr(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewBr sets the br field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewBr() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Bl() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(3)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasBl() bool {
	return s.Struct.HasPtr(3)
}

func (s Grid_latLonBounds_Results) SetBl(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewBl sets the bl field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewBl() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// Grid_latLonBounds_Results_List is a list of Grid_latLonBounds_Results.
type Grid_latLonBounds_Results_List struct{ capnp.List }

// NewGrid_latLonBounds_Results creates a new list of Grid_latLonBounds_Results.
func NewGrid_latLonBounds_Results_List(s *capnp.Segment, sz int32) (Grid_latLonBounds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Grid_latLonBounds_Results_List{l}, err
}

func (s Grid_latLonBounds_Results_List) At(i int) Grid_latLonBounds_Results {
	return Grid_latLonBounds_Results{s.List.Struct(i)}
}

func (s Grid_latLonBounds_Results_List) Set(i int, v Grid_latLonBounds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_latLonBounds_Results_List) String() string {
	str, _ := text.MarshalList(0xe57fce57d3443377, s.List)
	return str
}

// Grid_latLonBounds_Results_Future is a wrapper for a Grid_latLonBounds_Results promised by a client call.
type Grid_latLonBounds_Results_Future struct{ *capnp.Future }

func (p Grid_latLonBounds_Results_Future) Struct() (Grid_latLonBounds_Results, error) {
	s, err := p.Future.Struct()
	return Grid_latLonBounds_Results{s}, err
}

func (p Grid_latLonBounds_Results_Future) Tl() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_latLonBounds_Results_Future) Tr() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(1, nil)}
}

func (p Grid_latLonBounds_Results_Future) Br() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(2, nil)}
}

func (p Grid_latLonBounds_Results_Future) Bl() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(3, nil)}
}

type Grid_streamCells_Params struct{ capnp.Struct }

// Grid_streamCells_Params_TypeID is the unique identifier for the type Grid_streamCells_Params.
const Grid_streamCells_Params_TypeID = 0xd9add1b3fdcfdbba

func NewGrid_streamCells_Params(s *capnp.Segment) (Grid_streamCells_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Grid_streamCells_Params{st}, err
}

func NewRootGrid_streamCells_Params(s *capnp.Segment) (Grid_streamCells_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Grid_streamCells_Params{st}, err
}

func ReadRootGrid_streamCells_Params(msg *capnp.Message) (Grid_streamCells_Params, error) {
	root, err := msg.Root()
	return Grid_streamCells_Params{root.Struct()}, err
}

func (s Grid_streamCells_Params) String() string {
	str, _ := text.Marshal(0xd9add1b3fdcfdbba, s.Struct)
	return str
}

func (s Grid_streamCells_Params) Callback() Grid_Callback {
	p, _ := s.Struct.Ptr(0)
	return Grid_Callback{Client: p.Interface().Client()}
}

func (s Grid_streamCells_Params) HasCallback() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_streamCells_Params) SetCallback(v Grid_Callback) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s Grid_streamCells_Params) MaxNoOfCellsPerSend() uint64 {
	return s.Struct.Uint64(0) ^ 100
}

func (s Grid_streamCells_Params) SetMaxNoOfCellsPerSend(v uint64) {
	s.Struct.SetUint64(0, v^100)
}

// Grid_streamCells_Params_List is a list of Grid_streamCells_Params.
type Grid_streamCells_Params_List struct{ capnp.List }

// NewGrid_streamCells_Params creates a new list of Grid_streamCells_Params.
func NewGrid_streamCells_Params_List(s *capnp.Segment, sz int32) (Grid_streamCells_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Grid_streamCells_Params_List{l}, err
}

func (s Grid_streamCells_Params_List) At(i int) Grid_streamCells_Params {
	return Grid_streamCells_Params{s.List.Struct(i)}
}

func (s Grid_streamCells_Params_List) Set(i int, v Grid_streamCells_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_streamCells_Params_List) String() string {
	str, _ := text.MarshalList(0xd9add1b3fdcfdbba, s.List)
	return str
}

// Grid_streamCells_Params_Future is a wrapper for a Grid_streamCells_Params promised by a client call.
type Grid_streamCells_Params_Future struct{ *capnp.Future }

func (p Grid_streamCells_Params_Future) Struct() (Grid_streamCells_Params, error) {
	s, err := p.Future.Struct()
	return Grid_streamCells_Params{s}, err
}

func (p Grid_streamCells_Params_Future) Callback() Grid_Callback {
	return Grid_Callback{Client: p.Future.Field(0, nil).Client()}
}

type Grid_streamCells_Results struct{ capnp.Struct }

// Grid_streamCells_Results_TypeID is the unique identifier for the type Grid_streamCells_Results.
const Grid_streamCells_Results_TypeID = 0x9b8dd52b78a7ebd2

func NewGrid_streamCells_Results(s *capnp.Segment) (Grid_streamCells_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{st}, err
}

func NewRootGrid_streamCells_Results(s *capnp.Segment) (Grid_streamCells_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{st}, err
}

func ReadRootGrid_streamCells_Results(msg *capnp.Message) (Grid_streamCells_Results, error) {
	root, err := msg.Root()
	return Grid_streamCells_Results{root.Struct()}, err
}

func (s Grid_streamCells_Results) String() string {
	str, _ := text.Marshal(0x9b8dd52b78a7ebd2, s.Struct)
	return str
}

// Grid_streamCells_Results_List is a list of Grid_streamCells_Results.
type Grid_streamCells_Results_List struct{ capnp.List }

// NewGrid_streamCells_Results creates a new list of Grid_streamCells_Results.
func NewGrid_streamCells_Results_List(s *capnp.Segment, sz int32) (Grid_streamCells_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_streamCells_Results_List{l}, err
}

func (s Grid_streamCells_Results_List) At(i int) Grid_streamCells_Results {
	return Grid_streamCells_Results{s.List.Struct(i)}
}

func (s Grid_streamCells_Results_List) Set(i int, v Grid_streamCells_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_streamCells_Results_List) String() string {
	str, _ := text.MarshalList(0x9b8dd52b78a7ebd2, s.List)
	return str
}

// Grid_streamCells_Results_Future is a wrapper for a Grid_streamCells_Results promised by a client call.
type Grid_streamCells_Results_Future struct{ *capnp.Future }

func (p Grid_streamCells_Results_Future) Struct() (Grid_streamCells_Results, error) {
	s, err := p.Future.Struct()
	return Grid_streamCells_Results{s}, err
}

const schema_d373e9739460aa23 = "x\xda\xa4Wo\x8c\x14g\x19\x7f\x9e\xf7\xdd\xdd\xd9e" +
	"oo\xf6eW[\xce\xda\x8bxD9\x05\xe1\xae\x1a" +
	"{\x1f\xdc\xbd\x1e)\x85x\xf5\xde\xc3\xb69b\x93\xce" +
	"\xed\x0e\xcb\xb4\xb330\xb3{{\x18-\x16\xdbX\xa2" +
	"'%\xa1VjcJSK1\x18{\xb4\x18AO" +
	"\xdb\x0f\x8a\x15\xb5E\xd2j+\x9fT$\x846\x866" +
	"\xf8\xa7B\xc7<\xb3;3{\xdcJC\xfcr3\xfb" +
	"\xbe\xcf<\xef\xfb{~\xcf\x9f\xdf\xadZ\x19/\xb2\xd5" +
	"\xf1k2\x00\xf2\xdb\xf1\x84\xf7\xe8\xb1ie\xdd\xd1?" +
	"|\x03d\x16\x11 \xa6\x00\x0cnM\xf4 `n[" +
	"\xa2\x00\xe8m[\xf6\xf5\x09\xcb\xde\xf0M\x10K\x82\xfd" +
	"\xbd\x89\x8d\x081\xef\x13\x8f\xfc\xed\xd5\xb9\xb7v\xed\xa1" +
	"Oc\xcd\xad\xdc\x03\x89w\x00\x07w&z\x11\xd0\xfb" +
	"\xfd\xb9\xfd\xd3\x1f{e\xe6; \xb2\xc1\xa7\xfb\x94\xa5" +
	"\xf4\xe9K\xbd\x1f\xe8\x9f\x1bx\xa1\xb5\x13G\xda\xdaI" +
	"[\x98\xdb\xad\xd0\xa9{&\xb6^\xfc\xcc\xdb\xd7?\xd1" +
	"2`d0\xab028\xac4\x00=|\xf6\xa9J" +
	"\xe3\xd4\x1b\xdf\x03\x91f\xde\x87\xbf\x7f\xd7\x1e\xf7\xac{" +
	"\x12\x00s\xcb\x92Gs+\x92d\xbf<\xf95\x04\xfc" +
	"\xf9\xcff\x9e\xefzk\xe3S\xd1\x1d2\xa9Et\x87" +
	"g\x8a\x9f\xfcj\x89\xcd=\xdd:\xc2\xdf\xba\x90\x1c\xa2" +
	"#.%\xcf\x00z\x1f\x1c\x1a\xfc\xfb57\xaf9H" +
	"\xf8\x98\xf7\xcb\xbfh\xdf:\xe4.\xffk\xeb2\xa7S" +
	"\x0cs\xe7S\x84\xf9\xcd\x14Y{\x89\xc9\xe4\x9d\x7f\xfc" +
	"\xf3\x91\xcb\xac\xfd\xa8\xfcb\xd1\xd1\xdco\x17\xd1\xdb\x8b" +
	"\x8b\xe8\xf2'o;\xfe\x95\x1d\xf2\xc6WAdyd" +
	"J\x97O\xff:\xb7:M\x86+\xd2ks\x13\xf4\xe6" +
	"\x1d\xfd\xd3K\x97\x9e=\xf1\x83\xd7Z\x0c5\x835\x9c" +
	"\xf6)Z\x97&w\xa1\x07\x91\xe6\xf3b1\x9b\xde\x91" +
	";\x9c^\x0b0x6}\x0csK2\x1f\x01\xf0\x1a" +
	"\x83kN\xde\xf1\xbb\xed\xa7\xdbq\x8bL?\xb9[\x92" +
	"!$\xf6\xb2\xec\xfb\xef\xb1\x9f<\xe3#i\xc5\xec\xcd" +
	"\xccb2\xb8\x90\xa1\xf3~\xf2\x8f\xcd\xbb\xb6\x1e{\xe6" +
	"l3%\x9a\x17\x92\xdd\xe3dpg7\xb1\xf7\xa8\xd2" +
	"\xa5]g\xdf{\xae\xe5\xa1i1\xd3=\x80\x80\x83\x0f" +
	"w\xdfA\xb9\xf1\xc8\xdc\xa6\xbe\xbd\x9fv\xdfn\xcf\xbb" +
	"\x0b\xaa\x9f\x01\x97T\xf2qn\xc5\xf5\xf7\x1e9\xf5\xdd" +
	"\x7f\xb6%\xcf\x87\xb2\x8b\x89\xb8\x1f}\xfe\xf5~{\x7f" +
	"\xec_m;\xa9l\x0f\xed\xbc\xfc\x9a{\xfa\x9d\xcc\xca" +
	"w/\xe3`\x8d\x12\xc3X\xee\xbcz(\xf7o\x95b" +
	"{A=\x03\xb3^\xc51\xca+K\xda\x16nm\x19" +
	"ZK\xef\x8e\xee\xdaf\xbdf\xd8V\xdf\xb8\xee\xd6M" +
	"^se\x8cSf#\x80\xc8,\x05\x90I\x8e2\xcf" +
	"Pqt\x17S\xc00\x05\x18\xfa\x89\x05~F4\xd3" +
	"\x9c\xd4J\xf7\xactu\xab<\xa2\x9b\xa6\x1b\xfa\x0b\x8d" +
	"Y`<\xa5\x99u}\xb8\xd6W\x18\xd3\x1c\xad\xea\xca" +
	"|x\xe0\x97\xe9\xc0i\x8e\xf2~\x86\x021Oa\x12" +
	"\xf7\xd1\xe2\x978\xca\x07\x19\x0a\xc6\xf2\x14^\xf1\xc0F" +
	"\x00y?G\xf9\x10C\xc1\xbb\xf2\xc8\x11\xc5\x0cY>" +
	"\xc8Q\xeea(b/\xe71\x86(v\xef\x00\x90\x0f" +
	"q\x94\x8f\x11\x08\xbb\x11\x80PJ\xb6\x19\x02\x0a\xe2\x00" +
	"\xdc\xb6B\x03\xadRA5\xaa:@T\x01=\xc3*" +
	"\x99\xf5\xb2>\x8c\x95\xca\x98\xe6\xd4\\@\x04\x86\xd8\x16" +
	"\x950\xban\xcd\xd1\xb5j\x14\x0e\xc5l\x0bGhe" +
	"\xd9k\xb4\x9av;\x05%\xb4j'a(\"\xa1`" +
	"\xd9e\xad\xa6a6\xa2\x1d\x10\xb3\x9d\xce\x0e\x82\xec\xd3" +
	"Ps\xc9E\xe0q9\x85\xa9\x8f\xa3\\\xd5\x16\xe5\x15" +
	"\xeb\x01\xe4\xc79\xca[\x18*S\x9a\xd9\xe1\x0c-@" +
	"\x0c\x80\xdd\x80c\x1c1\x1bu\x0c@Z\x0c/\x82\xd6" +
	"\x96\xa1\xe1J\xc5\xd1\x0b\x15\x8d\xf2k\x0cQ\x16}\xea" +
	"\x8e\xf4\x03 \x13\xb3\xf4\x88\x8b\x037\x01\xa0\"\xf6-" +
	"\x05\xc0Eb/=2b7=\xb8\xd8I&\x09q" +
	"\x1f\x99\xa0\xd8F\x8b1\xb1u\x88\x8e\x17\x06\xed\xa9B" +
	"\xa3GRL\xd0#%$=\xd2b\x1d=\xba\xc4p" +
	"?\x80j\xd9\x96\xae6\x86\xa7*\xdb\x1b\xa3z\xd9\xd0" +
	",\xa5jXJU\x9bV\xdczU5h\xc3hm" +
	"hS\x95B\xd5\x7fU\x1b\x1bh\x93\xfe4F\x0dK" +
	"5\xe8OcT\x9bV\x8dQmza\xb0\xcbFU" +
	"\xb7\\\xaa\xa2fJ\x03,\xb4)\x99\xb6\xab\xbb\xb5\xdb" +
	"\x03^\x0aMbd6\xe4E#^\xbe\xc0Qnn" +
	"\xe3E\xef\x01\x90wq\x94f[\xf6\x1b\xb4X\xe6(" +
	"\xb7P\xf6\xf3<r\x00Q%\x06\xcdf\x9dtf\x90" +
	"\xd7h1\xec\xda\xad\xc5Ig\xe1\xe2\xd5q\x1db\xf4" +
	"\x09o\xf1\xad95 \xd2\xdb\xf0\x0dt\xc27\x14\xe1" +
	"\xc3\x00\x1e!\xd9\xccQ\xd6\x08\x1e6\xe1\x11\xef>\xbc" +
	"i\x86\xbd~v/\x04Xp\xec\xc6\x88mv\xc2\xe3" +
	"\xe8\xda\xcd\x8eV\"<i`\x98\x06,\x18>\x17\xc1" +
	"\xcfy\x99\xeb\xa3)\x8c\xfb\xde\x08\xc4{\x15\x0f-~" +
	"\x94\xa3\xbc\xe1\x0a=fA\x1f\x0c\x9a&\xf8q\x8a\xf1" +
	"8@8g0\xd0 B\x8c\x03\x13)\xc5\x0b:+" +
	"\xa0[\xc41|\x8fvCy\xc8\xabn\xfb\xc5\xd7G" +
	"w\xf4\xef\x8d(V?\x01 o\xe0(\x8b\x0c\xbdR" +
	"x\x1d@\x11\xcdk*=@\xaf\xaaM\xdfj\x7fn" +
	"\xd3\x08\x92\xfb1\xdd\xd9\xa0\xe8V\xb9\x89\x0d\xcbm\xf9" +
	"\x1eD\xcf\x1fr\x11?b\xc9@\xc4\x89x\xdfP\x94" +
	"KB\xech\x13\x07b}\xaf\xcfJ+\xf6^\x90Q" +
	",H\xa9(h\xf2:?b\xc1\xe0\xc5@\xdc\x88\x13" +
	"_\x04&^T\x90\x85\x03\x15\x03\xc9'\xe66\x02\x13" +
	"\x87\x15\xe4\x81F\x8aF\xbf8@\x91\xde\xa7`4n" +
	"1\x10m\xe2\xe1I`bFA\x0c% \x06z\x8d" +
	"\xfa\x13\x13u\x05\xe3\xe1\x84\xc7@p\x08\xe3n`B" +
	"S0\x11j\x1a\x0c$\xa2\xb8\x8d|\x8e*^\xd0\x19" +
	"\xa0\xd0\xec\x0d\xc5\xf9\xf3\xa8\x88^\xd0_\x00\xe9W0" +
	"0@1\xebz\x11\xb7O\x85\x9f\x99Z\xed\xb3\xb6u" +
	"\x93\x0dj\xdd*\xbbE\xf4\x82\x94\x00\xc54\xdd\"\xca" +
	"$\xa2\xf7\xca-\x8fM\x1c?\xf1\xc3C\x00\xe0\xe9\xc7" +
	"?u\xea\xf1\xd7\xf7\xbf\x00\x9d:V\xe0\x8d|\xd1\x1c" +
	"Q/\xefW=\xff_\xbf\xea\x89\xaa\xbc\xd9\x99\xfe\xb3" +
	"\xeb77\xae\xbax\xfe\x8d\xb0]9\x1d\x16';." +
	"v\xf8\xfcJm\xba9\x15q^}\xf4w*\xec\xfe" +
	"\xa8hT\xc7n\x84\x12H-\xd9\xe6\xd5\xe9!\x7f2" +
	"\xe0\xbc\xc9>\xd0\x9a\xec}\x0c{Kd\x14\xb5\xda\xf6" +
	"\xfe\xd5\xb1\xd5^6N\xc6z\x9bZ\xea\xda\xd0\xfb\xde" +
	"I\xfaw\x87\xa3|2\xaa\xf7}w\x03\xc8\xc79\xca" +
	"\x83D\x0e\xe6\x91!\x8a\x03$\xa5\x9e\xe6(\x9f\x0b\xba" +
	"-\xa2\x98\xa5\x8ev\x90\xa3\xfc1I)lJ\xa9\xc3" +
	"\x0e\x80|\x8e\xa3|\x9e\xa1\x88\xb3<\xc6\x11\xc5\x1c\xe9" +
	"\xab\x9fr\x94\xbfb~\x02\x9a\xb65b\x83b;\xe5" +
	"\x0e\x94\x18\x15\xcbv\xf4[mP)\x85I9\xc5}" +
	"\xe9t\x15\xfa\xcb\xd1ku\xc7\x1a\xb7\xa1\x97\x1a\x84\x1b" +
	"\xaa\xaf\xab\xd0e\xf3\x12{Ls\x14\x8a\\\x8b\x17D" +
	"\x91!\x98]\x1c\xe5\xb5\x0c\xbd\xba\xab\x13\x7f#\xd0\xab" +
	"[5\xdd\xf9\xdfN\xdb\xa4t\x8b\xea+K\xbdV\x87" +
	"^8v\x9a\x0d\xb05:\xbb<\xafYk\x8b\xa3Z" +
	"\xcb\xe0\xbb^\xab\xd8\x16G\xc5\x96a\x97\xbc\x85\xd5\x96" +
	"\xe1\x17\xbd\x85\xe5\x86\x9b\x82\xa9\x87\x06\xc6\x81a\x1c\x90" +
	"\xd7\x8d \xf2\xdc\xb2\x03\x9c\xff\x0d\x00\x00\xff\xff\xaa\xa9" +
	"\x12\xbc"

func init() {
	schemas.Register(schema_d373e9739460aa23,
		0x8cd7ba490778c79a,
		0x8e536f6e598b2579,
		0x948ff2bdd6e6972f,
		0x9b8dd52b78a7ebd2,
		0x9bc132bd2a1b1fcf,
		0xa21ef33efc715994,
		0xa5ecdc7767a6b301,
		0xa6005af20cc08dbe,
		0xa8bd0263833540b0,
		0xac444617ef333a1d,
		0xb9e2d85d086206ff,
		0xd639518280cb55d3,
		0xd9add1b3fdcfdbba,
		0xe42973b29661e3c6,
		0xe57fce57d3443377,
		0xe7a46f6b1610256f,
		0xe9b0c7718f68f6bb,
		0xeb7e6f1c610c079a,
		0xf37338992466bd97,
		0xf79edcb97e1e2deb,
		0xf804a76f2ada54b6,
		0xfe2e0dfae573d9d0)
}
