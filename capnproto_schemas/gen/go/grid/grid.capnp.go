// Code generated by capnpc-go. DO NOT EDIT.

package grid

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/common"
	geo "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/geo"
	persistence "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/persistence"
	math "math"
	strconv "strconv"
)

type Aggregation uint16

// Aggregation_TypeID is the unique identifier for the type Aggregation.
const Aggregation_TypeID = 0xa5ecdc7767a6b301

// Values of Aggregation.
const (
	Aggregation_none    Aggregation = 0
	Aggregation_avg     Aggregation = 8
	Aggregation_wAvg    Aggregation = 1
	Aggregation_iAvg    Aggregation = 6
	Aggregation_median  Aggregation = 9
	Aggregation_wMedian Aggregation = 2
	Aggregation_iMedian Aggregation = 7
	Aggregation_min     Aggregation = 3
	Aggregation_wMin    Aggregation = 12
	Aggregation_iMin    Aggregation = 13
	Aggregation_max     Aggregation = 4
	Aggregation_wMax    Aggregation = 14
	Aggregation_iMax    Aggregation = 15
	Aggregation_sum     Aggregation = 5
	Aggregation_wSum    Aggregation = 10
	Aggregation_iSum    Aggregation = 11
)

// String returns the enum's constant name.
func (c Aggregation) String() string {
	switch c {
	case Aggregation_none:
		return "none"
	case Aggregation_avg:
		return "avg"
	case Aggregation_wAvg:
		return "wAvg"
	case Aggregation_iAvg:
		return "iAvg"
	case Aggregation_median:
		return "median"
	case Aggregation_wMedian:
		return "wMedian"
	case Aggregation_iMedian:
		return "iMedian"
	case Aggregation_min:
		return "min"
	case Aggregation_wMin:
		return "wMin"
	case Aggregation_iMin:
		return "iMin"
	case Aggregation_max:
		return "max"
	case Aggregation_wMax:
		return "wMax"
	case Aggregation_iMax:
		return "iMax"
	case Aggregation_sum:
		return "sum"
	case Aggregation_wSum:
		return "wSum"
	case Aggregation_iSum:
		return "iSum"

	default:
		return ""
	}
}

// AggregationFromString returns the enum value with a name,
// or the zero value if there's no such value.
func AggregationFromString(c string) Aggregation {
	switch c {
	case "none":
		return Aggregation_none
	case "avg":
		return Aggregation_avg
	case "wAvg":
		return Aggregation_wAvg
	case "iAvg":
		return Aggregation_iAvg
	case "median":
		return Aggregation_median
	case "wMedian":
		return Aggregation_wMedian
	case "iMedian":
		return Aggregation_iMedian
	case "min":
		return Aggregation_min
	case "wMin":
		return Aggregation_wMin
	case "iMin":
		return Aggregation_iMin
	case "max":
		return Aggregation_max
	case "wMax":
		return Aggregation_wMax
	case "iMax":
		return Aggregation_iMax
	case "sum":
		return Aggregation_sum
	case "wSum":
		return Aggregation_wSum
	case "iSum":
		return Aggregation_iSum

	default:
		return 0
	}
}

type Aggregation_List struct{ capnp.List }

func NewAggregation_List(s *capnp.Segment, sz int32) (Aggregation_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Aggregation_List{l.List}, err
}

func (l Aggregation_List) At(i int) Aggregation {
	ul := capnp.UInt16List{List: l.List}
	return Aggregation(ul.At(i))
}

func (l Aggregation_List) Set(i int, v Aggregation) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Grid struct{ Client *capnp.Client }

// Grid_TypeID is the unique identifier for the type Grid.
const Grid_TypeID = 0xe42973b29661e3c6

func (c Grid) ClosestValueAt(ctx context.Context, params func(Grid_closestValueAt_Params) error) (Grid_closestValueAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "closestValueAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_closestValueAt_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_closestValueAt_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Resolution(ctx context.Context, params func(Grid_resolution_Params) error) (Grid_resolution_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      1,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "resolution",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_resolution_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_resolution_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Dimension(ctx context.Context, params func(Grid_dimension_Params) error) (Grid_dimension_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      2,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "dimension",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_dimension_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_dimension_Results_Future{Future: ans.Future()}, release
}
func (c Grid) NoDataValue(ctx context.Context, params func(Grid_noDataValue_Params) error) (Grid_noDataValue_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      3,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "noDataValue",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_noDataValue_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_noDataValue_Results_Future{Future: ans.Future()}, release
}
func (c Grid) ValueAt(ctx context.Context, params func(Grid_valueAt_Params) error) (Grid_valueAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      4,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "valueAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 32, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_valueAt_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_valueAt_Results_Future{Future: ans.Future()}, release
}
func (c Grid) LatLonBounds(ctx context.Context, params func(Grid_latLonBounds_Params) error) (Grid_latLonBounds_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      5,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "latLonBounds",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_latLonBounds_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_latLonBounds_Results_Future{Future: ans.Future()}, release
}
func (c Grid) StreamCells(ctx context.Context, params func(Grid_streamCells_Params) error) (Grid_streamCells_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      6,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "streamCells",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_streamCells_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_streamCells_Results_Future{Future: ans.Future()}, release
}
func (c Grid) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}
func (c Grid) Save(ctx context.Context, params func(persistence.Persistent_SaveParams) error) (persistence.Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc1a7daa0dc36cb65,
			MethodID:      0,
			InterfaceName: "persistence.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(persistence.Persistent_SaveParams{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return persistence.Persistent_SaveResults_Future{Future: ans.Future()}, release
}

func (c Grid) AddRef() Grid {
	return Grid{
		Client: c.Client.AddRef(),
	}
}

func (c Grid) Release() {
	c.Client.Release()
}

// A Grid_Server is a Grid with a local implementation.
type Grid_Server interface {
	ClosestValueAt(context.Context, Grid_closestValueAt) error

	Resolution(context.Context, Grid_resolution) error

	Dimension(context.Context, Grid_dimension) error

	NoDataValue(context.Context, Grid_noDataValue) error

	ValueAt(context.Context, Grid_valueAt) error

	LatLonBounds(context.Context, Grid_latLonBounds) error

	StreamCells(context.Context, Grid_streamCells) error

	Info(context.Context, common.Identifiable_info) error

	Save(context.Context, persistence.Persistent_save) error
}

// Grid_NewServer creates a new Server from an implementation of Grid_Server.
func Grid_NewServer(s Grid_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Grid_Methods(nil, s), s, c, policy)
}

// Grid_ServerToClient creates a new Client from an implementation of Grid_Server.
// The caller is responsible for calling Release on the returned Client.
func Grid_ServerToClient(s Grid_Server, policy *server.Policy) Grid {
	return Grid{Client: capnp.NewClient(Grid_NewServer(s, policy))}
}

// Grid_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Grid_Methods(methods []server.Method, s Grid_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 9)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "closestValueAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClosestValueAt(ctx, Grid_closestValueAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      1,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "resolution",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Resolution(ctx, Grid_resolution{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      2,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "dimension",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Dimension(ctx, Grid_dimension{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      3,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "noDataValue",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.NoDataValue(ctx, Grid_noDataValue{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      4,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "valueAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ValueAt(ctx, Grid_valueAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      5,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "latLonBounds",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.LatLonBounds(ctx, Grid_latLonBounds{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe42973b29661e3c6,
			MethodID:      6,
			InterfaceName: "grid.capnp:Grid",
			MethodName:    "streamCells",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.StreamCells(ctx, Grid_streamCells{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc1a7daa0dc36cb65,
			MethodID:      0,
			InterfaceName: "persistence.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, persistence.Persistent_save{call})
		},
	})

	return methods
}

// Grid_closestValueAt holds the state for a server call to Grid.closestValueAt.
// See server.Call for documentation.
type Grid_closestValueAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_closestValueAt) Args() Grid_closestValueAt_Params {
	return Grid_closestValueAt_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_closestValueAt) AllocResults() (Grid_closestValueAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{Struct: r}, err
}

// Grid_resolution holds the state for a server call to Grid.resolution.
// See server.Call for documentation.
type Grid_resolution struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_resolution) Args() Grid_resolution_Params {
	return Grid_resolution_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_resolution) AllocResults() (Grid_resolution_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{Struct: r}, err
}

// Grid_dimension holds the state for a server call to Grid.dimension.
// See server.Call for documentation.
type Grid_dimension struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_dimension) Args() Grid_dimension_Params {
	return Grid_dimension_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_dimension) AllocResults() (Grid_dimension_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{Struct: r}, err
}

// Grid_noDataValue holds the state for a server call to Grid.noDataValue.
// See server.Call for documentation.
type Grid_noDataValue struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_noDataValue) Args() Grid_noDataValue_Params {
	return Grid_noDataValue_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_noDataValue) AllocResults() (Grid_noDataValue_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{Struct: r}, err
}

// Grid_valueAt holds the state for a server call to Grid.valueAt.
// See server.Call for documentation.
type Grid_valueAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_valueAt) Args() Grid_valueAt_Params {
	return Grid_valueAt_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_valueAt) AllocResults() (Grid_valueAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{Struct: r}, err
}

// Grid_latLonBounds holds the state for a server call to Grid.latLonBounds.
// See server.Call for documentation.
type Grid_latLonBounds struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_latLonBounds) Args() Grid_latLonBounds_Params {
	return Grid_latLonBounds_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_latLonBounds) AllocResults() (Grid_latLonBounds_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{Struct: r}, err
}

// Grid_streamCells holds the state for a server call to Grid.streamCells.
// See server.Call for documentation.
type Grid_streamCells struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_streamCells) Args() Grid_streamCells_Params {
	return Grid_streamCells_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_streamCells) AllocResults() (Grid_streamCells_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{Struct: r}, err
}

type Grid_Value struct{ capnp.Struct }
type Grid_Value_Which uint16

const (
	Grid_Value_Which_f  Grid_Value_Which = 0
	Grid_Value_Which_i  Grid_Value_Which = 1
	Grid_Value_Which_ui Grid_Value_Which = 2
	Grid_Value_Which_no Grid_Value_Which = 3
)

func (w Grid_Value_Which) String() string {
	const s = "fiuino"
	switch w {
	case Grid_Value_Which_f:
		return s[0:1]
	case Grid_Value_Which_i:
		return s[1:2]
	case Grid_Value_Which_ui:
		return s[2:4]
	case Grid_Value_Which_no:
		return s[4:6]

	}
	return "Grid_Value_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Grid_Value_TypeID is the unique identifier for the type Grid_Value.
const Grid_Value_TypeID = 0xfe2e0dfae573d9d0

func NewGrid_Value(s *capnp.Segment) (Grid_Value, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_Value{st}, err
}

func NewRootGrid_Value(s *capnp.Segment) (Grid_Value, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_Value{st}, err
}

func ReadRootGrid_Value(msg *capnp.Message) (Grid_Value, error) {
	root, err := msg.Root()
	return Grid_Value{root.Struct()}, err
}

func (s Grid_Value) String() string {
	str, _ := text.Marshal(0xfe2e0dfae573d9d0, s.Struct)
	return str
}

func (s Grid_Value) Which() Grid_Value_Which {
	return Grid_Value_Which(s.Struct.Uint16(8))
}
func (s Grid_Value) F() float64 {
	if s.Struct.Uint16(8) != 0 {
		panic("Which() != f")
	}
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Grid_Value) SetF(v float64) {
	s.Struct.SetUint16(8, 0)
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Grid_Value) I() int64 {
	if s.Struct.Uint16(8) != 1 {
		panic("Which() != i")
	}
	return int64(s.Struct.Uint64(0))
}

func (s Grid_Value) SetI(v int64) {
	s.Struct.SetUint16(8, 1)
	s.Struct.SetUint64(0, uint64(v))
}

func (s Grid_Value) Ui() uint64 {
	if s.Struct.Uint16(8) != 2 {
		panic("Which() != ui")
	}
	return s.Struct.Uint64(0)
}

func (s Grid_Value) SetUi(v uint64) {
	s.Struct.SetUint16(8, 2)
	s.Struct.SetUint64(0, v)
}

func (s Grid_Value) No() bool {
	if s.Struct.Uint16(8) != 3 {
		panic("Which() != no")
	}
	return s.Struct.Bit(0)
}

func (s Grid_Value) SetNo(v bool) {
	s.Struct.SetUint16(8, 3)
	s.Struct.SetBit(0, v)
}

// Grid_Value_List is a list of Grid_Value.
type Grid_Value_List struct{ capnp.List }

// NewGrid_Value creates a new list of Grid_Value.
func NewGrid_Value_List(s *capnp.Segment, sz int32) (Grid_Value_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_Value_List{l}, err
}

func (s Grid_Value_List) At(i int) Grid_Value { return Grid_Value{s.List.Struct(i)} }

func (s Grid_Value_List) Set(i int, v Grid_Value) error { return s.List.SetStruct(i, v.Struct) }

func (s Grid_Value_List) String() string {
	str, _ := text.MarshalList(0xfe2e0dfae573d9d0, s.List)
	return str
}

// Grid_Value_Future is a wrapper for a Grid_Value promised by a client call.
type Grid_Value_Future struct{ *capnp.Future }

func (p Grid_Value_Future) Struct() (Grid_Value, error) {
	s, err := p.Future.Struct()
	return Grid_Value{s}, err
}

type Grid_RowCol struct{ capnp.Struct }

// Grid_RowCol_TypeID is the unique identifier for the type Grid_RowCol.
const Grid_RowCol_TypeID = 0xb9e2d85d086206ff

func NewGrid_RowCol(s *capnp.Segment) (Grid_RowCol, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_RowCol{st}, err
}

func NewRootGrid_RowCol(s *capnp.Segment) (Grid_RowCol, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_RowCol{st}, err
}

func ReadRootGrid_RowCol(msg *capnp.Message) (Grid_RowCol, error) {
	root, err := msg.Root()
	return Grid_RowCol{root.Struct()}, err
}

func (s Grid_RowCol) String() string {
	str, _ := text.Marshal(0xb9e2d85d086206ff, s.Struct)
	return str
}

func (s Grid_RowCol) Row() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_RowCol) SetRow(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_RowCol) Col() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_RowCol) SetCol(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Grid_RowCol_List is a list of Grid_RowCol.
type Grid_RowCol_List struct{ capnp.List }

// NewGrid_RowCol creates a new list of Grid_RowCol.
func NewGrid_RowCol_List(s *capnp.Segment, sz int32) (Grid_RowCol_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_RowCol_List{l}, err
}

func (s Grid_RowCol_List) At(i int) Grid_RowCol { return Grid_RowCol{s.List.Struct(i)} }

func (s Grid_RowCol_List) Set(i int, v Grid_RowCol) error { return s.List.SetStruct(i, v.Struct) }

func (s Grid_RowCol_List) String() string {
	str, _ := text.MarshalList(0xb9e2d85d086206ff, s.List)
	return str
}

// Grid_RowCol_Future is a wrapper for a Grid_RowCol promised by a client call.
type Grid_RowCol_Future struct{ *capnp.Future }

func (p Grid_RowCol_Future) Struct() (Grid_RowCol, error) {
	s, err := p.Future.Struct()
	return Grid_RowCol{s}, err
}

type Grid_AggregationPart struct{ capnp.Struct }

// Grid_AggregationPart_TypeID is the unique identifier for the type Grid_AggregationPart.
const Grid_AggregationPart_TypeID = 0xac444617ef333a1d

func NewGrid_AggregationPart(s *capnp.Segment) (Grid_AggregationPart, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Grid_AggregationPart{st}, err
}

func NewRootGrid_AggregationPart(s *capnp.Segment) (Grid_AggregationPart, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return Grid_AggregationPart{st}, err
}

func ReadRootGrid_AggregationPart(msg *capnp.Message) (Grid_AggregationPart, error) {
	root, err := msg.Root()
	return Grid_AggregationPart{root.Struct()}, err
}

func (s Grid_AggregationPart) String() string {
	str, _ := text.Marshal(0xac444617ef333a1d, s.Struct)
	return str
}

func (s Grid_AggregationPart) Value() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_AggregationPart) HasValue() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_AggregationPart) SetValue(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewValue sets the value field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_AggregationPart) NewValue() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_AggregationPart) RowCol() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_AggregationPart) HasRowCol() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_AggregationPart) SetRowCol(v Grid_RowCol) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewRowCol sets the rowCol field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_AggregationPart) NewRowCol() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_AggregationPart) AreaFrac() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Grid_AggregationPart) SetAreaFrac(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Grid_AggregationPart) IValue() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Grid_AggregationPart) SetIValue(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// Grid_AggregationPart_List is a list of Grid_AggregationPart.
type Grid_AggregationPart_List struct{ capnp.List }

// NewGrid_AggregationPart creates a new list of Grid_AggregationPart.
func NewGrid_AggregationPart_List(s *capnp.Segment, sz int32) (Grid_AggregationPart_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return Grid_AggregationPart_List{l}, err
}

func (s Grid_AggregationPart_List) At(i int) Grid_AggregationPart {
	return Grid_AggregationPart{s.List.Struct(i)}
}

func (s Grid_AggregationPart_List) Set(i int, v Grid_AggregationPart) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_AggregationPart_List) String() string {
	str, _ := text.MarshalList(0xac444617ef333a1d, s.List)
	return str
}

// Grid_AggregationPart_Future is a wrapper for a Grid_AggregationPart promised by a client call.
type Grid_AggregationPart_Future struct{ *capnp.Future }

func (p Grid_AggregationPart_Future) Struct() (Grid_AggregationPart, error) {
	s, err := p.Future.Struct()
	return Grid_AggregationPart{s}, err
}

func (p Grid_AggregationPart_Future) Value() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_AggregationPart_Future) RowCol() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(1, nil)}
}

type Grid_Callback struct{ Client *capnp.Client }

// Grid_Callback_TypeID is the unique identifier for the type Grid_Callback.
const Grid_Callback_TypeID = 0xd639518280cb55d3

func (c Grid_Callback) SendCells(ctx context.Context, params func(Grid_Callback_sendCells_Params) error) (Grid_Callback_sendCells_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xd639518280cb55d3,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid.Callback",
			MethodName:    "sendCells",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Grid_Callback_sendCells_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Grid_Callback_sendCells_Results_Future{Future: ans.Future()}, release
}

func (c Grid_Callback) AddRef() Grid_Callback {
	return Grid_Callback{
		Client: c.Client.AddRef(),
	}
}

func (c Grid_Callback) Release() {
	c.Client.Release()
}

// A Grid_Callback_Server is a Grid_Callback with a local implementation.
type Grid_Callback_Server interface {
	SendCells(context.Context, Grid_Callback_sendCells) error
}

// Grid_Callback_NewServer creates a new Server from an implementation of Grid_Callback_Server.
func Grid_Callback_NewServer(s Grid_Callback_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Grid_Callback_Methods(nil, s), s, c, policy)
}

// Grid_Callback_ServerToClient creates a new Client from an implementation of Grid_Callback_Server.
// The caller is responsible for calling Release on the returned Client.
func Grid_Callback_ServerToClient(s Grid_Callback_Server, policy *server.Policy) Grid_Callback {
	return Grid_Callback{Client: capnp.NewClient(Grid_Callback_NewServer(s, policy))}
}

// Grid_Callback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Grid_Callback_Methods(methods []server.Method, s Grid_Callback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xd639518280cb55d3,
			MethodID:      0,
			InterfaceName: "grid.capnp:Grid.Callback",
			MethodName:    "sendCells",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.SendCells(ctx, Grid_Callback_sendCells{call})
		},
	})

	return methods
}

// Grid_Callback_sendCells holds the state for a server call to Grid_Callback.sendCells.
// See server.Call for documentation.
type Grid_Callback_sendCells struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Grid_Callback_sendCells) Args() Grid_Callback_sendCells_Params {
	return Grid_Callback_sendCells_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Grid_Callback_sendCells) AllocResults() (Grid_Callback_sendCells_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{Struct: r}, err
}

type Grid_Callback_sendCells_Params struct{ capnp.Struct }

// Grid_Callback_sendCells_Params_TypeID is the unique identifier for the type Grid_Callback_sendCells_Params.
const Grid_Callback_sendCells_Params_TypeID = 0xe9b0c7718f68f6bb

func NewGrid_Callback_sendCells_Params(s *capnp.Segment) (Grid_Callback_sendCells_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_Callback_sendCells_Params{st}, err
}

func NewRootGrid_Callback_sendCells_Params(s *capnp.Segment) (Grid_Callback_sendCells_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_Callback_sendCells_Params{st}, err
}

func ReadRootGrid_Callback_sendCells_Params(msg *capnp.Message) (Grid_Callback_sendCells_Params, error) {
	root, err := msg.Root()
	return Grid_Callback_sendCells_Params{root.Struct()}, err
}

func (s Grid_Callback_sendCells_Params) String() string {
	str, _ := text.Marshal(0xe9b0c7718f68f6bb, s.Struct)
	return str
}

func (s Grid_Callback_sendCells_Params) Cells() (Grid_RowCol_List, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_RowCol_List{List: p.List()}, err
}

func (s Grid_Callback_sendCells_Params) HasCells() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_Callback_sendCells_Params) SetCells(v Grid_RowCol_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCells sets the cells field to a newly
// allocated Grid_RowCol_List, preferring placement in s's segment.
func (s Grid_Callback_sendCells_Params) NewCells(n int32) (Grid_RowCol_List, error) {
	l, err := NewGrid_RowCol_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_RowCol_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Grid_Callback_sendCells_Params_List is a list of Grid_Callback_sendCells_Params.
type Grid_Callback_sendCells_Params_List struct{ capnp.List }

// NewGrid_Callback_sendCells_Params creates a new list of Grid_Callback_sendCells_Params.
func NewGrid_Callback_sendCells_Params_List(s *capnp.Segment, sz int32) (Grid_Callback_sendCells_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Grid_Callback_sendCells_Params_List{l}, err
}

func (s Grid_Callback_sendCells_Params_List) At(i int) Grid_Callback_sendCells_Params {
	return Grid_Callback_sendCells_Params{s.List.Struct(i)}
}

func (s Grid_Callback_sendCells_Params_List) Set(i int, v Grid_Callback_sendCells_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_Callback_sendCells_Params_List) String() string {
	str, _ := text.MarshalList(0xe9b0c7718f68f6bb, s.List)
	return str
}

// Grid_Callback_sendCells_Params_Future is a wrapper for a Grid_Callback_sendCells_Params promised by a client call.
type Grid_Callback_sendCells_Params_Future struct{ *capnp.Future }

func (p Grid_Callback_sendCells_Params_Future) Struct() (Grid_Callback_sendCells_Params, error) {
	s, err := p.Future.Struct()
	return Grid_Callback_sendCells_Params{s}, err
}

type Grid_Callback_sendCells_Results struct{ capnp.Struct }

// Grid_Callback_sendCells_Results_TypeID is the unique identifier for the type Grid_Callback_sendCells_Results.
const Grid_Callback_sendCells_Results_TypeID = 0x8e536f6e598b2579

func NewGrid_Callback_sendCells_Results(s *capnp.Segment) (Grid_Callback_sendCells_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{st}, err
}

func NewRootGrid_Callback_sendCells_Results(s *capnp.Segment) (Grid_Callback_sendCells_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_Callback_sendCells_Results{st}, err
}

func ReadRootGrid_Callback_sendCells_Results(msg *capnp.Message) (Grid_Callback_sendCells_Results, error) {
	root, err := msg.Root()
	return Grid_Callback_sendCells_Results{root.Struct()}, err
}

func (s Grid_Callback_sendCells_Results) String() string {
	str, _ := text.Marshal(0x8e536f6e598b2579, s.Struct)
	return str
}

// Grid_Callback_sendCells_Results_List is a list of Grid_Callback_sendCells_Results.
type Grid_Callback_sendCells_Results_List struct{ capnp.List }

// NewGrid_Callback_sendCells_Results creates a new list of Grid_Callback_sendCells_Results.
func NewGrid_Callback_sendCells_Results_List(s *capnp.Segment, sz int32) (Grid_Callback_sendCells_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_Callback_sendCells_Results_List{l}, err
}

func (s Grid_Callback_sendCells_Results_List) At(i int) Grid_Callback_sendCells_Results {
	return Grid_Callback_sendCells_Results{s.List.Struct(i)}
}

func (s Grid_Callback_sendCells_Results_List) Set(i int, v Grid_Callback_sendCells_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_Callback_sendCells_Results_List) String() string {
	str, _ := text.MarshalList(0x8e536f6e598b2579, s.List)
	return str
}

// Grid_Callback_sendCells_Results_Future is a wrapper for a Grid_Callback_sendCells_Results promised by a client call.
type Grid_Callback_sendCells_Results_Future struct{ *capnp.Future }

func (p Grid_Callback_sendCells_Results_Future) Struct() (Grid_Callback_sendCells_Results, error) {
	s, err := p.Future.Struct()
	return Grid_Callback_sendCells_Results{s}, err
}

type Grid_closestValueAt_Params struct{ capnp.Struct }

// Grid_closestValueAt_Params_TypeID is the unique identifier for the type Grid_closestValueAt_Params.
const Grid_closestValueAt_Params_TypeID = 0xeb7e6f1c610c079a

func NewGrid_closestValueAt_Params(s *capnp.Segment) (Grid_closestValueAt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Grid_closestValueAt_Params{st}, err
}

func NewRootGrid_closestValueAt_Params(s *capnp.Segment) (Grid_closestValueAt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Grid_closestValueAt_Params{st}, err
}

func ReadRootGrid_closestValueAt_Params(msg *capnp.Message) (Grid_closestValueAt_Params, error) {
	root, err := msg.Root()
	return Grid_closestValueAt_Params{root.Struct()}, err
}

func (s Grid_closestValueAt_Params) String() string {
	str, _ := text.Marshal(0xeb7e6f1c610c079a, s.Struct)
	return str
}

func (s Grid_closestValueAt_Params) LatlonCoord() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(0)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Params) HasLatlonCoord() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_closestValueAt_Params) SetLatlonCoord(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewLatlonCoord sets the latlonCoord field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Params) NewLatlonCoord() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Params) IgnoreNoData() bool {
	return !s.Struct.Bit(0)
}

func (s Grid_closestValueAt_Params) SetIgnoreNoData(v bool) {
	s.Struct.SetBit(0, !v)
}

func (s Grid_closestValueAt_Params) Resolution() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_closestValueAt_Params) SetResolution(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Grid_closestValueAt_Params) Agg() Aggregation {
	return Aggregation(s.Struct.Uint16(2))
}

func (s Grid_closestValueAt_Params) SetAgg(v Aggregation) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Grid_closestValueAt_Params) ReturnRowCols() bool {
	return s.Struct.Bit(1)
}

func (s Grid_closestValueAt_Params) SetReturnRowCols(v bool) {
	s.Struct.SetBit(1, v)
}

func (s Grid_closestValueAt_Params) IncludeAggParts() bool {
	return s.Struct.Bit(2)
}

func (s Grid_closestValueAt_Params) SetIncludeAggParts(v bool) {
	s.Struct.SetBit(2, v)
}

// Grid_closestValueAt_Params_List is a list of Grid_closestValueAt_Params.
type Grid_closestValueAt_Params_List struct{ capnp.List }

// NewGrid_closestValueAt_Params creates a new list of Grid_closestValueAt_Params.
func NewGrid_closestValueAt_Params_List(s *capnp.Segment, sz int32) (Grid_closestValueAt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Grid_closestValueAt_Params_List{l}, err
}

func (s Grid_closestValueAt_Params_List) At(i int) Grid_closestValueAt_Params {
	return Grid_closestValueAt_Params{s.List.Struct(i)}
}

func (s Grid_closestValueAt_Params_List) Set(i int, v Grid_closestValueAt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_closestValueAt_Params_List) String() string {
	str, _ := text.MarshalList(0xeb7e6f1c610c079a, s.List)
	return str
}

// Grid_closestValueAt_Params_Future is a wrapper for a Grid_closestValueAt_Params promised by a client call.
type Grid_closestValueAt_Params_Future struct{ *capnp.Future }

func (p Grid_closestValueAt_Params_Future) Struct() (Grid_closestValueAt_Params, error) {
	s, err := p.Future.Struct()
	return Grid_closestValueAt_Params{s}, err
}

func (p Grid_closestValueAt_Params_Future) LatlonCoord() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(0, nil)}
}

type Grid_closestValueAt_Results struct{ capnp.Struct }

// Grid_closestValueAt_Results_TypeID is the unique identifier for the type Grid_closestValueAt_Results.
const Grid_closestValueAt_Results_TypeID = 0xa8bd0263833540b0

func NewGrid_closestValueAt_Results(s *capnp.Segment) (Grid_closestValueAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{st}, err
}

func NewRootGrid_closestValueAt_Results(s *capnp.Segment) (Grid_closestValueAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_closestValueAt_Results{st}, err
}

func ReadRootGrid_closestValueAt_Results(msg *capnp.Message) (Grid_closestValueAt_Results, error) {
	root, err := msg.Root()
	return Grid_closestValueAt_Results{root.Struct()}, err
}

func (s Grid_closestValueAt_Results) String() string {
	str, _ := text.Marshal(0xa8bd0263833540b0, s.Struct)
	return str
}

func (s Grid_closestValueAt_Results) Val() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasVal() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_closestValueAt_Results) SetVal(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVal sets the val field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewVal() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) Tl() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasTl() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_closestValueAt_Results) SetTl(v Grid_RowCol) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewTl sets the tl field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewTl() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) Br() (Grid_RowCol, error) {
	p, err := s.Struct.Ptr(2)
	return Grid_RowCol{Struct: p.Struct()}, err
}

func (s Grid_closestValueAt_Results) HasBr() bool {
	return s.Struct.HasPtr(2)
}

func (s Grid_closestValueAt_Results) SetBr(v Grid_RowCol) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewBr sets the br field to a newly
// allocated Grid_RowCol struct, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewBr() (Grid_RowCol, error) {
	ss, err := NewGrid_RowCol(s.Struct.Segment())
	if err != nil {
		return Grid_RowCol{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_closestValueAt_Results) AggParts() (Grid_AggregationPart_List, error) {
	p, err := s.Struct.Ptr(3)
	return Grid_AggregationPart_List{List: p.List()}, err
}

func (s Grid_closestValueAt_Results) HasAggParts() bool {
	return s.Struct.HasPtr(3)
}

func (s Grid_closestValueAt_Results) SetAggParts(v Grid_AggregationPart_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewAggParts sets the aggParts field to a newly
// allocated Grid_AggregationPart_List, preferring placement in s's segment.
func (s Grid_closestValueAt_Results) NewAggParts(n int32) (Grid_AggregationPart_List, error) {
	l, err := NewGrid_AggregationPart_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_AggregationPart_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// Grid_closestValueAt_Results_List is a list of Grid_closestValueAt_Results.
type Grid_closestValueAt_Results_List struct{ capnp.List }

// NewGrid_closestValueAt_Results creates a new list of Grid_closestValueAt_Results.
func NewGrid_closestValueAt_Results_List(s *capnp.Segment, sz int32) (Grid_closestValueAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Grid_closestValueAt_Results_List{l}, err
}

func (s Grid_closestValueAt_Results_List) At(i int) Grid_closestValueAt_Results {
	return Grid_closestValueAt_Results{s.List.Struct(i)}
}

func (s Grid_closestValueAt_Results_List) Set(i int, v Grid_closestValueAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_closestValueAt_Results_List) String() string {
	str, _ := text.MarshalList(0xa8bd0263833540b0, s.List)
	return str
}

// Grid_closestValueAt_Results_Future is a wrapper for a Grid_closestValueAt_Results promised by a client call.
type Grid_closestValueAt_Results_Future struct{ *capnp.Future }

func (p Grid_closestValueAt_Results_Future) Struct() (Grid_closestValueAt_Results, error) {
	s, err := p.Future.Struct()
	return Grid_closestValueAt_Results{s}, err
}

func (p Grid_closestValueAt_Results_Future) Val() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_closestValueAt_Results_Future) Tl() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(1, nil)}
}

func (p Grid_closestValueAt_Results_Future) Br() Grid_RowCol_Future {
	return Grid_RowCol_Future{Future: p.Future.Field(2, nil)}
}

type Grid_resolution_Params struct{ capnp.Struct }

// Grid_resolution_Params_TypeID is the unique identifier for the type Grid_resolution_Params.
const Grid_resolution_Params_TypeID = 0xf79edcb97e1e2deb

func NewGrid_resolution_Params(s *capnp.Segment) (Grid_resolution_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_resolution_Params{st}, err
}

func NewRootGrid_resolution_Params(s *capnp.Segment) (Grid_resolution_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_resolution_Params{st}, err
}

func ReadRootGrid_resolution_Params(msg *capnp.Message) (Grid_resolution_Params, error) {
	root, err := msg.Root()
	return Grid_resolution_Params{root.Struct()}, err
}

func (s Grid_resolution_Params) String() string {
	str, _ := text.Marshal(0xf79edcb97e1e2deb, s.Struct)
	return str
}

// Grid_resolution_Params_List is a list of Grid_resolution_Params.
type Grid_resolution_Params_List struct{ capnp.List }

// NewGrid_resolution_Params creates a new list of Grid_resolution_Params.
func NewGrid_resolution_Params_List(s *capnp.Segment, sz int32) (Grid_resolution_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_resolution_Params_List{l}, err
}

func (s Grid_resolution_Params_List) At(i int) Grid_resolution_Params {
	return Grid_resolution_Params{s.List.Struct(i)}
}

func (s Grid_resolution_Params_List) Set(i int, v Grid_resolution_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_resolution_Params_List) String() string {
	str, _ := text.MarshalList(0xf79edcb97e1e2deb, s.List)
	return str
}

// Grid_resolution_Params_Future is a wrapper for a Grid_resolution_Params promised by a client call.
type Grid_resolution_Params_Future struct{ *capnp.Future }

func (p Grid_resolution_Params_Future) Struct() (Grid_resolution_Params, error) {
	s, err := p.Future.Struct()
	return Grid_resolution_Params{s}, err
}

type Grid_resolution_Results struct{ capnp.Struct }

// Grid_resolution_Results_TypeID is the unique identifier for the type Grid_resolution_Results.
const Grid_resolution_Results_TypeID = 0x8cd7ba490778c79a

func NewGrid_resolution_Results(s *capnp.Segment) (Grid_resolution_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{st}, err
}

func NewRootGrid_resolution_Results(s *capnp.Segment) (Grid_resolution_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_resolution_Results{st}, err
}

func ReadRootGrid_resolution_Results(msg *capnp.Message) (Grid_resolution_Results, error) {
	root, err := msg.Root()
	return Grid_resolution_Results{root.Struct()}, err
}

func (s Grid_resolution_Results) String() string {
	str, _ := text.Marshal(0x8cd7ba490778c79a, s.Struct)
	return str
}

func (s Grid_resolution_Results) Res() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_resolution_Results) SetRes(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Grid_resolution_Results_List is a list of Grid_resolution_Results.
type Grid_resolution_Results_List struct{ capnp.List }

// NewGrid_resolution_Results creates a new list of Grid_resolution_Results.
func NewGrid_resolution_Results_List(s *capnp.Segment, sz int32) (Grid_resolution_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Grid_resolution_Results_List{l}, err
}

func (s Grid_resolution_Results_List) At(i int) Grid_resolution_Results {
	return Grid_resolution_Results{s.List.Struct(i)}
}

func (s Grid_resolution_Results_List) Set(i int, v Grid_resolution_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_resolution_Results_List) String() string {
	str, _ := text.MarshalList(0x8cd7ba490778c79a, s.List)
	return str
}

// Grid_resolution_Results_Future is a wrapper for a Grid_resolution_Results promised by a client call.
type Grid_resolution_Results_Future struct{ *capnp.Future }

func (p Grid_resolution_Results_Future) Struct() (Grid_resolution_Results, error) {
	s, err := p.Future.Struct()
	return Grid_resolution_Results{s}, err
}

type Grid_dimension_Params struct{ capnp.Struct }

// Grid_dimension_Params_TypeID is the unique identifier for the type Grid_dimension_Params.
const Grid_dimension_Params_TypeID = 0xa6005af20cc08dbe

func NewGrid_dimension_Params(s *capnp.Segment) (Grid_dimension_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_dimension_Params{st}, err
}

func NewRootGrid_dimension_Params(s *capnp.Segment) (Grid_dimension_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_dimension_Params{st}, err
}

func ReadRootGrid_dimension_Params(msg *capnp.Message) (Grid_dimension_Params, error) {
	root, err := msg.Root()
	return Grid_dimension_Params{root.Struct()}, err
}

func (s Grid_dimension_Params) String() string {
	str, _ := text.Marshal(0xa6005af20cc08dbe, s.Struct)
	return str
}

// Grid_dimension_Params_List is a list of Grid_dimension_Params.
type Grid_dimension_Params_List struct{ capnp.List }

// NewGrid_dimension_Params creates a new list of Grid_dimension_Params.
func NewGrid_dimension_Params_List(s *capnp.Segment, sz int32) (Grid_dimension_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_dimension_Params_List{l}, err
}

func (s Grid_dimension_Params_List) At(i int) Grid_dimension_Params {
	return Grid_dimension_Params{s.List.Struct(i)}
}

func (s Grid_dimension_Params_List) Set(i int, v Grid_dimension_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_dimension_Params_List) String() string {
	str, _ := text.MarshalList(0xa6005af20cc08dbe, s.List)
	return str
}

// Grid_dimension_Params_Future is a wrapper for a Grid_dimension_Params promised by a client call.
type Grid_dimension_Params_Future struct{ *capnp.Future }

func (p Grid_dimension_Params_Future) Struct() (Grid_dimension_Params, error) {
	s, err := p.Future.Struct()
	return Grid_dimension_Params{s}, err
}

type Grid_dimension_Results struct{ capnp.Struct }

// Grid_dimension_Results_TypeID is the unique identifier for the type Grid_dimension_Results.
const Grid_dimension_Results_TypeID = 0xe7a46f6b1610256f

func NewGrid_dimension_Results(s *capnp.Segment) (Grid_dimension_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{st}, err
}

func NewRootGrid_dimension_Results(s *capnp.Segment) (Grid_dimension_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Grid_dimension_Results{st}, err
}

func ReadRootGrid_dimension_Results(msg *capnp.Message) (Grid_dimension_Results, error) {
	root, err := msg.Root()
	return Grid_dimension_Results{root.Struct()}, err
}

func (s Grid_dimension_Results) String() string {
	str, _ := text.Marshal(0xe7a46f6b1610256f, s.Struct)
	return str
}

func (s Grid_dimension_Results) Rows() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_dimension_Results) SetRows(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_dimension_Results) Cols() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_dimension_Results) SetCols(v uint64) {
	s.Struct.SetUint64(8, v)
}

// Grid_dimension_Results_List is a list of Grid_dimension_Results.
type Grid_dimension_Results_List struct{ capnp.List }

// NewGrid_dimension_Results creates a new list of Grid_dimension_Results.
func NewGrid_dimension_Results_List(s *capnp.Segment, sz int32) (Grid_dimension_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Grid_dimension_Results_List{l}, err
}

func (s Grid_dimension_Results_List) At(i int) Grid_dimension_Results {
	return Grid_dimension_Results{s.List.Struct(i)}
}

func (s Grid_dimension_Results_List) Set(i int, v Grid_dimension_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_dimension_Results_List) String() string {
	str, _ := text.MarshalList(0xe7a46f6b1610256f, s.List)
	return str
}

// Grid_dimension_Results_Future is a wrapper for a Grid_dimension_Results promised by a client call.
type Grid_dimension_Results_Future struct{ *capnp.Future }

func (p Grid_dimension_Results_Future) Struct() (Grid_dimension_Results, error) {
	s, err := p.Future.Struct()
	return Grid_dimension_Results{s}, err
}

type Grid_noDataValue_Params struct{ capnp.Struct }

// Grid_noDataValue_Params_TypeID is the unique identifier for the type Grid_noDataValue_Params.
const Grid_noDataValue_Params_TypeID = 0xf804a76f2ada54b6

func NewGrid_noDataValue_Params(s *capnp.Segment) (Grid_noDataValue_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_noDataValue_Params{st}, err
}

func NewRootGrid_noDataValue_Params(s *capnp.Segment) (Grid_noDataValue_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_noDataValue_Params{st}, err
}

func ReadRootGrid_noDataValue_Params(msg *capnp.Message) (Grid_noDataValue_Params, error) {
	root, err := msg.Root()
	return Grid_noDataValue_Params{root.Struct()}, err
}

func (s Grid_noDataValue_Params) String() string {
	str, _ := text.Marshal(0xf804a76f2ada54b6, s.Struct)
	return str
}

// Grid_noDataValue_Params_List is a list of Grid_noDataValue_Params.
type Grid_noDataValue_Params_List struct{ capnp.List }

// NewGrid_noDataValue_Params creates a new list of Grid_noDataValue_Params.
func NewGrid_noDataValue_Params_List(s *capnp.Segment, sz int32) (Grid_noDataValue_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_noDataValue_Params_List{l}, err
}

func (s Grid_noDataValue_Params_List) At(i int) Grid_noDataValue_Params {
	return Grid_noDataValue_Params{s.List.Struct(i)}
}

func (s Grid_noDataValue_Params_List) Set(i int, v Grid_noDataValue_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_noDataValue_Params_List) String() string {
	str, _ := text.MarshalList(0xf804a76f2ada54b6, s.List)
	return str
}

// Grid_noDataValue_Params_Future is a wrapper for a Grid_noDataValue_Params promised by a client call.
type Grid_noDataValue_Params_Future struct{ *capnp.Future }

func (p Grid_noDataValue_Params_Future) Struct() (Grid_noDataValue_Params, error) {
	s, err := p.Future.Struct()
	return Grid_noDataValue_Params{s}, err
}

type Grid_noDataValue_Results struct{ capnp.Struct }

// Grid_noDataValue_Results_TypeID is the unique identifier for the type Grid_noDataValue_Results.
const Grid_noDataValue_Results_TypeID = 0x9bc132bd2a1b1fcf

func NewGrid_noDataValue_Results(s *capnp.Segment) (Grid_noDataValue_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{st}, err
}

func NewRootGrid_noDataValue_Results(s *capnp.Segment) (Grid_noDataValue_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Grid_noDataValue_Results{st}, err
}

func ReadRootGrid_noDataValue_Results(msg *capnp.Message) (Grid_noDataValue_Results, error) {
	root, err := msg.Root()
	return Grid_noDataValue_Results{root.Struct()}, err
}

func (s Grid_noDataValue_Results) String() string {
	str, _ := text.Marshal(0x9bc132bd2a1b1fcf, s.Struct)
	return str
}

func (s Grid_noDataValue_Results) Nodata() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_noDataValue_Results) HasNodata() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_noDataValue_Results) SetNodata(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewNodata sets the nodata field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_noDataValue_Results) NewNodata() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Grid_noDataValue_Results_List is a list of Grid_noDataValue_Results.
type Grid_noDataValue_Results_List struct{ capnp.List }

// NewGrid_noDataValue_Results creates a new list of Grid_noDataValue_Results.
func NewGrid_noDataValue_Results_List(s *capnp.Segment, sz int32) (Grid_noDataValue_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Grid_noDataValue_Results_List{l}, err
}

func (s Grid_noDataValue_Results_List) At(i int) Grid_noDataValue_Results {
	return Grid_noDataValue_Results{s.List.Struct(i)}
}

func (s Grid_noDataValue_Results_List) Set(i int, v Grid_noDataValue_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_noDataValue_Results_List) String() string {
	str, _ := text.MarshalList(0x9bc132bd2a1b1fcf, s.List)
	return str
}

// Grid_noDataValue_Results_Future is a wrapper for a Grid_noDataValue_Results promised by a client call.
type Grid_noDataValue_Results_Future struct{ *capnp.Future }

func (p Grid_noDataValue_Results_Future) Struct() (Grid_noDataValue_Results, error) {
	s, err := p.Future.Struct()
	return Grid_noDataValue_Results{s}, err
}

func (p Grid_noDataValue_Results_Future) Nodata() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

type Grid_valueAt_Params struct{ capnp.Struct }

// Grid_valueAt_Params_TypeID is the unique identifier for the type Grid_valueAt_Params.
const Grid_valueAt_Params_TypeID = 0x948ff2bdd6e6972f

func NewGrid_valueAt_Params(s *capnp.Segment) (Grid_valueAt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Grid_valueAt_Params{st}, err
}

func NewRootGrid_valueAt_Params(s *capnp.Segment) (Grid_valueAt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0})
	return Grid_valueAt_Params{st}, err
}

func ReadRootGrid_valueAt_Params(msg *capnp.Message) (Grid_valueAt_Params, error) {
	root, err := msg.Root()
	return Grid_valueAt_Params{root.Struct()}, err
}

func (s Grid_valueAt_Params) String() string {
	str, _ := text.Marshal(0x948ff2bdd6e6972f, s.Struct)
	return str
}

func (s Grid_valueAt_Params) Row() uint64 {
	return s.Struct.Uint64(0)
}

func (s Grid_valueAt_Params) SetRow(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Grid_valueAt_Params) Col() uint64 {
	return s.Struct.Uint64(8)
}

func (s Grid_valueAt_Params) SetCol(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s Grid_valueAt_Params) Resolution() uint64 {
	return s.Struct.Uint64(16)
}

func (s Grid_valueAt_Params) SetResolution(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s Grid_valueAt_Params) Agg() Aggregation {
	return Aggregation(s.Struct.Uint16(24))
}

func (s Grid_valueAt_Params) SetAgg(v Aggregation) {
	s.Struct.SetUint16(24, uint16(v))
}

func (s Grid_valueAt_Params) IncludeAggParts() bool {
	return s.Struct.Bit(208)
}

func (s Grid_valueAt_Params) SetIncludeAggParts(v bool) {
	s.Struct.SetBit(208, v)
}

// Grid_valueAt_Params_List is a list of Grid_valueAt_Params.
type Grid_valueAt_Params_List struct{ capnp.List }

// NewGrid_valueAt_Params creates a new list of Grid_valueAt_Params.
func NewGrid_valueAt_Params_List(s *capnp.Segment, sz int32) (Grid_valueAt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 0}, sz)
	return Grid_valueAt_Params_List{l}, err
}

func (s Grid_valueAt_Params_List) At(i int) Grid_valueAt_Params {
	return Grid_valueAt_Params{s.List.Struct(i)}
}

func (s Grid_valueAt_Params_List) Set(i int, v Grid_valueAt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_valueAt_Params_List) String() string {
	str, _ := text.MarshalList(0x948ff2bdd6e6972f, s.List)
	return str
}

// Grid_valueAt_Params_Future is a wrapper for a Grid_valueAt_Params promised by a client call.
type Grid_valueAt_Params_Future struct{ *capnp.Future }

func (p Grid_valueAt_Params_Future) Struct() (Grid_valueAt_Params, error) {
	s, err := p.Future.Struct()
	return Grid_valueAt_Params{s}, err
}

type Grid_valueAt_Results struct{ capnp.Struct }

// Grid_valueAt_Results_TypeID is the unique identifier for the type Grid_valueAt_Results.
const Grid_valueAt_Results_TypeID = 0xa21ef33efc715994

func NewGrid_valueAt_Results(s *capnp.Segment) (Grid_valueAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{st}, err
}

func NewRootGrid_valueAt_Results(s *capnp.Segment) (Grid_valueAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Grid_valueAt_Results{st}, err
}

func ReadRootGrid_valueAt_Results(msg *capnp.Message) (Grid_valueAt_Results, error) {
	root, err := msg.Root()
	return Grid_valueAt_Results{root.Struct()}, err
}

func (s Grid_valueAt_Results) String() string {
	str, _ := text.Marshal(0xa21ef33efc715994, s.Struct)
	return str
}

func (s Grid_valueAt_Results) Val() (Grid_Value, error) {
	p, err := s.Struct.Ptr(0)
	return Grid_Value{Struct: p.Struct()}, err
}

func (s Grid_valueAt_Results) HasVal() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_valueAt_Results) SetVal(v Grid_Value) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVal sets the val field to a newly
// allocated Grid_Value struct, preferring placement in s's segment.
func (s Grid_valueAt_Results) NewVal() (Grid_Value, error) {
	ss, err := NewGrid_Value(s.Struct.Segment())
	if err != nil {
		return Grid_Value{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_valueAt_Results) AggParts() (Grid_AggregationPart_List, error) {
	p, err := s.Struct.Ptr(1)
	return Grid_AggregationPart_List{List: p.List()}, err
}

func (s Grid_valueAt_Results) HasAggParts() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_valueAt_Results) SetAggParts(v Grid_AggregationPart_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewAggParts sets the aggParts field to a newly
// allocated Grid_AggregationPart_List, preferring placement in s's segment.
func (s Grid_valueAt_Results) NewAggParts(n int32) (Grid_AggregationPart_List, error) {
	l, err := NewGrid_AggregationPart_List(s.Struct.Segment(), n)
	if err != nil {
		return Grid_AggregationPart_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// Grid_valueAt_Results_List is a list of Grid_valueAt_Results.
type Grid_valueAt_Results_List struct{ capnp.List }

// NewGrid_valueAt_Results creates a new list of Grid_valueAt_Results.
func NewGrid_valueAt_Results_List(s *capnp.Segment, sz int32) (Grid_valueAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Grid_valueAt_Results_List{l}, err
}

func (s Grid_valueAt_Results_List) At(i int) Grid_valueAt_Results {
	return Grid_valueAt_Results{s.List.Struct(i)}
}

func (s Grid_valueAt_Results_List) Set(i int, v Grid_valueAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_valueAt_Results_List) String() string {
	str, _ := text.MarshalList(0xa21ef33efc715994, s.List)
	return str
}

// Grid_valueAt_Results_Future is a wrapper for a Grid_valueAt_Results promised by a client call.
type Grid_valueAt_Results_Future struct{ *capnp.Future }

func (p Grid_valueAt_Results_Future) Struct() (Grid_valueAt_Results, error) {
	s, err := p.Future.Struct()
	return Grid_valueAt_Results{s}, err
}

func (p Grid_valueAt_Results_Future) Val() Grid_Value_Future {
	return Grid_Value_Future{Future: p.Future.Field(0, nil)}
}

type Grid_latLonBounds_Params struct{ capnp.Struct }

// Grid_latLonBounds_Params_TypeID is the unique identifier for the type Grid_latLonBounds_Params.
const Grid_latLonBounds_Params_TypeID = 0xf37338992466bd97

func NewGrid_latLonBounds_Params(s *capnp.Segment) (Grid_latLonBounds_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_latLonBounds_Params{st}, err
}

func NewRootGrid_latLonBounds_Params(s *capnp.Segment) (Grid_latLonBounds_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Grid_latLonBounds_Params{st}, err
}

func ReadRootGrid_latLonBounds_Params(msg *capnp.Message) (Grid_latLonBounds_Params, error) {
	root, err := msg.Root()
	return Grid_latLonBounds_Params{root.Struct()}, err
}

func (s Grid_latLonBounds_Params) String() string {
	str, _ := text.Marshal(0xf37338992466bd97, s.Struct)
	return str
}

func (s Grid_latLonBounds_Params) UseCellCenter() bool {
	return s.Struct.Bit(0)
}

func (s Grid_latLonBounds_Params) SetUseCellCenter(v bool) {
	s.Struct.SetBit(0, v)
}

// Grid_latLonBounds_Params_List is a list of Grid_latLonBounds_Params.
type Grid_latLonBounds_Params_List struct{ capnp.List }

// NewGrid_latLonBounds_Params creates a new list of Grid_latLonBounds_Params.
func NewGrid_latLonBounds_Params_List(s *capnp.Segment, sz int32) (Grid_latLonBounds_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Grid_latLonBounds_Params_List{l}, err
}

func (s Grid_latLonBounds_Params_List) At(i int) Grid_latLonBounds_Params {
	return Grid_latLonBounds_Params{s.List.Struct(i)}
}

func (s Grid_latLonBounds_Params_List) Set(i int, v Grid_latLonBounds_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_latLonBounds_Params_List) String() string {
	str, _ := text.MarshalList(0xf37338992466bd97, s.List)
	return str
}

// Grid_latLonBounds_Params_Future is a wrapper for a Grid_latLonBounds_Params promised by a client call.
type Grid_latLonBounds_Params_Future struct{ *capnp.Future }

func (p Grid_latLonBounds_Params_Future) Struct() (Grid_latLonBounds_Params, error) {
	s, err := p.Future.Struct()
	return Grid_latLonBounds_Params{s}, err
}

type Grid_latLonBounds_Results struct{ capnp.Struct }

// Grid_latLonBounds_Results_TypeID is the unique identifier for the type Grid_latLonBounds_Results.
const Grid_latLonBounds_Results_TypeID = 0xe57fce57d3443377

func NewGrid_latLonBounds_Results(s *capnp.Segment) (Grid_latLonBounds_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{st}, err
}

func NewRootGrid_latLonBounds_Results(s *capnp.Segment) (Grid_latLonBounds_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Grid_latLonBounds_Results{st}, err
}

func ReadRootGrid_latLonBounds_Results(msg *capnp.Message) (Grid_latLonBounds_Results, error) {
	root, err := msg.Root()
	return Grid_latLonBounds_Results{root.Struct()}, err
}

func (s Grid_latLonBounds_Results) String() string {
	str, _ := text.Marshal(0xe57fce57d3443377, s.Struct)
	return str
}

func (s Grid_latLonBounds_Results) Tl() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(0)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasTl() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_latLonBounds_Results) SetTl(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewTl sets the tl field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewTl() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Tr() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(1)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasTr() bool {
	return s.Struct.HasPtr(1)
}

func (s Grid_latLonBounds_Results) SetTr(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewTr sets the tr field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewTr() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Br() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(2)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasBr() bool {
	return s.Struct.HasPtr(2)
}

func (s Grid_latLonBounds_Results) SetBr(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewBr sets the br field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewBr() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Grid_latLonBounds_Results) Bl() (geo.LatLonCoord, error) {
	p, err := s.Struct.Ptr(3)
	return geo.LatLonCoord{Struct: p.Struct()}, err
}

func (s Grid_latLonBounds_Results) HasBl() bool {
	return s.Struct.HasPtr(3)
}

func (s Grid_latLonBounds_Results) SetBl(v geo.LatLonCoord) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewBl sets the bl field to a newly
// allocated geo.LatLonCoord struct, preferring placement in s's segment.
func (s Grid_latLonBounds_Results) NewBl() (geo.LatLonCoord, error) {
	ss, err := geo.NewLatLonCoord(s.Struct.Segment())
	if err != nil {
		return geo.LatLonCoord{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

// Grid_latLonBounds_Results_List is a list of Grid_latLonBounds_Results.
type Grid_latLonBounds_Results_List struct{ capnp.List }

// NewGrid_latLonBounds_Results creates a new list of Grid_latLonBounds_Results.
func NewGrid_latLonBounds_Results_List(s *capnp.Segment, sz int32) (Grid_latLonBounds_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Grid_latLonBounds_Results_List{l}, err
}

func (s Grid_latLonBounds_Results_List) At(i int) Grid_latLonBounds_Results {
	return Grid_latLonBounds_Results{s.List.Struct(i)}
}

func (s Grid_latLonBounds_Results_List) Set(i int, v Grid_latLonBounds_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_latLonBounds_Results_List) String() string {
	str, _ := text.MarshalList(0xe57fce57d3443377, s.List)
	return str
}

// Grid_latLonBounds_Results_Future is a wrapper for a Grid_latLonBounds_Results promised by a client call.
type Grid_latLonBounds_Results_Future struct{ *capnp.Future }

func (p Grid_latLonBounds_Results_Future) Struct() (Grid_latLonBounds_Results, error) {
	s, err := p.Future.Struct()
	return Grid_latLonBounds_Results{s}, err
}

func (p Grid_latLonBounds_Results_Future) Tl() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(0, nil)}
}

func (p Grid_latLonBounds_Results_Future) Tr() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(1, nil)}
}

func (p Grid_latLonBounds_Results_Future) Br() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(2, nil)}
}

func (p Grid_latLonBounds_Results_Future) Bl() geo.LatLonCoord_Future {
	return geo.LatLonCoord_Future{Future: p.Future.Field(3, nil)}
}

type Grid_streamCells_Params struct{ capnp.Struct }

// Grid_streamCells_Params_TypeID is the unique identifier for the type Grid_streamCells_Params.
const Grid_streamCells_Params_TypeID = 0xd9add1b3fdcfdbba

func NewGrid_streamCells_Params(s *capnp.Segment) (Grid_streamCells_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Grid_streamCells_Params{st}, err
}

func NewRootGrid_streamCells_Params(s *capnp.Segment) (Grid_streamCells_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Grid_streamCells_Params{st}, err
}

func ReadRootGrid_streamCells_Params(msg *capnp.Message) (Grid_streamCells_Params, error) {
	root, err := msg.Root()
	return Grid_streamCells_Params{root.Struct()}, err
}

func (s Grid_streamCells_Params) String() string {
	str, _ := text.Marshal(0xd9add1b3fdcfdbba, s.Struct)
	return str
}

func (s Grid_streamCells_Params) Callback() Grid_Callback {
	p, _ := s.Struct.Ptr(0)
	return Grid_Callback{Client: p.Interface().Client()}
}

func (s Grid_streamCells_Params) HasCallback() bool {
	return s.Struct.HasPtr(0)
}

func (s Grid_streamCells_Params) SetCallback(v Grid_Callback) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s Grid_streamCells_Params) MaxNoOfCellsPerSend() uint64 {
	return s.Struct.Uint64(0) ^ 100
}

func (s Grid_streamCells_Params) SetMaxNoOfCellsPerSend(v uint64) {
	s.Struct.SetUint64(0, v^100)
}

// Grid_streamCells_Params_List is a list of Grid_streamCells_Params.
type Grid_streamCells_Params_List struct{ capnp.List }

// NewGrid_streamCells_Params creates a new list of Grid_streamCells_Params.
func NewGrid_streamCells_Params_List(s *capnp.Segment, sz int32) (Grid_streamCells_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Grid_streamCells_Params_List{l}, err
}

func (s Grid_streamCells_Params_List) At(i int) Grid_streamCells_Params {
	return Grid_streamCells_Params{s.List.Struct(i)}
}

func (s Grid_streamCells_Params_List) Set(i int, v Grid_streamCells_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_streamCells_Params_List) String() string {
	str, _ := text.MarshalList(0xd9add1b3fdcfdbba, s.List)
	return str
}

// Grid_streamCells_Params_Future is a wrapper for a Grid_streamCells_Params promised by a client call.
type Grid_streamCells_Params_Future struct{ *capnp.Future }

func (p Grid_streamCells_Params_Future) Struct() (Grid_streamCells_Params, error) {
	s, err := p.Future.Struct()
	return Grid_streamCells_Params{s}, err
}

func (p Grid_streamCells_Params_Future) Callback() Grid_Callback {
	return Grid_Callback{Client: p.Future.Field(0, nil).Client()}
}

type Grid_streamCells_Results struct{ capnp.Struct }

// Grid_streamCells_Results_TypeID is the unique identifier for the type Grid_streamCells_Results.
const Grid_streamCells_Results_TypeID = 0x9b8dd52b78a7ebd2

func NewGrid_streamCells_Results(s *capnp.Segment) (Grid_streamCells_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{st}, err
}

func NewRootGrid_streamCells_Results(s *capnp.Segment) (Grid_streamCells_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Grid_streamCells_Results{st}, err
}

func ReadRootGrid_streamCells_Results(msg *capnp.Message) (Grid_streamCells_Results, error) {
	root, err := msg.Root()
	return Grid_streamCells_Results{root.Struct()}, err
}

func (s Grid_streamCells_Results) String() string {
	str, _ := text.Marshal(0x9b8dd52b78a7ebd2, s.Struct)
	return str
}

// Grid_streamCells_Results_List is a list of Grid_streamCells_Results.
type Grid_streamCells_Results_List struct{ capnp.List }

// NewGrid_streamCells_Results creates a new list of Grid_streamCells_Results.
func NewGrid_streamCells_Results_List(s *capnp.Segment, sz int32) (Grid_streamCells_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Grid_streamCells_Results_List{l}, err
}

func (s Grid_streamCells_Results_List) At(i int) Grid_streamCells_Results {
	return Grid_streamCells_Results{s.List.Struct(i)}
}

func (s Grid_streamCells_Results_List) Set(i int, v Grid_streamCells_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Grid_streamCells_Results_List) String() string {
	str, _ := text.MarshalList(0x9b8dd52b78a7ebd2, s.List)
	return str
}

// Grid_streamCells_Results_Future is a wrapper for a Grid_streamCells_Results promised by a client call.
type Grid_streamCells_Results_Future struct{ *capnp.Future }

func (p Grid_streamCells_Results_Future) Struct() (Grid_streamCells_Results, error) {
	s, err := p.Future.Struct()
	return Grid_streamCells_Results{s}, err
}

const schema_d373e9739460aa23 = "x\xda\xa4Vo\x8c\x14g\x19\x7f\x9e\xf7\xdden\xef" +
	"v\x99{\xd9E\xdb\xb3\xf6\x12<\xa2\x9c\x82\xf4\xae\x1a" +
	"{\x1f\xdc\xbd\x1e\x96B\xbcz\xef\xe1\xb59\"I\xe7" +
	"v\x87e\xda\xd9\x19\x98\xd9\xbd=\x8c\x16\xc1V\xdb\xe8" +
	"II\xd0JmLij)\x06c\xa1\xad)\xe8i" +
	"\xfbET\x8c-\x92\xb6R\xf9\xa4\"!\xd4\x98\xb6\xf1" +
	"_\xa5\x1d\xf3\xcc\xee;\xb3\xc7\xad\x10\xd2/;\xb3\xef" +
	"\xfb\xcc\xf3\xbe\xbf\xe7\xf7\xfc\xf9\xad\xfeZ\xb2\xc0nH" +
	"\xbe\xaa\x03\xc8\xe7\x92\x8b\x82\x87\x8f\xcfh\xeb\x8e\xbd\xfa" +
	"M\x90\xdd\x88\x00\x09\x0d`\xf0\xa4\xd6\x83\x80\xd9\xd3Z" +
	"\x1e0\xd8\xbe\xfc\x1b\x93\x8e\xbb\xe1[ \xaeU\xfb\xff" +
	"\xd16\"$\x82\x8f?\xf4\xd7W\xe6\xde\xdc\xbd\x97>" +
	"M4\xb6\xb2g\xb5\xb7\x01\x07\xcfk\xbd\x08\x18\xfc\xfe" +
	"\xc2\x81\x99\x8f\xbe<\xfb=\x10\xdd\xeaSL-\xa3O" +
	"_\xec\xfd@\xff\xdc\xc0\x0b\xcd\x9d$\xd2\xd6\xf9\x8ee" +
	"t\xea\x1b\x1dt\xea\xde\xc9m\x17?\xfd\xd6\xf5\x8f5" +
	"\x0d\x18\x19\x88\x14#\x83\xa5\xa9:`\x80O?Q\xae" +
	"\x9fy\xfd\x07 \xbaX\xf0\xa1\x1f\xde\xb9\xd7?\xef\x9f" +
	"\x02\xc0\xec}\xa9c\xd9\xd9\x14\xd9?\x90\xfa:\x02\xfe" +
	"\xe2\xe7\xb3\xcf\xa7\xdf\xdc\xf8D|\x87Jg'\xdd\xe1" +
	"\xa9\xc2'\xbeZdsO6\x8f\x08\xb7&:\x87\xe8" +
	"\x88M\x9d\xe7\x00\x83\x0f\x0e\x0d\xfe\xfd\xfd\xb7\xac9D" +
	"\xf8X\xf0\xcb?\x1b\xdf9\xe2\xaf\xf8K\xf32\x9f\xe9" +
	"b\x98\x95]\x84y\xb4\x8b\xac\x83ES\x1d\x9b\xfe\xf0" +
	"\xa7\xa3\x97X\x87QY\x9e>\x96]\x99\xa6\xb7\x15i" +
	"\xba\xfc\xa9\x89\x13_\xd9%oz\x05D7\x8fM\xe9" +
	"\xf2\xe9\xdfd\xf7\x84\x86\xb3\xe9\xb5\xd9\xa3\xf4\x16\x1c\xfb" +
	"\xe3\x8b\xef<}\xf2G\xa7\x9b\x0c5\x82\xb5?\x1dR" +
	"t0t\x17y\x10]|^,DfWvif" +
	"-\xc0\xe0\xba\xccq\xccn_\xfca\x80\xa0>\xb8\xe6" +
	"\xd4\x1d\xbf\xdbq\xb6\x15\xf7\xb6\xc5\xfd\xe4n\xfbbB" +
	"\xe2.\xef~\xdf\xdd\xee\xe3\xe7B$\xcd\x98\x8d\xeaK" +
	"\xc8`B\xa7\xf3~\xfa\xcf-\xbb\xb7\x1d\x7f\xea|#" +
	"%\x1a\x17:\xac\x8f\x93\xc1\x9cN\xec=\xac\xa5\x8d\xeb" +
	"\xdc{.4=4,\xfe\xa6\x0f \xe0\xe0?\xf4;" +
	"(7\x1e\x9a\xdb\xdc\xb7\xefS\xfe[\xady7!\xc2" +
	"\x0c\xd8$\xc8\xc7\x85\x95\xd7\xdfs\xf4\xcc\xf7\xff\xd5\x92" +
	"<;\xc5\x12\"\xee'\x9f\x7f\xad\xdf=\x90\xf8w\xcb" +
	"\x8e%zh\xe7\xa5\xd3\xfe\xd9\xb73\xab\xde\xbd\x84\x83" +
	"5Z\x02\x13Y)\x8ed'\x05\xc5vB\x9c\x83\x00" +
	"RA\xd9\xb3J\xab\x8a\xc6V\xeel\x1dZK\xef\x9e" +
	"\xe9\xbbv\xadj\xb9N\xdf\xb8\xe9\xd7l^\xf5e\x82" +
	"Sn#\x80\xc8,\x03\x90\x1d\x1ce\x8e\xa1\xe6\x99>" +
	"\xa6\x80a\x0a0\xf2\x93P~F\x0c\xdb\x9e2\x8aw" +
	"\xaf\xf2M\xa74b\xda\xb6\x1f\xf9\x8b\x8c\x992\x9e6" +
	"\xec\x9a9\\\xed\xcb\x8f\x19\x9eQ\xf1e.:\xf0\xcb" +
	"t\xe0\x0cGy/C\x81\x98\xa3@\x89\x9d\xb4\xf8%" +
	"\x8e\xf2~\x86\x82\xb1\x1c\x05X\xdc\xb7\x11@\xde\xcbQ" +
	">\xc8P\xf0t\x0e9\xa2\x98%\xcb\xfb9\xca\xbd\x0c" +
	"E\xe2\xa5\x1c&\x10\xc5\x9e]\x00\xf2A\x8e\xf2\x11\x02" +
	"\xe1\xd6\x15\x08\xad\xe8\xda\x11 \x15\x07\xe0\xae\x13\x19\x18" +
	"\xe52\xeaq\xdd\x01\xa2\x0e\x18XN\xd1\xae\x95\xcca" +
	",\x97\xc7\x0c\xaf\xea\x03\"0\xc4\x96\xa8D\xd1\xf5\xab" +
	"\x9eiT\xe2phvK8\"+\xc7]cT\x8d" +
	"\xdb)(\x91U+\x09C1\x09y\xc7-\x19U\x03" +
	"\xbbc\xe2\x01\xb1\xbb\xdd\xd9*\xc8!\x0dU\x9f\\(" +
	"\x8f+(L}\x1c\xe5\xea\x96(\xaf\\\x0f ?\xc6" +
	"Q\xde\xcaP\x9b6\xec6g\x18\x0a1\x00.\x06\x1c" +
	"\xe3\x88\xddq\xcf\x00\xa4\xc5\xe8\"\xe8l\x1d\x1a.\x97" +
	"=3_6(\xbf\xc6\x10e!\xa4\xeeh?\x002" +
	"q\x98\x1eIq\xf0f\x00\xd4\xc4\xfee\x00\xd8)\xf6" +
	"\xd1##\xf6\xd0\x83\x8b\x07\xc8d\x91\xd8I&(\xb6" +
	"\xd3bBl\x1b\xa2\xe3\x85E{\xba0\xe8\xd1!&" +
	"\xe9\x91\x12\x92\x1e]b\x1d=\xd2b\xb8\x1f@w\\" +
	"\xc7\xd4\xeb\xc3\xd3\xe5\x1d\xf5Q\xb3d\x19\x8eV\xb1\x1c" +
	"\xadb\xcch~\xad\xa2[\xb4a57\x8c\xe9r\xbe" +
	"\x12\xbe\xea\xf5\x0d\xb4I?\xf5Q\xcb\xd1-\xfa\xa9\x8f" +
	"\x1a3\xba5j\xcc,\x0cv\xc9\xaa\x98\x8eOU\xd4" +
	"Hi\x80\x856E\xdb\xf5M\xbfz\xbb\xe2%\xdf " +
	"FvG\xbc\x18\xc4\xcb\x178\xca--\xbc\x98=\x00" +
	"\xf2N\x8e\xd2n\xc9~\x8b\x16K\x1c\xe5V\xca~\x9e" +
	"C\x0e *\xc4\xa0\xdd\xa8\x93\xf6\x0c\xf2*-F}" +
	"\xbb\xb98\xe5-\\\xbc:\xae#\x8c!\xe1M\xbe\x0d" +
	"\xaf\x0aDz\x0b\xbe\x81v\xf8\x86b|\xa8\xe0\x11\x92" +
	"-\x1ce\x95\xe0a\x03\x1e\xf1\x1e\xc2\x9ba\xd8\x1bf" +
	"\xf7B\x80y\xcf\xad\x8f\xb8v;<\x9ei\xdc\xe2\x19" +
	"E\xc2\xd3\x05\x0c\xbb\x00\xf3V\xc8\x85\xfa;/sC" +
	"4\xf9\xf1\xd0\x1b\x81\xb8R\xf1\xd0\xe2G8\xca\x1b/" +
	"\xd3c\x16\xf4A\xd54!\x8cS\x82'\x01\xa2I\x83" +
	"J\x85\x081\x0eL\xa4\xb4@uV@\xbf\x80cx" +
	"\x85vCy\xc8+~\xeb\xc5\xd7\xc7w\x0c\xef\x8d(" +
	"nx\x0c@\xde\xc8Q\x16\x18\x06\xc5\xe8:\x80\"\x9e" +
	"\xd8Tz\x80A\xc5\x98\xb9\xcd\xfd\xdc\xe6\x11$\xf7c" +
	"\xa6\xb7A3\x9dR\x03\x1b\x96Z\xf2]E/\x1cs" +
	"1?\xe2\xda\x81\x98\x13\xb1t(\xce%!v\xb5\xc8" +
	"\x03\xb1\xbe7d\xa5\x19\xfb@e\x14S)\x15\x07M" +
	"^\x17FL\x8d^T\xf2F\x9c\xfc\"0\xf1k\x0d" +
	"Y4RQ\x89>1\xb7\x11\x98xVC\xaeTR" +
	"<\xfc\xc5A\x8a\xf4~\x0d\xe3\x81\x8bJ\xb6\x89oO" +
	"\x01\x13\xb3\x1ab$\x02Q)6\xeaOL\xd44L" +
	"F3\x1e\x95\xe4\x10\xd6]\xc0\x84\xa1\xe1\xa2H\xd5\xa0" +
	"\x12\x89b\x82|\x8ej\x81\xea\x0c\x90o\xf4\x86\xc2\xfc" +
	"yT\xc0@\xf5\x17@\xfa\xa7\x06\x06hv\xcd,\xe0" +
	"\x8e\xe9\xe83\xdb\xa8~\xd6unvA\xaf9%\xbf" +
	"\x80\x81J\x09\xd0l\xdb/\xa0\xec@\x0c^\xbe\xf5\x91" +
	"\xc9\x13'\x7f|\x04\x00\x02\xf3\xc4'\xcf<\xfa\xda\x81" +
	"\x17\xa0]\xc7R\xde\xc8\x17\xcd\x11\xfd\xd2~\xd5\xf3\xde" +
	"\xfaUO\\\xe5\x8d\xce\xf4\xdf\xdd\xbf\xbdi\xf5\xc57" +
	"^\x8f\xda\x95\xd7fq\xaa\xedb\x9b\xcf/\xd7\xa6\x1b" +
	"S\x11\xe7\xd5G\x7f\xbb\xc2\xee\x8f\x8bF\xf7\xdcz$" +
	"\x81\xf4\xa2k_\x9d\x1e\x0a'\x03\xce\x9b\xec\x03\xcd\xc9" +
	"\xde\xc7\xb0\xb7HFq\xabm\xed_m[\xed%\xe3" +
	"d\xac\xb7\xa1\xa5\xae\x89\xbc\xef\x9b\x02\x90\xdf\xe5(\x1f" +
	"\x8f\xeb}\xff]\x00\xf2Q\x8e\xf2\x10\x91\x839d\x88" +
	"\xe2 I\xa9'9\xcagT\xb7E\x14\x87\xa9\xa3\x1d" +
	"\xe2(\x9f#)\x85\x0d)\xf5\xac\x07 \x9f\xe1(\x9f" +
	"g(\x92,\x87ID1G\xfa\xeag\x1c\xe5\xafX" +
	"\x98\x80\xb6\xeb\x8c\xb8\xa0\xb9^\xa9\x0d%V\xd9q=" +
	"\xf36\x17tJaRN\xc9P:]\x85\xfe\xf2\xcc" +
	"j\xcds\xc6]\xe8\xa5\x06\xe1G\xea\xeb*t\xd9\xbc" +
	"\xc4\x1e3<\x8d\"\xd7\xe4\x05Qd\x08f\x9a\xa3\xbc" +
	"\x86aP\xf3M\xe2o\x04zM\xa7jz\xff\xdfi" +
	"\x8b\x94nR}y\xa9\xd7\xec\xd0\x0b\xc7N\xa3\x016" +
	"Gg:\x08\x1a\xb5\xb6$\xae\xb5\x0c\xbe\x1b4\x8bm" +
	"I\\l\x19\xf6N\xb0\xb0\xda2\xfcb\xb0\xb0\xdcp" +
	"\xb3\x9azha\x12\x18&\x01y\xcdR\x91\xe7\x8e\xab" +
	"p\xfe/\x00\x00\xff\xffC\x15\x111"

func init() {
	schemas.Register(schema_d373e9739460aa23,
		0x8cd7ba490778c79a,
		0x8e536f6e598b2579,
		0x948ff2bdd6e6972f,
		0x9b8dd52b78a7ebd2,
		0x9bc132bd2a1b1fcf,
		0xa21ef33efc715994,
		0xa5ecdc7767a6b301,
		0xa6005af20cc08dbe,
		0xa8bd0263833540b0,
		0xac444617ef333a1d,
		0xb9e2d85d086206ff,
		0xd639518280cb55d3,
		0xd9add1b3fdcfdbba,
		0xe42973b29661e3c6,
		0xe57fce57d3443377,
		0xe7a46f6b1610256f,
		0xe9b0c7718f68f6bb,
		0xeb7e6f1c610c079a,
		0xf37338992466bd97,
		0xf79edcb97e1e2deb,
		0xf804a76f2ada54b6,
		0xfe2e0dfae573d9d0)
}
