// Code generated by capnpc-go. DO NOT EDIT.

package persistence

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
)

const IsPersistent = uint64(0xf622595091cafb67)

type Persistent struct{ Client *capnp.Client }

// Persistent_TypeID is the unique identifier for the type Persistent.
const Persistent_TypeID = 0xc8cb212fcd9f5691

func (c Persistent) Save(ctx context.Context, params func(Persistent_SaveParams) error) (Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "persistent.capnp:Persistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(Persistent_SaveParams{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Persistent_SaveResults_Future{Future: ans.Future()}, release
}

func (c Persistent) AddRef() Persistent {
	return Persistent{
		Client: c.Client.AddRef(),
	}
}

func (c Persistent) Release() {
	c.Client.Release()
}

// A Persistent_Server is a Persistent with a local implementation.
type Persistent_Server interface {
	Save(context.Context, Persistent_save) error
}

// Persistent_NewServer creates a new Server from an implementation of Persistent_Server.
func Persistent_NewServer(s Persistent_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Persistent_Methods(nil, s), s, c, policy)
}

// Persistent_ServerToClient creates a new Client from an implementation of Persistent_Server.
// The caller is responsible for calling Release on the returned Client.
func Persistent_ServerToClient(s Persistent_Server, policy *server.Policy) Persistent {
	return Persistent{Client: capnp.NewClient(Persistent_NewServer(s, policy))}
}

// Persistent_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Persistent_Methods(methods []server.Method, s Persistent_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc8cb212fcd9f5691,
			MethodID:      0,
			InterfaceName: "persistent.capnp:Persistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, Persistent_save{call})
		},
	})

	return methods
}

// Persistent_save holds the state for a server call to Persistent.save.
// See server.Call for documentation.
type Persistent_save struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Persistent_save) Args() Persistent_SaveParams {
	return Persistent_SaveParams{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Persistent_save) AllocResults() (Persistent_SaveResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{Struct: r}, err
}

type Persistent_SaveParams struct{ capnp.Struct }

// Persistent_SaveParams_TypeID is the unique identifier for the type Persistent_SaveParams.
const Persistent_SaveParams_TypeID = 0xf76fba59183073a5

func NewPersistent_SaveParams(s *capnp.Segment) (Persistent_SaveParams, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveParams{st}, err
}

func NewRootPersistent_SaveParams(s *capnp.Segment) (Persistent_SaveParams, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveParams{st}, err
}

func ReadRootPersistent_SaveParams(msg *capnp.Message) (Persistent_SaveParams, error) {
	root, err := msg.Root()
	return Persistent_SaveParams{root.Struct()}, err
}

func (s Persistent_SaveParams) String() string {
	str, _ := text.Marshal(0xf76fba59183073a5, s.Struct)
	return str
}

func (s Persistent_SaveParams) SealFor() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Persistent_SaveParams) HasSealFor() bool {
	return s.Struct.HasPtr(0)
}

func (s Persistent_SaveParams) SetSealFor(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Persistent_SaveParams_List is a list of Persistent_SaveParams.
type Persistent_SaveParams_List struct{ capnp.List }

// NewPersistent_SaveParams creates a new list of Persistent_SaveParams.
func NewPersistent_SaveParams_List(s *capnp.Segment, sz int32) (Persistent_SaveParams_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Persistent_SaveParams_List{l}, err
}

func (s Persistent_SaveParams_List) At(i int) Persistent_SaveParams {
	return Persistent_SaveParams{s.List.Struct(i)}
}

func (s Persistent_SaveParams_List) Set(i int, v Persistent_SaveParams) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Persistent_SaveParams_List) String() string {
	str, _ := text.MarshalList(0xf76fba59183073a5, s.List)
	return str
}

// Persistent_SaveParams_Future is a wrapper for a Persistent_SaveParams promised by a client call.
type Persistent_SaveParams_Future struct{ *capnp.Future }

func (p Persistent_SaveParams_Future) Struct() (Persistent_SaveParams, error) {
	s, err := p.Future.Struct()
	return Persistent_SaveParams{s}, err
}

func (p Persistent_SaveParams_Future) SealFor() *capnp.Future {
	return p.Future.Field(0, nil)
}

type Persistent_SaveResults struct{ capnp.Struct }

// Persistent_SaveResults_TypeID is the unique identifier for the type Persistent_SaveResults.
const Persistent_SaveResults_TypeID = 0xb76848c18c40efbf

func NewPersistent_SaveResults(s *capnp.Segment) (Persistent_SaveResults, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{st}, err
}

func NewRootPersistent_SaveResults(s *capnp.Segment) (Persistent_SaveResults, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{st}, err
}

func ReadRootPersistent_SaveResults(msg *capnp.Message) (Persistent_SaveResults, error) {
	root, err := msg.Root()
	return Persistent_SaveResults{root.Struct()}, err
}

func (s Persistent_SaveResults) String() string {
	str, _ := text.Marshal(0xb76848c18c40efbf, s.Struct)
	return str
}

func (s Persistent_SaveResults) SturdyRef() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Persistent_SaveResults) HasSturdyRef() bool {
	return s.Struct.HasPtr(0)
}

func (s Persistent_SaveResults) SetSturdyRef(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Persistent_SaveResults_List is a list of Persistent_SaveResults.
type Persistent_SaveResults_List struct{ capnp.List }

// NewPersistent_SaveResults creates a new list of Persistent_SaveResults.
func NewPersistent_SaveResults_List(s *capnp.Segment, sz int32) (Persistent_SaveResults_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Persistent_SaveResults_List{l}, err
}

func (s Persistent_SaveResults_List) At(i int) Persistent_SaveResults {
	return Persistent_SaveResults{s.List.Struct(i)}
}

func (s Persistent_SaveResults_List) Set(i int, v Persistent_SaveResults) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Persistent_SaveResults_List) String() string {
	str, _ := text.MarshalList(0xb76848c18c40efbf, s.List)
	return str
}

// Persistent_SaveResults_Future is a wrapper for a Persistent_SaveResults promised by a client call.
type Persistent_SaveResults_Future struct{ *capnp.Future }

func (p Persistent_SaveResults_Future) Struct() (Persistent_SaveResults, error) {
	s, err := p.Future.Struct()
	return Persistent_SaveResults{s}, err
}

func (p Persistent_SaveResults_Future) SturdyRef() *capnp.Future {
	return p.Future.Field(0, nil)
}

type RealmGateway struct{ Client *capnp.Client }

// RealmGateway_TypeID is the unique identifier for the type RealmGateway.
const RealmGateway_TypeID = 0x84ff286cd00a3ed4

func (c RealmGateway) Import(ctx context.Context, params func(RealmGateway_import_Params) error) (Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      0,
			InterfaceName: "persistent.capnp:RealmGateway",
			MethodName:    "import",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RealmGateway_import_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Persistent_SaveResults_Future{Future: ans.Future()}, release
}
func (c RealmGateway) Export(ctx context.Context, params func(RealmGateway_export_Params) error) (Persistent_SaveResults_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      1,
			InterfaceName: "persistent.capnp:RealmGateway",
			MethodName:    "export",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(RealmGateway_export_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Persistent_SaveResults_Future{Future: ans.Future()}, release
}

func (c RealmGateway) AddRef() RealmGateway {
	return RealmGateway{
		Client: c.Client.AddRef(),
	}
}

func (c RealmGateway) Release() {
	c.Client.Release()
}

// A RealmGateway_Server is a RealmGateway with a local implementation.
type RealmGateway_Server interface {
	Import(context.Context, RealmGateway_import) error

	Export(context.Context, RealmGateway_export) error
}

// RealmGateway_NewServer creates a new Server from an implementation of RealmGateway_Server.
func RealmGateway_NewServer(s RealmGateway_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(RealmGateway_Methods(nil, s), s, c, policy)
}

// RealmGateway_ServerToClient creates a new Client from an implementation of RealmGateway_Server.
// The caller is responsible for calling Release on the returned Client.
func RealmGateway_ServerToClient(s RealmGateway_Server, policy *server.Policy) RealmGateway {
	return RealmGateway{Client: capnp.NewClient(RealmGateway_NewServer(s, policy))}
}

// RealmGateway_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func RealmGateway_Methods(methods []server.Method, s RealmGateway_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      0,
			InterfaceName: "persistent.capnp:RealmGateway",
			MethodName:    "import",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Import(ctx, RealmGateway_import{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x84ff286cd00a3ed4,
			MethodID:      1,
			InterfaceName: "persistent.capnp:RealmGateway",
			MethodName:    "export",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Export(ctx, RealmGateway_export{call})
		},
	})

	return methods
}

// RealmGateway_import holds the state for a server call to RealmGateway.import.
// See server.Call for documentation.
type RealmGateway_import struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RealmGateway_import) Args() RealmGateway_import_Params {
	return RealmGateway_import_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RealmGateway_import) AllocResults() (Persistent_SaveResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{Struct: r}, err
}

// RealmGateway_export holds the state for a server call to RealmGateway.export.
// See server.Call for documentation.
type RealmGateway_export struct {
	*server.Call
}

// Args returns the call's arguments.
func (c RealmGateway_export) Args() RealmGateway_export_Params {
	return RealmGateway_export_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c RealmGateway_export) AllocResults() (Persistent_SaveResults, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Persistent_SaveResults{Struct: r}, err
}

type RealmGateway_import_Params struct{ capnp.Struct }

// RealmGateway_import_Params_TypeID is the unique identifier for the type RealmGateway_import_Params.
const RealmGateway_import_Params_TypeID = 0xf0c2cc1d3909574d

func NewRealmGateway_import_Params(s *capnp.Segment) (RealmGateway_import_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_import_Params{st}, err
}

func NewRootRealmGateway_import_Params(s *capnp.Segment) (RealmGateway_import_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_import_Params{st}, err
}

func ReadRootRealmGateway_import_Params(msg *capnp.Message) (RealmGateway_import_Params, error) {
	root, err := msg.Root()
	return RealmGateway_import_Params{root.Struct()}, err
}

func (s RealmGateway_import_Params) String() string {
	str, _ := text.Marshal(0xf0c2cc1d3909574d, s.Struct)
	return str
}

func (s RealmGateway_import_Params) Cap() Persistent {
	p, _ := s.Struct.Ptr(0)
	return Persistent{Client: p.Interface().Client()}
}

func (s RealmGateway_import_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s RealmGateway_import_Params) SetCap(v Persistent) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s RealmGateway_import_Params) Params() (Persistent_SaveParams, error) {
	p, err := s.Struct.Ptr(1)
	return Persistent_SaveParams{Struct: p.Struct()}, err
}

func (s RealmGateway_import_Params) HasParams() bool {
	return s.Struct.HasPtr(1)
}

func (s RealmGateway_import_Params) SetParams(v Persistent_SaveParams) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Persistent_SaveParams struct, preferring placement in s's segment.
func (s RealmGateway_import_Params) NewParams() (Persistent_SaveParams, error) {
	ss, err := NewPersistent_SaveParams(s.Struct.Segment())
	if err != nil {
		return Persistent_SaveParams{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// RealmGateway_import_Params_List is a list of RealmGateway_import_Params.
type RealmGateway_import_Params_List struct{ capnp.List }

// NewRealmGateway_import_Params creates a new list of RealmGateway_import_Params.
func NewRealmGateway_import_Params_List(s *capnp.Segment, sz int32) (RealmGateway_import_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RealmGateway_import_Params_List{l}, err
}

func (s RealmGateway_import_Params_List) At(i int) RealmGateway_import_Params {
	return RealmGateway_import_Params{s.List.Struct(i)}
}

func (s RealmGateway_import_Params_List) Set(i int, v RealmGateway_import_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RealmGateway_import_Params_List) String() string {
	str, _ := text.MarshalList(0xf0c2cc1d3909574d, s.List)
	return str
}

// RealmGateway_import_Params_Future is a wrapper for a RealmGateway_import_Params promised by a client call.
type RealmGateway_import_Params_Future struct{ *capnp.Future }

func (p RealmGateway_import_Params_Future) Struct() (RealmGateway_import_Params, error) {
	s, err := p.Future.Struct()
	return RealmGateway_import_Params{s}, err
}

func (p RealmGateway_import_Params_Future) Cap() Persistent {
	return Persistent{Client: p.Future.Field(0, nil).Client()}
}

func (p RealmGateway_import_Params_Future) Params() Persistent_SaveParams_Future {
	return Persistent_SaveParams_Future{Future: p.Future.Field(1, nil)}
}

type RealmGateway_export_Params struct{ capnp.Struct }

// RealmGateway_export_Params_TypeID is the unique identifier for the type RealmGateway_export_Params.
const RealmGateway_export_Params_TypeID = 0xecafa18b482da3aa

func NewRealmGateway_export_Params(s *capnp.Segment) (RealmGateway_export_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_export_Params{st}, err
}

func NewRootRealmGateway_export_Params(s *capnp.Segment) (RealmGateway_export_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RealmGateway_export_Params{st}, err
}

func ReadRootRealmGateway_export_Params(msg *capnp.Message) (RealmGateway_export_Params, error) {
	root, err := msg.Root()
	return RealmGateway_export_Params{root.Struct()}, err
}

func (s RealmGateway_export_Params) String() string {
	str, _ := text.Marshal(0xecafa18b482da3aa, s.Struct)
	return str
}

func (s RealmGateway_export_Params) Cap() Persistent {
	p, _ := s.Struct.Ptr(0)
	return Persistent{Client: p.Interface().Client()}
}

func (s RealmGateway_export_Params) HasCap() bool {
	return s.Struct.HasPtr(0)
}

func (s RealmGateway_export_Params) SetCap(v Persistent) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

func (s RealmGateway_export_Params) Params() (Persistent_SaveParams, error) {
	p, err := s.Struct.Ptr(1)
	return Persistent_SaveParams{Struct: p.Struct()}, err
}

func (s RealmGateway_export_Params) HasParams() bool {
	return s.Struct.HasPtr(1)
}

func (s RealmGateway_export_Params) SetParams(v Persistent_SaveParams) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Persistent_SaveParams struct, preferring placement in s's segment.
func (s RealmGateway_export_Params) NewParams() (Persistent_SaveParams, error) {
	ss, err := NewPersistent_SaveParams(s.Struct.Segment())
	if err != nil {
		return Persistent_SaveParams{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// RealmGateway_export_Params_List is a list of RealmGateway_export_Params.
type RealmGateway_export_Params_List struct{ capnp.List }

// NewRealmGateway_export_Params creates a new list of RealmGateway_export_Params.
func NewRealmGateway_export_Params_List(s *capnp.Segment, sz int32) (RealmGateway_export_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RealmGateway_export_Params_List{l}, err
}

func (s RealmGateway_export_Params_List) At(i int) RealmGateway_export_Params {
	return RealmGateway_export_Params{s.List.Struct(i)}
}

func (s RealmGateway_export_Params_List) Set(i int, v RealmGateway_export_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RealmGateway_export_Params_List) String() string {
	str, _ := text.MarshalList(0xecafa18b482da3aa, s.List)
	return str
}

// RealmGateway_export_Params_Future is a wrapper for a RealmGateway_export_Params promised by a client call.
type RealmGateway_export_Params_Future struct{ *capnp.Future }

func (p RealmGateway_export_Params_Future) Struct() (RealmGateway_export_Params, error) {
	s, err := p.Future.Struct()
	return RealmGateway_export_Params{s}, err
}

func (p RealmGateway_export_Params_Future) Cap() Persistent {
	return Persistent{Client: p.Future.Field(0, nil).Client()}
}

func (p RealmGateway_export_Params_Future) Params() Persistent_SaveParams_Future {
	return Persistent_SaveParams_Future{Future: p.Future.Field(1, nil)}
}

const schema_b8630836983feed7 = "x\xda\xbcSMH\x14Q\x1c\xff\xff\xe7\xcd\xc7n(" +
	"\xee\xdbQ4\xd06E1#\xbf\x8a\xa2$\xda\x1d\xc9" +
	"\xb4C\xb5\xb3Ba\x10\xf4\xd6\xc62v\xd7af\xfc" +
	":D\x05ADy\xf0\xd6-\"\xba\x04\xd1\xb1\xec\x12" +
	"IA\xf4\x01\x05\x85w\xcf\x91\xd5\xa1\x0e\x1d^\xbc\xd9" +
	"\xafIW$\x8c.\x03\xf3\x7f\xff\xf7~\xff\xff\xef\xa3" +
	"g\x05\x13R\xaf\xb2$\x03\x98\xfb\x15\x95\x7f<\xb4\xe5" +
	"}f\x07\xbf\x06\x94\x12\xbe\xf4%~{_h\xf4\x09" +
	"\x00DP7\xa5\xef\xfa\x19I\x03\xd0G\xa4\xeb:#" +
	"\x9a\xceH;\x7f\xb6\x92\xb8\xf5|\xe8\xc2c\xa0\x8d\xc8" +
	"\xe7O\xdey\xd7\xdd\xfc\xe6\x15(\xa8Ep\xcf%\xd2" +
	"\x8f\xfa\x1c\x11Wn\x908\x04\xce\xd7\xbe\xfe\x90,\xeb" +
	"\x0b\xa4\x1d@\xffD\x06\xf56Y\xd3\xdb\xe4z\xfe\xe0" +
	"^\xe7\xd0\xcd\xbb\x8f>\x03\xdd\x86\x00\x8a$^m\x93" +
	"\xd3\x08\xa8\xf7\xca\xd3\x80\xfc\xd8\xa9\xf0\x81\xa6\xb7\x8b_" +
	"\x83\x0dM\x8a\xdf\xd0\xa1\x88\x86\xf3\xbf^\xcf'GZ" +
	"~\xc0\x07\xaal\xc7\x00(\xeau\xea\xb2\xde\xacjz" +
	"\xb3\x1a\x1b>\xac\x12\x04\xe4\xf7\xdd\x9e\x86\x91\xa7\x13?" +
	"+m\xb3W\xedC}@\x15\xdb\x18j\x1c\x8es\xdb" +
	"r\xdcq\xd7\xb3\xa4\x9c\xd75\xca\xec\x9c\xdd\x97\xb2X" +
	"&;\xc8b\x9e5\xcdf\x93\x88f\x88(\x00\xa5!" +
	"\xb1H\x16\xed\xed\x030v\xa1q\x10\xe9U\x0d\xb1\xb4" +
	"g\xb9cRt\xd8h\\A\xfaR\x8b\x8fg\xed\x09" +
	"\xc7\xa3\x183e\x09\xcb\"!\x02\x14\x8b\xa5iE\xa9" +
	"\xdd\x0c!\xfa\xf8\xe2\x1b!\x88Q\x0c\xdc\x03\xc0\xa8\x82" +
	"R\xb0\x90\xc0\xb85\xb3i\x10e-\x0a\xf9\x13%\x89" +
	"hD\x90V\xa7)M\xd3:\x87nu\xf8\xd1\x9cg" +
	"99\x96\x01-e\x8d\xf1\x81\x99\xe0_\xe9,vb" +
	":g9\xe5\xd3\xc2\x7fQ\x03\xb9\xa4A\xb2P\xc9y" +
	"]\xc3l\xcaJY\xeed\xc6sA\xa8!\x13\x19@" +
	"\x16\xebT\xa7\x00\xcc*\x82f\x83\x84\xdc\xf5&\x9ds" +
	"\xb3)\x0bp\xcc\xa7)\xb0$F\x01+\xe8\\\xc0\xd0" +
	"\xac\x9c'8\x08\xd8&|:\x90\x88p\x9a\x8b\x11\x92" +
	"\xcca@\xb2./\xce\x03Z\xc6sM\xd9\xf7F\xf1" +
	"jYy\xba\x13\xc0\xa8B\xa3\x11i\xa7V\xe3\xb2)" +
	"k\x0d\xfb\x15%\x11\xc5<\xbf!\xa4J\x8a\x86w\xf3" +
	"\xe1\xf2f\xeb\xf2U\xf0\xaco\xd9\xae\xbc\x05Z\x93\xcc" +
	"\xd1X\xd65C%\xc2:Z\x00\xccV\x82\xe6\x8c\x84" +
	"\x14\xb1\xd6\x9f@x\xd4\xb4\x09\x9a/$\xd4F\x99\x8d" +
	"4\xc8]\x02\xff\x915\x91\x02\xc6m\xe6\xb0\xac\x8b\x91" +
	"2\xd7\x7f\x83\xb0\x91/1\x12\xd0y\x1dn\xf2\x19\xfc" +
	"\xdf\xdcl8\xf9\xe6\xc9\xd9\x88\xfeH\xc5\x0c\xd8\xe5\x0c" +
	"\xf8\xd9B\x89\x7f\x9b\xeb\xae\x8f\x9e]X\x04\x01k\xd4" +
	"\"V\x09\xc4\x8b|\xdc\xcd\x07\x06jD,A.\xbd" +
	"F\xd6Km<\xe9o\xb4*\xb4\xfd\x00bn\xb3V" +
	"\xc2\xcb\xae\xc52G&\x9c<A\xab\x12\xfb;\x00\x00" +
	"\xff\xff\xb6&\xed-"

func init() {
	schemas.Register(schema_b8630836983feed7,
		0x84ff286cd00a3ed4,
		0xb76848c18c40efbf,
		0xc8cb212fcd9f5691,
		0xecafa18b482da3aa,
		0xf0c2cc1d3909574d,
		0xf622595091cafb67,
		0xf76fba59183073a5)
}
