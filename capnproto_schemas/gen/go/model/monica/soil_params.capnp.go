// Code generated by capnpc-go. DO NOT EDIT.

package soil

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	math "math"
)

type SoilCharacteristicData struct{ capnp.Struct }

// SoilCharacteristicData_TypeID is the unique identifier for the type SoilCharacteristicData.
const SoilCharacteristicData_TypeID = 0xfc682227304e2281

func NewSoilCharacteristicData(s *capnp.Segment) (SoilCharacteristicData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicData{st}, err
}

func NewRootSoilCharacteristicData(s *capnp.Segment) (SoilCharacteristicData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicData{st}, err
}

func ReadRootSoilCharacteristicData(msg *capnp.Message) (SoilCharacteristicData, error) {
	root, err := msg.Root()
	return SoilCharacteristicData{root.Struct()}, err
}

func (s SoilCharacteristicData) String() string {
	str, _ := text.Marshal(0xfc682227304e2281, s.Struct)
	return str
}

func (s SoilCharacteristicData) List() (SoilCharacteristicData_Data_List, error) {
	p, err := s.Struct.Ptr(0)
	return SoilCharacteristicData_Data_List{List: p.List()}, err
}

func (s SoilCharacteristicData) HasList() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicData) SetList(v SoilCharacteristicData_Data_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewList sets the list field to a newly
// allocated SoilCharacteristicData_Data_List, preferring placement in s's segment.
func (s SoilCharacteristicData) NewList(n int32) (SoilCharacteristicData_Data_List, error) {
	l, err := NewSoilCharacteristicData_Data_List(s.Struct.Segment(), n)
	if err != nil {
		return SoilCharacteristicData_Data_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// SoilCharacteristicData_List is a list of SoilCharacteristicData.
type SoilCharacteristicData_List struct{ capnp.List }

// NewSoilCharacteristicData creates a new list of SoilCharacteristicData.
func NewSoilCharacteristicData_List(s *capnp.Segment, sz int32) (SoilCharacteristicData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SoilCharacteristicData_List{l}, err
}

func (s SoilCharacteristicData_List) At(i int) SoilCharacteristicData {
	return SoilCharacteristicData{s.List.Struct(i)}
}

func (s SoilCharacteristicData_List) Set(i int, v SoilCharacteristicData) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicData_List) String() string {
	str, _ := text.MarshalList(0xfc682227304e2281, s.List)
	return str
}

// SoilCharacteristicData_Future is a wrapper for a SoilCharacteristicData promised by a client call.
type SoilCharacteristicData_Future struct{ *capnp.Future }

func (p SoilCharacteristicData_Future) Struct() (SoilCharacteristicData, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicData{s}, err
}

type SoilCharacteristicData_Data struct{ capnp.Struct }

// SoilCharacteristicData_Data_TypeID is the unique identifier for the type SoilCharacteristicData_Data.
const SoilCharacteristicData_Data_TypeID = 0xeafaab57e025db63

func NewSoilCharacteristicData_Data(s *capnp.Segment) (SoilCharacteristicData_Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicData_Data{st}, err
}

func NewRootSoilCharacteristicData_Data(s *capnp.Segment) (SoilCharacteristicData_Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicData_Data{st}, err
}

func ReadRootSoilCharacteristicData_Data(msg *capnp.Message) (SoilCharacteristicData_Data, error) {
	root, err := msg.Root()
	return SoilCharacteristicData_Data{root.Struct()}, err
}

func (s SoilCharacteristicData_Data) String() string {
	str, _ := text.Marshal(0xeafaab57e025db63, s.Struct)
	return str
}

func (s SoilCharacteristicData_Data) SoilType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SoilCharacteristicData_Data) HasSoilType() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicData_Data) SoilTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SoilCharacteristicData_Data) SetSoilType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SoilCharacteristicData_Data) SoilRawDensity() int16 {
	return int16(s.Struct.Uint16(0))
}

func (s SoilCharacteristicData_Data) SetSoilRawDensity(v int16) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s SoilCharacteristicData_Data) AirCapacity() uint8 {
	return s.Struct.Uint8(2)
}

func (s SoilCharacteristicData_Data) SetAirCapacity(v uint8) {
	s.Struct.SetUint8(2, v)
}

func (s SoilCharacteristicData_Data) FieldCapacity() uint8 {
	return s.Struct.Uint8(3)
}

func (s SoilCharacteristicData_Data) SetFieldCapacity(v uint8) {
	s.Struct.SetUint8(3, v)
}

func (s SoilCharacteristicData_Data) NFieldCapacity() uint8 {
	return s.Struct.Uint8(4)
}

func (s SoilCharacteristicData_Data) SetNFieldCapacity(v uint8) {
	s.Struct.SetUint8(4, v)
}

// SoilCharacteristicData_Data_List is a list of SoilCharacteristicData_Data.
type SoilCharacteristicData_Data_List struct{ capnp.List }

// NewSoilCharacteristicData_Data creates a new list of SoilCharacteristicData_Data.
func NewSoilCharacteristicData_Data_List(s *capnp.Segment, sz int32) (SoilCharacteristicData_Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SoilCharacteristicData_Data_List{l}, err
}

func (s SoilCharacteristicData_Data_List) At(i int) SoilCharacteristicData_Data {
	return SoilCharacteristicData_Data{s.List.Struct(i)}
}

func (s SoilCharacteristicData_Data_List) Set(i int, v SoilCharacteristicData_Data) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicData_Data_List) String() string {
	str, _ := text.MarshalList(0xeafaab57e025db63, s.List)
	return str
}

// SoilCharacteristicData_Data_Future is a wrapper for a SoilCharacteristicData_Data promised by a client call.
type SoilCharacteristicData_Data_Future struct{ *capnp.Future }

func (p SoilCharacteristicData_Data_Future) Struct() (SoilCharacteristicData_Data, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicData_Data{s}, err
}

type SoilCharacteristicModifier struct{ capnp.Struct }

// SoilCharacteristicModifier_TypeID is the unique identifier for the type SoilCharacteristicModifier.
const SoilCharacteristicModifier_TypeID = 0xe4eb0a9bb0e5bb53

func NewSoilCharacteristicModifier(s *capnp.Segment) (SoilCharacteristicModifier, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicModifier{st}, err
}

func NewRootSoilCharacteristicModifier(s *capnp.Segment) (SoilCharacteristicModifier, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return SoilCharacteristicModifier{st}, err
}

func ReadRootSoilCharacteristicModifier(msg *capnp.Message) (SoilCharacteristicModifier, error) {
	root, err := msg.Root()
	return SoilCharacteristicModifier{root.Struct()}, err
}

func (s SoilCharacteristicModifier) String() string {
	str, _ := text.Marshal(0xe4eb0a9bb0e5bb53, s.Struct)
	return str
}

func (s SoilCharacteristicModifier) List() (SoilCharacteristicModifier_Data_List, error) {
	p, err := s.Struct.Ptr(0)
	return SoilCharacteristicModifier_Data_List{List: p.List()}, err
}

func (s SoilCharacteristicModifier) HasList() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicModifier) SetList(v SoilCharacteristicModifier_Data_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewList sets the list field to a newly
// allocated SoilCharacteristicModifier_Data_List, preferring placement in s's segment.
func (s SoilCharacteristicModifier) NewList(n int32) (SoilCharacteristicModifier_Data_List, error) {
	l, err := NewSoilCharacteristicModifier_Data_List(s.Struct.Segment(), n)
	if err != nil {
		return SoilCharacteristicModifier_Data_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// SoilCharacteristicModifier_List is a list of SoilCharacteristicModifier.
type SoilCharacteristicModifier_List struct{ capnp.List }

// NewSoilCharacteristicModifier creates a new list of SoilCharacteristicModifier.
func NewSoilCharacteristicModifier_List(s *capnp.Segment, sz int32) (SoilCharacteristicModifier_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return SoilCharacteristicModifier_List{l}, err
}

func (s SoilCharacteristicModifier_List) At(i int) SoilCharacteristicModifier {
	return SoilCharacteristicModifier{s.List.Struct(i)}
}

func (s SoilCharacteristicModifier_List) Set(i int, v SoilCharacteristicModifier) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicModifier_List) String() string {
	str, _ := text.MarshalList(0xe4eb0a9bb0e5bb53, s.List)
	return str
}

// SoilCharacteristicModifier_Future is a wrapper for a SoilCharacteristicModifier promised by a client call.
type SoilCharacteristicModifier_Future struct{ *capnp.Future }

func (p SoilCharacteristicModifier_Future) Struct() (SoilCharacteristicModifier, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicModifier{s}, err
}

type SoilCharacteristicModifier_Data struct{ capnp.Struct }

// SoilCharacteristicModifier_Data_TypeID is the unique identifier for the type SoilCharacteristicModifier_Data.
const SoilCharacteristicModifier_Data_TypeID = 0xa968a46ccde8b1b4

func NewSoilCharacteristicModifier_Data(s *capnp.Segment) (SoilCharacteristicModifier_Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicModifier_Data{st}, err
}

func NewRootSoilCharacteristicModifier_Data(s *capnp.Segment) (SoilCharacteristicModifier_Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return SoilCharacteristicModifier_Data{st}, err
}

func ReadRootSoilCharacteristicModifier_Data(msg *capnp.Message) (SoilCharacteristicModifier_Data, error) {
	root, err := msg.Root()
	return SoilCharacteristicModifier_Data{root.Struct()}, err
}

func (s SoilCharacteristicModifier_Data) String() string {
	str, _ := text.Marshal(0xa968a46ccde8b1b4, s.Struct)
	return str
}

func (s SoilCharacteristicModifier_Data) SoilType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SoilCharacteristicModifier_Data) HasSoilType() bool {
	return s.Struct.HasPtr(0)
}

func (s SoilCharacteristicModifier_Data) SoilTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SoilCharacteristicModifier_Data) SetSoilType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SoilCharacteristicModifier_Data) OrganicMatter() float32 {
	return math.Float32frombits(s.Struct.Uint32(0))
}

func (s SoilCharacteristicModifier_Data) SetOrganicMatter(v float32) {
	s.Struct.SetUint32(0, math.Float32bits(v))
}

func (s SoilCharacteristicModifier_Data) AirCapacity() uint8 {
	return s.Struct.Uint8(4)
}

func (s SoilCharacteristicModifier_Data) SetAirCapacity(v uint8) {
	s.Struct.SetUint8(4, v)
}

func (s SoilCharacteristicModifier_Data) FieldCapacity() uint8 {
	return s.Struct.Uint8(5)
}

func (s SoilCharacteristicModifier_Data) SetFieldCapacity(v uint8) {
	s.Struct.SetUint8(5, v)
}

func (s SoilCharacteristicModifier_Data) NFieldCapacity() uint8 {
	return s.Struct.Uint8(6)
}

func (s SoilCharacteristicModifier_Data) SetNFieldCapacity(v uint8) {
	s.Struct.SetUint8(6, v)
}

// SoilCharacteristicModifier_Data_List is a list of SoilCharacteristicModifier_Data.
type SoilCharacteristicModifier_Data_List struct{ capnp.List }

// NewSoilCharacteristicModifier_Data creates a new list of SoilCharacteristicModifier_Data.
func NewSoilCharacteristicModifier_Data_List(s *capnp.Segment, sz int32) (SoilCharacteristicModifier_Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return SoilCharacteristicModifier_Data_List{l}, err
}

func (s SoilCharacteristicModifier_Data_List) At(i int) SoilCharacteristicModifier_Data {
	return SoilCharacteristicModifier_Data{s.List.Struct(i)}
}

func (s SoilCharacteristicModifier_Data_List) Set(i int, v SoilCharacteristicModifier_Data) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s SoilCharacteristicModifier_Data_List) String() string {
	str, _ := text.MarshalList(0xa968a46ccde8b1b4, s.List)
	return str
}

// SoilCharacteristicModifier_Data_Future is a wrapper for a SoilCharacteristicModifier_Data promised by a client call.
type SoilCharacteristicModifier_Data_Future struct{ *capnp.Future }

func (p SoilCharacteristicModifier_Data_Future) Struct() (SoilCharacteristicModifier_Data, error) {
	s, err := p.Future.Struct()
	return SoilCharacteristicModifier_Data{s}, err
}

type CapillaryRiseRate struct{ capnp.Struct }

// CapillaryRiseRate_TypeID is the unique identifier for the type CapillaryRiseRate.
const CapillaryRiseRate_TypeID = 0x9b169bc96bb3d24b

func NewCapillaryRiseRate(s *capnp.Segment) (CapillaryRiseRate, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapillaryRiseRate{st}, err
}

func NewRootCapillaryRiseRate(s *capnp.Segment) (CapillaryRiseRate, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return CapillaryRiseRate{st}, err
}

func ReadRootCapillaryRiseRate(msg *capnp.Message) (CapillaryRiseRate, error) {
	root, err := msg.Root()
	return CapillaryRiseRate{root.Struct()}, err
}

func (s CapillaryRiseRate) String() string {
	str, _ := text.Marshal(0x9b169bc96bb3d24b, s.Struct)
	return str
}

func (s CapillaryRiseRate) List() (CapillaryRiseRate_Data_List, error) {
	p, err := s.Struct.Ptr(0)
	return CapillaryRiseRate_Data_List{List: p.List()}, err
}

func (s CapillaryRiseRate) HasList() bool {
	return s.Struct.HasPtr(0)
}

func (s CapillaryRiseRate) SetList(v CapillaryRiseRate_Data_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewList sets the list field to a newly
// allocated CapillaryRiseRate_Data_List, preferring placement in s's segment.
func (s CapillaryRiseRate) NewList(n int32) (CapillaryRiseRate_Data_List, error) {
	l, err := NewCapillaryRiseRate_Data_List(s.Struct.Segment(), n)
	if err != nil {
		return CapillaryRiseRate_Data_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// CapillaryRiseRate_List is a list of CapillaryRiseRate.
type CapillaryRiseRate_List struct{ capnp.List }

// NewCapillaryRiseRate creates a new list of CapillaryRiseRate.
func NewCapillaryRiseRate_List(s *capnp.Segment, sz int32) (CapillaryRiseRate_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return CapillaryRiseRate_List{l}, err
}

func (s CapillaryRiseRate_List) At(i int) CapillaryRiseRate {
	return CapillaryRiseRate{s.List.Struct(i)}
}

func (s CapillaryRiseRate_List) Set(i int, v CapillaryRiseRate) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s CapillaryRiseRate_List) String() string {
	str, _ := text.MarshalList(0x9b169bc96bb3d24b, s.List)
	return str
}

// CapillaryRiseRate_Future is a wrapper for a CapillaryRiseRate promised by a client call.
type CapillaryRiseRate_Future struct{ *capnp.Future }

func (p CapillaryRiseRate_Future) Struct() (CapillaryRiseRate, error) {
	s, err := p.Future.Struct()
	return CapillaryRiseRate{s}, err
}

type CapillaryRiseRate_Data struct{ capnp.Struct }

// CapillaryRiseRate_Data_TypeID is the unique identifier for the type CapillaryRiseRate_Data.
const CapillaryRiseRate_Data_TypeID = 0xb78a89c58fad885d

func NewCapillaryRiseRate_Data(s *capnp.Segment) (CapillaryRiseRate_Data, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CapillaryRiseRate_Data{st}, err
}

func NewRootCapillaryRiseRate_Data(s *capnp.Segment) (CapillaryRiseRate_Data, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return CapillaryRiseRate_Data{st}, err
}

func ReadRootCapillaryRiseRate_Data(msg *capnp.Message) (CapillaryRiseRate_Data, error) {
	root, err := msg.Root()
	return CapillaryRiseRate_Data{root.Struct()}, err
}

func (s CapillaryRiseRate_Data) String() string {
	str, _ := text.Marshal(0xb78a89c58fad885d, s.Struct)
	return str
}

func (s CapillaryRiseRate_Data) SoilType() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s CapillaryRiseRate_Data) HasSoilType() bool {
	return s.Struct.HasPtr(0)
}

func (s CapillaryRiseRate_Data) SoilTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s CapillaryRiseRate_Data) SetSoilType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s CapillaryRiseRate_Data) Distance() uint8 {
	return s.Struct.Uint8(0)
}

func (s CapillaryRiseRate_Data) SetDistance(v uint8) {
	s.Struct.SetUint8(0, v)
}

func (s CapillaryRiseRate_Data) Rate() float32 {
	return math.Float32frombits(s.Struct.Uint32(4))
}

func (s CapillaryRiseRate_Data) SetRate(v float32) {
	s.Struct.SetUint32(4, math.Float32bits(v))
}

// CapillaryRiseRate_Data_List is a list of CapillaryRiseRate_Data.
type CapillaryRiseRate_Data_List struct{ capnp.List }

// NewCapillaryRiseRate_Data creates a new list of CapillaryRiseRate_Data.
func NewCapillaryRiseRate_Data_List(s *capnp.Segment, sz int32) (CapillaryRiseRate_Data_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return CapillaryRiseRate_Data_List{l}, err
}

func (s CapillaryRiseRate_Data_List) At(i int) CapillaryRiseRate_Data {
	return CapillaryRiseRate_Data{s.List.Struct(i)}
}

func (s CapillaryRiseRate_Data_List) Set(i int, v CapillaryRiseRate_Data) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s CapillaryRiseRate_Data_List) String() string {
	str, _ := text.MarshalList(0xb78a89c58fad885d, s.List)
	return str
}

// CapillaryRiseRate_Data_Future is a wrapper for a CapillaryRiseRate_Data promised by a client call.
type CapillaryRiseRate_Data_Future struct{ *capnp.Future }

func (p CapillaryRiseRate_Data_Future) Struct() (CapillaryRiseRate_Data, error) {
	s, err := p.Future.Struct()
	return CapillaryRiseRate_Data{s}, err
}

const schema_f83caca0747996ab = "x\xda\xbcT\xbfk\x14O\x1c\xfd\xbc\x99\xd9\xcb\x97\x90" +
	"\xafq\xd9C\xb1:\x08J E~ \x08\x06\xe1\x84" +
	";\x05\x7fDn\x12\x83\x16\x06\x19\xf76fps\xb7" +
	"\xec-\xc8\x05-\x04\x031\x18\xb4PQb \x85\x82" +
	"!\x8a\x1a\x05\x0bk\x8b\x146)\xb5QP\xf0\xc7?" +
	"\xa0AX\x99\\\xd8\x9cx\x81$\x85\xdd\xf0\xe63\xf3" +
	"\xde\xbc\xf7v\xbb\x97p\x90\xf5X\xed\x82Hv[\xa9" +
	"\xf8\xd8\xd2\x8b\x0b\x8b\xd3;\xa6\xc9\xce \x9e\xbfS\x8d" +
	"f\x1f\x1f\xf8A\x16\x9a\x88\xf6\xfe\xc4$\x1c\x9b\xed$" +
	"rv\xb1,!~\xf9\xfc\xcb[\xff\xc1\xc8\x1c\xc9^" +
	" \x1ex\xfd\xf9\xd9t\xf3\xf7O\xab\xd3G\xd82\x1c" +
	"\x8f\x99\xa5b\x19\x10\xe2\xa1\x89'7\xde\\\x9b|E" +
	"\xb2\x07Xc\xaa\x8d\x8f\xf3\x0583\xbc\x89\xc8\xb9\xc7" +
	"\x9fR\xddu\x0d\x94\xec\x17Kp\x06\x85Q2$\x8c" +
	"\x12\xf7\xfd\x9e\x0f\xa7\xe6\x97\xbf\x91\xdc\x07\xc4W\xdaN" +
	"t\xb7\xb7\x8d\xfcZ\x9d\x9e\x12\xef\xe0\xcc\x09\xb3|(" +
	"V\x94$\x03\x0d\xee^\xb4\x16\xe0|\xb4\xcc\xdd_\xad" +
	",\xe5\xe2\xd1r\xd1\xf3\xbbF\xcbVI\xbb\xaa\xabR" +
	"\xd6\xfe\xd9@\x85j\xb4\xd2\xe9\xaa\xa0\x14\xf4\xe6T\xa0" +
	"}_\x85\xd5~]\xf1\xfaU\xe4\x11I\x81\xba\xe7\xda" +
	"\xe8h\xcd\xabHI\xc1\x05\x91\x00\x91\xfd\x7f\x07\x91\xfc" +
	"\x8fC\xeefh\xf5u%\xc26B\x81\x03\xdb\xd7\x8e" +
	"\x11\x0c\x98\xd0\xa7\xd6\xa1\x1f(k?7\xa2B\xe5F" +
	"^\xa8+\x91v\xfb\xcaE=\xac\xbdl\xd8iX\x0b" +
	"\x80L'\xc4\x97\x8f\x12\xc9K\x1cr\x82\x01H\xc3`" +
	"\xe3!\x91\xbc\xca!o2\xd8L\xa4\xc1\x88\xec\xa9s" +
	"D\xf2:\x87\xbc\xcb`s+\x0dNd\xdf6\x93\xb7" +
	"8\xe4,\x83-Ri\x08\"{f\x8cH\xde\xe7\x90" +
	"\x8f\x18b\xa3\xefd5\xf0\x88\x08-\xc4\xd0B\x88\xcb" +
	"\xe1yU\xd2n\x1feT\x14y!\x9a\x89\xa1\x99\x10" +
	"+\x1d\xe6T\xa0\\j\xd2Q\x15)bH\x11\xe2a" +
	"\xed\xf9\xc5\x9c\x0a(\xa3\xdcz\xbct\xb8\xb6A\xd9\xe0" +
	"\xcf\x8dM\xe7\x93I|iI|9d|\xc9s\xc8" +
	"\xc2\x9a/}\x06;\xce!O\x1b_P\xf3e\xd0$" +
	"W\xe0\x90g\xd6ymQW\"UrW\xb0U\x89" +
	"\xad\xa1\x8a\xbc\xe4\xd9[\x0e\x14\xe1J\xaf\x92\xafns" +
	"\xbdJ\x8em\xb9W\x86\xab3\xaf\xf8\x86:5V\xdf" +
	")\xd6\xa8S\xbcQ\xa7\xc4\x06;e\xb0~u1O" +
	"Y\xafT1m\xe0\xc4\xc0\xff]\xa9\xfer'\xe3\xd6" +
	"\xa2@\xdd\xcfhs\x01%\xc7j\x01\xfd\x0e\x00\x00\xff" +
	"\xff.5\x82s"

func init() {
	schemas.Register(schema_f83caca0747996ab,
		0x9b169bc96bb3d24b,
		0xa968a46ccde8b1b4,
		0xb78a89c58fad885d,
		0xe4eb0a9bb0e5bb53,
		0xeafaab57e025db63,
		0xfc682227304e2281)
}
