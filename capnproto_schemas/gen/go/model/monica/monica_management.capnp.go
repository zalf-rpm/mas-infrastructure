// Code generated by capnpc-go. DO NOT EDIT.

package monica

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/common"
	crop "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/crop"
	geo "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/geo"
	math "math"
	strconv "strconv"
)

type ILRDates struct{ capnp.Struct }

// ILRDates_TypeID is the unique identifier for the type ILRDates.
const ILRDates_TypeID = 0xa1f99f32eea02590

func NewILRDates(s *capnp.Segment) (ILRDates, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return ILRDates{st}, err
}

func NewRootILRDates(s *capnp.Segment) (ILRDates, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return ILRDates{st}, err
}

func ReadRootILRDates(msg *capnp.Message) (ILRDates, error) {
	root, err := msg.Root()
	return ILRDates{root.Struct()}, err
}

func (s ILRDates) String() string {
	str, _ := text.Marshal(0xa1f99f32eea02590, s.Struct)
	return str
}

func (s ILRDates) Sowing() (common.Date, error) {
	p, err := s.Struct.Ptr(0)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasSowing() bool {
	return s.Struct.HasPtr(0)
}

func (s ILRDates) SetSowing(v common.Date) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSowing sets the sowing field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewSowing() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) EarliestSowing() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasEarliestSowing() bool {
	return s.Struct.HasPtr(1)
}

func (s ILRDates) SetEarliestSowing(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEarliestSowing sets the earliestSowing field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewEarliestSowing() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) LatestSowing() (common.Date, error) {
	p, err := s.Struct.Ptr(2)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasLatestSowing() bool {
	return s.Struct.HasPtr(2)
}

func (s ILRDates) SetLatestSowing(v common.Date) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewLatestSowing sets the latestSowing field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewLatestSowing() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) Harvest() (common.Date, error) {
	p, err := s.Struct.Ptr(3)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasHarvest() bool {
	return s.Struct.HasPtr(3)
}

func (s ILRDates) SetHarvest(v common.Date) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewHarvest sets the harvest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewHarvest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) LatestHarvest() (common.Date, error) {
	p, err := s.Struct.Ptr(4)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasLatestHarvest() bool {
	return s.Struct.HasPtr(4)
}

func (s ILRDates) SetLatestHarvest(v common.Date) error {
	return s.Struct.SetPtr(4, v.Struct.ToPtr())
}

// NewLatestHarvest sets the latestHarvest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewLatestHarvest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(4, ss.Struct.ToPtr())
	return ss, err
}

// ILRDates_List is a list of ILRDates.
type ILRDates_List struct{ capnp.List }

// NewILRDates creates a new list of ILRDates.
func NewILRDates_List(s *capnp.Segment, sz int32) (ILRDates_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return ILRDates_List{l}, err
}

func (s ILRDates_List) At(i int) ILRDates { return ILRDates{s.List.Struct(i)} }

func (s ILRDates_List) Set(i int, v ILRDates) error { return s.List.SetStruct(i, v.Struct) }

func (s ILRDates_List) String() string {
	str, _ := text.MarshalList(0xa1f99f32eea02590, s.List)
	return str
}

// ILRDates_Future is a wrapper for a ILRDates promised by a client call.
type ILRDates_Future struct{ *capnp.Future }

func (p ILRDates_Future) Struct() (ILRDates, error) {
	s, err := p.Future.Struct()
	return ILRDates{s}, err
}

func (p ILRDates_Future) Sowing() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(0, nil)}
}

func (p ILRDates_Future) EarliestSowing() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p ILRDates_Future) LatestSowing() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(2, nil)}
}

func (p ILRDates_Future) Harvest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(3, nil)}
}

func (p ILRDates_Future) LatestHarvest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(4, nil)}
}

type MineralFertilizer uint16

// MineralFertilizer_TypeID is the unique identifier for the type MineralFertilizer.
const MineralFertilizer_TypeID = 0x94aa9c195abf0a1a

// Values of MineralFertilizer.
const (
	MineralFertilizer_ahls  MineralFertilizer = 0
	MineralFertilizer_alzon MineralFertilizer = 1
	MineralFertilizer_an    MineralFertilizer = 2
	MineralFertilizer_ap    MineralFertilizer = 3
	MineralFertilizer_as    MineralFertilizer = 4
	MineralFertilizer_ash   MineralFertilizer = 5
	MineralFertilizer_cf4   MineralFertilizer = 6
	MineralFertilizer_cp1   MineralFertilizer = 7
	MineralFertilizer_cp2   MineralFertilizer = 8
	MineralFertilizer_cp3   MineralFertilizer = 9
	MineralFertilizer_npk   MineralFertilizer = 10
	MineralFertilizer_ns    MineralFertilizer = 11
	MineralFertilizer_u     MineralFertilizer = 12
	MineralFertilizer_uan   MineralFertilizer = 13
	MineralFertilizer_uas   MineralFertilizer = 14
	MineralFertilizer_uni   MineralFertilizer = 15
)

// String returns the enum's constant name.
func (c MineralFertilizer) String() string {
	switch c {
	case MineralFertilizer_ahls:
		return "ahls"
	case MineralFertilizer_alzon:
		return "alzon"
	case MineralFertilizer_an:
		return "an"
	case MineralFertilizer_ap:
		return "ap"
	case MineralFertilizer_as:
		return "as"
	case MineralFertilizer_ash:
		return "ash"
	case MineralFertilizer_cf4:
		return "cf4"
	case MineralFertilizer_cp1:
		return "cp1"
	case MineralFertilizer_cp2:
		return "cp2"
	case MineralFertilizer_cp3:
		return "cp3"
	case MineralFertilizer_npk:
		return "npk"
	case MineralFertilizer_ns:
		return "ns"
	case MineralFertilizer_u:
		return "u"
	case MineralFertilizer_uan:
		return "uan"
	case MineralFertilizer_uas:
		return "uas"
	case MineralFertilizer_uni:
		return "uni"

	default:
		return ""
	}
}

// MineralFertilizerFromString returns the enum value with a name,
// or the zero value if there's no such value.
func MineralFertilizerFromString(c string) MineralFertilizer {
	switch c {
	case "ahls":
		return MineralFertilizer_ahls
	case "alzon":
		return MineralFertilizer_alzon
	case "an":
		return MineralFertilizer_an
	case "ap":
		return MineralFertilizer_ap
	case "as":
		return MineralFertilizer_as
	case "ash":
		return MineralFertilizer_ash
	case "cf4":
		return MineralFertilizer_cf4
	case "cp1":
		return MineralFertilizer_cp1
	case "cp2":
		return MineralFertilizer_cp2
	case "cp3":
		return MineralFertilizer_cp3
	case "npk":
		return MineralFertilizer_npk
	case "ns":
		return MineralFertilizer_ns
	case "u":
		return MineralFertilizer_u
	case "uan":
		return MineralFertilizer_uan
	case "uas":
		return MineralFertilizer_uas
	case "uni":
		return MineralFertilizer_uni

	default:
		return 0
	}
}

type MineralFertilizer_List struct{ capnp.List }

func NewMineralFertilizer_List(s *capnp.Segment, sz int32) (MineralFertilizer_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return MineralFertilizer_List{l.List}, err
}

func (l MineralFertilizer_List) At(i int) MineralFertilizer {
	ul := capnp.UInt16List{List: l.List}
	return MineralFertilizer(ul.At(i))
}

func (l MineralFertilizer_List) Set(i int, v MineralFertilizer) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type OrganicFertilizer uint16

// OrganicFertilizer_TypeID is the unique identifier for the type OrganicFertilizer.
const OrganicFertilizer_TypeID = 0xfd676465ae0b8cf0

// Values of OrganicFertilizer.
const (
	OrganicFertilizer_ash   OrganicFertilizer = 0
	OrganicFertilizer_cadlm OrganicFertilizer = 1
	OrganicFertilizer_cam   OrganicFertilizer = 2
	OrganicFertilizer_cas   OrganicFertilizer = 3
	OrganicFertilizer_cau   OrganicFertilizer = 4
	OrganicFertilizer_dgdlm OrganicFertilizer = 5
	OrganicFertilizer_gwc   OrganicFertilizer = 6
	OrganicFertilizer_hodlm OrganicFertilizer = 7
	OrganicFertilizer_mc    OrganicFertilizer = 8
	OrganicFertilizer_ms    OrganicFertilizer = 9
	OrganicFertilizer_oic   OrganicFertilizer = 10
	OrganicFertilizer_pidlm OrganicFertilizer = 11
	OrganicFertilizer_pim   OrganicFertilizer = 12
	OrganicFertilizer_pis   OrganicFertilizer = 13
	OrganicFertilizer_piu   OrganicFertilizer = 14
	OrganicFertilizer_piudk OrganicFertilizer = 15
	OrganicFertilizer_plw   OrganicFertilizer = 16
	OrganicFertilizer_podlm OrganicFertilizer = 17
	OrganicFertilizer_pom   OrganicFertilizer = 18
	OrganicFertilizer_soy   OrganicFertilizer = 19
	OrganicFertilizer_ss    OrganicFertilizer = 20
	OrganicFertilizer_tudlm OrganicFertilizer = 21
	OrganicFertilizer_weeds OrganicFertilizer = 22
	OrganicFertilizer_ws    OrganicFertilizer = 23
)

// String returns the enum's constant name.
func (c OrganicFertilizer) String() string {
	switch c {
	case OrganicFertilizer_ash:
		return "ash"
	case OrganicFertilizer_cadlm:
		return "cadlm"
	case OrganicFertilizer_cam:
		return "cam"
	case OrganicFertilizer_cas:
		return "cas"
	case OrganicFertilizer_cau:
		return "cau"
	case OrganicFertilizer_dgdlm:
		return "dgdlm"
	case OrganicFertilizer_gwc:
		return "gwc"
	case OrganicFertilizer_hodlm:
		return "hodlm"
	case OrganicFertilizer_mc:
		return "mc"
	case OrganicFertilizer_ms:
		return "ms"
	case OrganicFertilizer_oic:
		return "oic"
	case OrganicFertilizer_pidlm:
		return "pidlm"
	case OrganicFertilizer_pim:
		return "pim"
	case OrganicFertilizer_pis:
		return "pis"
	case OrganicFertilizer_piu:
		return "piu"
	case OrganicFertilizer_piudk:
		return "piudk"
	case OrganicFertilizer_plw:
		return "plw"
	case OrganicFertilizer_podlm:
		return "podlm"
	case OrganicFertilizer_pom:
		return "pom"
	case OrganicFertilizer_soy:
		return "soy"
	case OrganicFertilizer_ss:
		return "ss"
	case OrganicFertilizer_tudlm:
		return "tudlm"
	case OrganicFertilizer_weeds:
		return "weeds"
	case OrganicFertilizer_ws:
		return "ws"

	default:
		return ""
	}
}

// OrganicFertilizerFromString returns the enum value with a name,
// or the zero value if there's no such value.
func OrganicFertilizerFromString(c string) OrganicFertilizer {
	switch c {
	case "ash":
		return OrganicFertilizer_ash
	case "cadlm":
		return OrganicFertilizer_cadlm
	case "cam":
		return OrganicFertilizer_cam
	case "cas":
		return OrganicFertilizer_cas
	case "cau":
		return OrganicFertilizer_cau
	case "dgdlm":
		return OrganicFertilizer_dgdlm
	case "gwc":
		return OrganicFertilizer_gwc
	case "hodlm":
		return OrganicFertilizer_hodlm
	case "mc":
		return OrganicFertilizer_mc
	case "ms":
		return OrganicFertilizer_ms
	case "oic":
		return OrganicFertilizer_oic
	case "pidlm":
		return OrganicFertilizer_pidlm
	case "pim":
		return OrganicFertilizer_pim
	case "pis":
		return OrganicFertilizer_pis
	case "piu":
		return OrganicFertilizer_piu
	case "piudk":
		return OrganicFertilizer_piudk
	case "plw":
		return OrganicFertilizer_plw
	case "podlm":
		return OrganicFertilizer_podlm
	case "pom":
		return OrganicFertilizer_pom
	case "soy":
		return OrganicFertilizer_soy
	case "ss":
		return OrganicFertilizer_ss
	case "tudlm":
		return OrganicFertilizer_tudlm
	case "weeds":
		return OrganicFertilizer_weeds
	case "ws":
		return OrganicFertilizer_ws

	default:
		return 0
	}
}

type OrganicFertilizer_List struct{ capnp.List }

func NewOrganicFertilizer_List(s *capnp.Segment, sz int32) (OrganicFertilizer_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return OrganicFertilizer_List{l.List}, err
}

func (l OrganicFertilizer_List) At(i int) OrganicFertilizer {
	ul := capnp.UInt16List{List: l.List}
	return OrganicFertilizer(ul.At(i))
}

func (l OrganicFertilizer_List) Set(i int, v OrganicFertilizer) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type EventType uint16

// EventType_TypeID is the unique identifier for the type EventType.
const EventType_TypeID = 0xd0290daf8de9f2b0

// Values of EventType.
const (
	EventType_sowing               EventType = 0
	EventType_automaticSowing      EventType = 1
	EventType_harvest              EventType = 2
	EventType_automaticHarvest     EventType = 3
	EventType_irrigation           EventType = 4
	EventType_tillage              EventType = 5
	EventType_organicFertilization EventType = 6
	EventType_mineralFertilization EventType = 7
	EventType_nDemandFertilization EventType = 8
	EventType_cutting              EventType = 9
	EventType_setValue             EventType = 10
	EventType_saveState            EventType = 11
)

// String returns the enum's constant name.
func (c EventType) String() string {
	switch c {
	case EventType_sowing:
		return "sowing"
	case EventType_automaticSowing:
		return "automaticSowing"
	case EventType_harvest:
		return "harvest"
	case EventType_automaticHarvest:
		return "automaticHarvest"
	case EventType_irrigation:
		return "irrigation"
	case EventType_tillage:
		return "tillage"
	case EventType_organicFertilization:
		return "organicFertilization"
	case EventType_mineralFertilization:
		return "mineralFertilization"
	case EventType_nDemandFertilization:
		return "nDemandFertilization"
	case EventType_cutting:
		return "cutting"
	case EventType_setValue:
		return "setValue"
	case EventType_saveState:
		return "saveState"

	default:
		return ""
	}
}

// EventTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func EventTypeFromString(c string) EventType {
	switch c {
	case "sowing":
		return EventType_sowing
	case "automaticSowing":
		return EventType_automaticSowing
	case "harvest":
		return EventType_harvest
	case "automaticHarvest":
		return EventType_automaticHarvest
	case "irrigation":
		return EventType_irrigation
	case "tillage":
		return EventType_tillage
	case "organicFertilization":
		return EventType_organicFertilization
	case "mineralFertilization":
		return EventType_mineralFertilization
	case "nDemandFertilization":
		return EventType_nDemandFertilization
	case "cutting":
		return EventType_cutting
	case "setValue":
		return EventType_setValue
	case "saveState":
		return EventType_saveState

	default:
		return 0
	}
}

type EventType_List struct{ capnp.List }

func NewEventType_List(s *capnp.Segment, sz int32) (EventType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return EventType_List{l.List}, err
}

func (l EventType_List) At(i int) EventType {
	ul := capnp.UInt16List{List: l.List}
	return EventType(ul.At(i))
}

func (l EventType_List) Set(i int, v EventType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type PlantOrgan uint16

// PlantOrgan_TypeID is the unique identifier for the type PlantOrgan.
const PlantOrgan_TypeID = 0xb33447204cdf022c

// Values of PlantOrgan.
const (
	PlantOrgan_root   PlantOrgan = 0
	PlantOrgan_leaf   PlantOrgan = 1
	PlantOrgan_shoot  PlantOrgan = 2
	PlantOrgan_fruit  PlantOrgan = 3
	PlantOrgan_strukt PlantOrgan = 4
	PlantOrgan_sugar  PlantOrgan = 5
)

// String returns the enum's constant name.
func (c PlantOrgan) String() string {
	switch c {
	case PlantOrgan_root:
		return "root"
	case PlantOrgan_leaf:
		return "leaf"
	case PlantOrgan_shoot:
		return "shoot"
	case PlantOrgan_fruit:
		return "fruit"
	case PlantOrgan_strukt:
		return "strukt"
	case PlantOrgan_sugar:
		return "sugar"

	default:
		return ""
	}
}

// PlantOrganFromString returns the enum value with a name,
// or the zero value if there's no such value.
func PlantOrganFromString(c string) PlantOrgan {
	switch c {
	case "root":
		return PlantOrgan_root
	case "leaf":
		return PlantOrgan_leaf
	case "shoot":
		return PlantOrgan_shoot
	case "fruit":
		return PlantOrgan_fruit
	case "strukt":
		return PlantOrgan_strukt
	case "sugar":
		return PlantOrgan_sugar

	default:
		return 0
	}
}

type PlantOrgan_List struct{ capnp.List }

func NewPlantOrgan_List(s *capnp.Segment, sz int32) (PlantOrgan_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return PlantOrgan_List{l.List}, err
}

func (l PlantOrgan_List) At(i int) PlantOrgan {
	ul := capnp.UInt16List{List: l.List}
	return PlantOrgan(ul.At(i))
}

func (l PlantOrgan_List) Set(i int, v PlantOrgan) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event struct{ capnp.Struct }
type Event_at Event
type Event_between Event
type Event_after Event
type Event_Which uint16

const (
	Event_Which_at      Event_Which = 0
	Event_Which_between Event_Which = 1
	Event_Which_after   Event_Which = 2
)

func (w Event_Which) String() string {
	const s = "atbetweenafter"
	switch w {
	case Event_Which_at:
		return s[0:2]
	case Event_Which_between:
		return s[2:9]
	case Event_Which_after:
		return s[9:14]

	}
	return "Event_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Event_TypeID is the unique identifier for the type Event.
const Event_TypeID = 0xcf672ab379467704

func NewEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Event{st}, err
}

func NewRootEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Event{st}, err
}

func ReadRootEvent(msg *capnp.Message) (Event, error) {
	root, err := msg.Root()
	return Event{root.Struct()}, err
}

func (s Event) String() string {
	str, _ := text.Marshal(0xcf672ab379467704, s.Struct)
	return str
}

func (s Event) Which() Event_Which {
	return Event_Which(s.Struct.Uint16(2))
}
func (s Event) Type() Event_ExternalType {
	return Event_ExternalType(s.Struct.Uint16(0))
}

func (s Event) SetType(v Event_ExternalType) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Event) Info() (common.IdInformation, error) {
	p, err := s.Struct.Ptr(0)
	return common.IdInformation{Struct: p.Struct()}, err
}

func (s Event) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s Event) SetInfo(v common.IdInformation) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated common.IdInformation struct, preferring placement in s's segment.
func (s Event) NewInfo() (common.IdInformation, error) {
	ss, err := common.NewIdInformation(s.Struct.Segment())
	if err != nil {
		return common.IdInformation{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) At() Event_at { return Event_at(s) }

func (s Event) SetAt() {
	s.Struct.SetUint16(2, 0)
}

func (s Event_at) Date() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_at) HasDate() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_at) SetDate(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDate sets the date field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_at) NewDate() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) Between() Event_between { return Event_between(s) }

func (s Event) SetBetween() {
	s.Struct.SetUint16(2, 1)
}

func (s Event_between) Earliest() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_between) HasEarliest() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_between) SetEarliest(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEarliest sets the earliest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_between) NewEarliest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event_between) Latest() (common.Date, error) {
	p, err := s.Struct.Ptr(2)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_between) HasLatest() bool {
	return s.Struct.HasPtr(2)
}

func (s Event_between) SetLatest(v common.Date) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewLatest sets the latest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_between) NewLatest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) After() Event_after { return Event_after(s) }

func (s Event) SetAfter() {
	s.Struct.SetUint16(2, 2)
}

func (s Event_after) Event() (Event_Type, error) {
	p, err := s.Struct.Ptr(1)
	return Event_Type{Struct: p.Struct()}, err
}

func (s Event_after) HasEvent() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_after) SetEvent(v Event_Type) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated Event_Type struct, preferring placement in s's segment.
func (s Event_after) NewEvent() (Event_Type, error) {
	ss, err := NewEvent_Type(s.Struct.Segment())
	if err != nil {
		return Event_Type{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event_after) Days() uint16 {
	return s.Struct.Uint16(4)
}

func (s Event_after) SetDays(v uint16) {
	s.Struct.SetUint16(4, v)
}

func (s Event) Params() (capnp.Ptr, error) {
	return s.Struct.Ptr(3)
}

func (s Event) HasParams() bool {
	return s.Struct.HasPtr(3)
}

func (s Event) SetParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(3, v)
}

func (s Event) RunAtStartOfDay() bool {
	return s.Struct.Bit(48)
}

func (s Event) SetRunAtStartOfDay(v bool) {
	s.Struct.SetBit(48, v)
}

// Event_List is a list of Event.
type Event_List struct{ capnp.List }

// NewEvent creates a new list of Event.
func NewEvent_List(s *capnp.Segment, sz int32) (Event_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Event_List{l}, err
}

func (s Event_List) At(i int) Event { return Event{s.List.Struct(i)} }

func (s Event_List) Set(i int, v Event) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_List) String() string {
	str, _ := text.MarshalList(0xcf672ab379467704, s.List)
	return str
}

// Event_Future is a wrapper for a Event promised by a client call.
type Event_Future struct{ *capnp.Future }

func (p Event_Future) Struct() (Event, error) {
	s, err := p.Future.Struct()
	return Event{s}, err
}

func (p Event_Future) Info() common.IdInformation_Future {
	return common.IdInformation_Future{Future: p.Future.Field(0, nil)}
}

func (p Event_Future) At() Event_at_Future { return Event_at_Future{p.Future} }

// Event_at_Future is a wrapper for a Event_at promised by a client call.
type Event_at_Future struct{ *capnp.Future }

func (p Event_at_Future) Struct() (Event_at, error) {
	s, err := p.Future.Struct()
	return Event_at{s}, err
}

func (p Event_at_Future) Date() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_Future) Between() Event_between_Future { return Event_between_Future{p.Future} }

// Event_between_Future is a wrapper for a Event_between promised by a client call.
type Event_between_Future struct{ *capnp.Future }

func (p Event_between_Future) Struct() (Event_between, error) {
	s, err := p.Future.Struct()
	return Event_between{s}, err
}

func (p Event_between_Future) Earliest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_between_Future) Latest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(2, nil)}
}

func (p Event_Future) After() Event_after_Future { return Event_after_Future{p.Future} }

// Event_after_Future is a wrapper for a Event_after promised by a client call.
type Event_after_Future struct{ *capnp.Future }

func (p Event_after_Future) Struct() (Event_after, error) {
	s, err := p.Future.Struct()
	return Event_after{s}, err
}

func (p Event_after_Future) Event() Event_Type_Future {
	return Event_Type_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_Future) Params() *capnp.Future {
	return p.Future.Field(3, nil)
}

type Event_ExternalType uint16

// Event_ExternalType_TypeID is the unique identifier for the type Event_ExternalType.
const Event_ExternalType_TypeID = 0xe5484dc513ee11e0

// Values of Event_ExternalType.
const (
	Event_ExternalType_sowing               Event_ExternalType = 0
	Event_ExternalType_automaticSowing      Event_ExternalType = 1
	Event_ExternalType_harvest              Event_ExternalType = 2
	Event_ExternalType_automaticHarvest     Event_ExternalType = 3
	Event_ExternalType_irrigation           Event_ExternalType = 4
	Event_ExternalType_tillage              Event_ExternalType = 5
	Event_ExternalType_organicFertilization Event_ExternalType = 6
	Event_ExternalType_mineralFertilization Event_ExternalType = 7
	Event_ExternalType_nDemandFertilization Event_ExternalType = 8
	Event_ExternalType_cutting              Event_ExternalType = 9
)

// String returns the enum's constant name.
func (c Event_ExternalType) String() string {
	switch c {
	case Event_ExternalType_sowing:
		return "sowing"
	case Event_ExternalType_automaticSowing:
		return "automaticSowing"
	case Event_ExternalType_harvest:
		return "harvest"
	case Event_ExternalType_automaticHarvest:
		return "automaticHarvest"
	case Event_ExternalType_irrigation:
		return "irrigation"
	case Event_ExternalType_tillage:
		return "tillage"
	case Event_ExternalType_organicFertilization:
		return "organicFertilization"
	case Event_ExternalType_mineralFertilization:
		return "mineralFertilization"
	case Event_ExternalType_nDemandFertilization:
		return "nDemandFertilization"
	case Event_ExternalType_cutting:
		return "cutting"

	default:
		return ""
	}
}

// Event_ExternalTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Event_ExternalTypeFromString(c string) Event_ExternalType {
	switch c {
	case "sowing":
		return Event_ExternalType_sowing
	case "automaticSowing":
		return Event_ExternalType_automaticSowing
	case "harvest":
		return Event_ExternalType_harvest
	case "automaticHarvest":
		return Event_ExternalType_automaticHarvest
	case "irrigation":
		return Event_ExternalType_irrigation
	case "tillage":
		return Event_ExternalType_tillage
	case "organicFertilization":
		return Event_ExternalType_organicFertilization
	case "mineralFertilization":
		return Event_ExternalType_mineralFertilization
	case "nDemandFertilization":
		return Event_ExternalType_nDemandFertilization
	case "cutting":
		return Event_ExternalType_cutting

	default:
		return 0
	}
}

type Event_ExternalType_List struct{ capnp.List }

func NewEvent_ExternalType_List(s *capnp.Segment, sz int32) (Event_ExternalType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Event_ExternalType_List{l.List}, err
}

func (l Event_ExternalType_List) At(i int) Event_ExternalType {
	ul := capnp.UInt16List{List: l.List}
	return Event_ExternalType(ul.At(i))
}

func (l Event_ExternalType_List) Set(i int, v Event_ExternalType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event_PhenoStage uint16

// Event_PhenoStage_TypeID is the unique identifier for the type Event_PhenoStage.
const Event_PhenoStage_TypeID = 0xb2bf3a5557791bc1

// Values of Event_PhenoStage.
const (
	Event_PhenoStage_emergence Event_PhenoStage = 0
	Event_PhenoStage_flowering Event_PhenoStage = 1
	Event_PhenoStage_anthesis  Event_PhenoStage = 2
	Event_PhenoStage_maturity  Event_PhenoStage = 3
)

// String returns the enum's constant name.
func (c Event_PhenoStage) String() string {
	switch c {
	case Event_PhenoStage_emergence:
		return "emergence"
	case Event_PhenoStage_flowering:
		return "flowering"
	case Event_PhenoStage_anthesis:
		return "anthesis"
	case Event_PhenoStage_maturity:
		return "maturity"

	default:
		return ""
	}
}

// Event_PhenoStageFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Event_PhenoStageFromString(c string) Event_PhenoStage {
	switch c {
	case "emergence":
		return Event_PhenoStage_emergence
	case "flowering":
		return Event_PhenoStage_flowering
	case "anthesis":
		return Event_PhenoStage_anthesis
	case "maturity":
		return Event_PhenoStage_maturity

	default:
		return 0
	}
}

type Event_PhenoStage_List struct{ capnp.List }

func NewEvent_PhenoStage_List(s *capnp.Segment, sz int32) (Event_PhenoStage_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Event_PhenoStage_List{l.List}, err
}

func (l Event_PhenoStage_List) At(i int) Event_PhenoStage {
	ul := capnp.UInt16List{List: l.List}
	return Event_PhenoStage(ul.At(i))
}

func (l Event_PhenoStage_List) Set(i int, v Event_PhenoStage) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event_Type struct{ capnp.Struct }
type Event_Type_Which uint16

const (
	Event_Type_Which_external Event_Type_Which = 0
	Event_Type_Which_internal Event_Type_Which = 1
)

func (w Event_Type_Which) String() string {
	const s = "externalinternal"
	switch w {
	case Event_Type_Which_external:
		return s[0:8]
	case Event_Type_Which_internal:
		return s[8:16]

	}
	return "Event_Type_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Event_Type_TypeID is the unique identifier for the type Event_Type.
const Event_Type_TypeID = 0xb91010c363e568a4

func NewEvent_Type(s *capnp.Segment) (Event_Type, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Event_Type{st}, err
}

func NewRootEvent_Type(s *capnp.Segment) (Event_Type, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Event_Type{st}, err
}

func ReadRootEvent_Type(msg *capnp.Message) (Event_Type, error) {
	root, err := msg.Root()
	return Event_Type{root.Struct()}, err
}

func (s Event_Type) String() string {
	str, _ := text.Marshal(0xb91010c363e568a4, s.Struct)
	return str
}

func (s Event_Type) Which() Event_Type_Which {
	return Event_Type_Which(s.Struct.Uint16(2))
}
func (s Event_Type) External() Event_ExternalType {
	if s.Struct.Uint16(2) != 0 {
		panic("Which() != external")
	}
	return Event_ExternalType(s.Struct.Uint16(0))
}

func (s Event_Type) SetExternal(v Event_ExternalType) {
	s.Struct.SetUint16(2, 0)
	s.Struct.SetUint16(0, uint16(v))
}

func (s Event_Type) Internal() Event_PhenoStage {
	if s.Struct.Uint16(2) != 1 {
		panic("Which() != internal")
	}
	return Event_PhenoStage(s.Struct.Uint16(0))
}

func (s Event_Type) SetInternal(v Event_PhenoStage) {
	s.Struct.SetUint16(2, 1)
	s.Struct.SetUint16(0, uint16(v))
}

// Event_Type_List is a list of Event_Type.
type Event_Type_List struct{ capnp.List }

// NewEvent_Type creates a new list of Event_Type.
func NewEvent_Type_List(s *capnp.Segment, sz int32) (Event_Type_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Event_Type_List{l}, err
}

func (s Event_Type_List) At(i int) Event_Type { return Event_Type{s.List.Struct(i)} }

func (s Event_Type_List) Set(i int, v Event_Type) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_Type_List) String() string {
	str, _ := text.MarshalList(0xb91010c363e568a4, s.List)
	return str
}

// Event_Type_Future is a wrapper for a Event_Type promised by a client call.
type Event_Type_Future struct{ *capnp.Future }

func (p Event_Type_Future) Struct() (Event_Type, error) {
	s, err := p.Future.Struct()
	return Event_Type{s}, err
}

type Params struct{ capnp.Struct }

// Params_TypeID is the unique identifier for the type Params.
const Params_TypeID = 0xcb20e21466098705

func NewParams(s *capnp.Segment) (Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Params{st}, err
}

func NewRootParams(s *capnp.Segment) (Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Params{st}, err
}

func ReadRootParams(msg *capnp.Message) (Params, error) {
	root, err := msg.Root()
	return Params{root.Struct()}, err
}

func (s Params) String() string {
	str, _ := text.Marshal(0xcb20e21466098705, s.Struct)
	return str
}

// Params_List is a list of Params.
type Params_List struct{ capnp.List }

// NewParams creates a new list of Params.
func NewParams_List(s *capnp.Segment, sz int32) (Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Params_List{l}, err
}

func (s Params_List) At(i int) Params { return Params{s.List.Struct(i)} }

func (s Params_List) Set(i int, v Params) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_List) String() string {
	str, _ := text.MarshalList(0xcb20e21466098705, s.List)
	return str
}

// Params_Future is a wrapper for a Params promised by a client call.
type Params_Future struct{ *capnp.Future }

func (p Params_Future) Struct() (Params, error) {
	s, err := p.Future.Struct()
	return Params{s}, err
}

type Params_Sowing struct{ capnp.Struct }

// Params_Sowing_TypeID is the unique identifier for the type Params_Sowing.
const Params_Sowing_TypeID = 0xc6880d1c13ec14dc

func NewParams_Sowing(s *capnp.Segment) (Params_Sowing, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Sowing{st}, err
}

func NewRootParams_Sowing(s *capnp.Segment) (Params_Sowing, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Sowing{st}, err
}

func ReadRootParams_Sowing(msg *capnp.Message) (Params_Sowing, error) {
	root, err := msg.Root()
	return Params_Sowing{root.Struct()}, err
}

func (s Params_Sowing) String() string {
	str, _ := text.Marshal(0xc6880d1c13ec14dc, s.Struct)
	return str
}

func (s Params_Sowing) Cultivar() crop.Cultivar {
	return crop.Cultivar(s.Struct.Uint16(0))
}

func (s Params_Sowing) SetCultivar(v crop.Cultivar) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Params_Sowing) PlantDensity() uint16 {
	return s.Struct.Uint16(2)
}

func (s Params_Sowing) SetPlantDensity(v uint16) {
	s.Struct.SetUint16(2, v)
}

func (s Params_Sowing) Crop() crop.Crop {
	p, _ := s.Struct.Ptr(0)
	return crop.Crop{Client: p.Interface().Client()}
}

func (s Params_Sowing) HasCrop() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Sowing) SetCrop(v crop.Crop) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Params_Sowing_List is a list of Params_Sowing.
type Params_Sowing_List struct{ capnp.List }

// NewParams_Sowing creates a new list of Params_Sowing.
func NewParams_Sowing_List(s *capnp.Segment, sz int32) (Params_Sowing_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Sowing_List{l}, err
}

func (s Params_Sowing_List) At(i int) Params_Sowing { return Params_Sowing{s.List.Struct(i)} }

func (s Params_Sowing_List) Set(i int, v Params_Sowing) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Sowing_List) String() string {
	str, _ := text.MarshalList(0xc6880d1c13ec14dc, s.List)
	return str
}

// Params_Sowing_Future is a wrapper for a Params_Sowing promised by a client call.
type Params_Sowing_Future struct{ *capnp.Future }

func (p Params_Sowing_Future) Struct() (Params_Sowing, error) {
	s, err := p.Future.Struct()
	return Params_Sowing{s}, err
}

func (p Params_Sowing_Future) Crop() crop.Crop {
	return crop.Crop{Client: p.Future.Field(0, nil).Client()}
}

type Params_AutomaticSowing struct{ capnp.Struct }

// Params_AutomaticSowing_TypeID is the unique identifier for the type Params_AutomaticSowing.
const Params_AutomaticSowing_TypeID = 0xd1bfc1c9617d9453

func NewParams_AutomaticSowing(s *capnp.Segment) (Params_AutomaticSowing, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2})
	return Params_AutomaticSowing{st}, err
}

func NewRootParams_AutomaticSowing(s *capnp.Segment) (Params_AutomaticSowing, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2})
	return Params_AutomaticSowing{st}, err
}

func ReadRootParams_AutomaticSowing(msg *capnp.Message) (Params_AutomaticSowing, error) {
	root, err := msg.Root()
	return Params_AutomaticSowing{root.Struct()}, err
}

func (s Params_AutomaticSowing) String() string {
	str, _ := text.Marshal(0xd1bfc1c9617d9453, s.Struct)
	return str
}

func (s Params_AutomaticSowing) Sowing() (Params_Sowing, error) {
	p, err := s.Struct.Ptr(1)
	return Params_Sowing{Struct: p.Struct()}, err
}

func (s Params_AutomaticSowing) HasSowing() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_AutomaticSowing) SetSowing(v Params_Sowing) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewSowing sets the sowing field to a newly
// allocated Params_Sowing struct, preferring placement in s's segment.
func (s Params_AutomaticSowing) NewSowing() (Params_Sowing, error) {
	ss, err := NewParams_Sowing(s.Struct.Segment())
	if err != nil {
		return Params_Sowing{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_AutomaticSowing) MinTempThreshold() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_AutomaticSowing) SetMinTempThreshold(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_AutomaticSowing) DaysInTempWindow() uint16 {
	return s.Struct.Uint16(8)
}

func (s Params_AutomaticSowing) SetDaysInTempWindow(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Params_AutomaticSowing) MinPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticSowing) SetMinPercentASW(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_AutomaticSowing) MaxPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(24) ^ 0x4059000000000000)
}

func (s Params_AutomaticSowing) SetMaxPercentASW(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v)^0x4059000000000000)
}

func (s Params_AutomaticSowing) Max3dayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_AutomaticSowing) SetMax3dayPrecipSum(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

func (s Params_AutomaticSowing) MaxCurrentDayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(40))
}

func (s Params_AutomaticSowing) SetMaxCurrentDayPrecipSum(v float64) {
	s.Struct.SetUint64(40, math.Float64bits(v))
}

func (s Params_AutomaticSowing) TempSumAboveBaseTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(48))
}

func (s Params_AutomaticSowing) SetTempSumAboveBaseTemp(v float64) {
	s.Struct.SetUint64(48, math.Float64bits(v))
}

func (s Params_AutomaticSowing) BaseTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(56))
}

func (s Params_AutomaticSowing) SetBaseTemp(v float64) {
	s.Struct.SetUint64(56, math.Float64bits(v))
}

func (s Params_AutomaticSowing) AvgSoilTemp() (Params_AutomaticSowing_AvgSoilTemp, error) {
	p, err := s.Struct.Ptr(0)
	return Params_AutomaticSowing_AvgSoilTemp{Struct: p.Struct()}, err
}

func (s Params_AutomaticSowing) HasAvgSoilTemp() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_AutomaticSowing) SetAvgSoilTemp(v Params_AutomaticSowing_AvgSoilTemp) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAvgSoilTemp sets the avgSoilTemp field to a newly
// allocated Params_AutomaticSowing_AvgSoilTemp struct, preferring placement in s's segment.
func (s Params_AutomaticSowing) NewAvgSoilTemp() (Params_AutomaticSowing_AvgSoilTemp, error) {
	ss, err := NewParams_AutomaticSowing_AvgSoilTemp(s.Struct.Segment())
	if err != nil {
		return Params_AutomaticSowing_AvgSoilTemp{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_AutomaticSowing_List is a list of Params_AutomaticSowing.
type Params_AutomaticSowing_List struct{ capnp.List }

// NewParams_AutomaticSowing creates a new list of Params_AutomaticSowing.
func NewParams_AutomaticSowing_List(s *capnp.Segment, sz int32) (Params_AutomaticSowing_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2}, sz)
	return Params_AutomaticSowing_List{l}, err
}

func (s Params_AutomaticSowing_List) At(i int) Params_AutomaticSowing {
	return Params_AutomaticSowing{s.List.Struct(i)}
}

func (s Params_AutomaticSowing_List) Set(i int, v Params_AutomaticSowing) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticSowing_List) String() string {
	str, _ := text.MarshalList(0xd1bfc1c9617d9453, s.List)
	return str
}

// Params_AutomaticSowing_Future is a wrapper for a Params_AutomaticSowing promised by a client call.
type Params_AutomaticSowing_Future struct{ *capnp.Future }

func (p Params_AutomaticSowing_Future) Struct() (Params_AutomaticSowing, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticSowing{s}, err
}

func (p Params_AutomaticSowing_Future) Sowing() Params_Sowing_Future {
	return Params_Sowing_Future{Future: p.Future.Field(1, nil)}
}

func (p Params_AutomaticSowing_Future) AvgSoilTemp() Params_AutomaticSowing_AvgSoilTemp_Future {
	return Params_AutomaticSowing_AvgSoilTemp_Future{Future: p.Future.Field(0, nil)}
}

type Params_AutomaticSowing_AvgSoilTemp struct{ capnp.Struct }

// Params_AutomaticSowing_AvgSoilTemp_TypeID is the unique identifier for the type Params_AutomaticSowing_AvgSoilTemp.
const Params_AutomaticSowing_AvgSoilTemp_TypeID = 0x846f567433b186d1

func NewParams_AutomaticSowing_AvgSoilTemp(s *capnp.Segment) (Params_AutomaticSowing_AvgSoilTemp, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_AutomaticSowing_AvgSoilTemp{st}, err
}

func NewRootParams_AutomaticSowing_AvgSoilTemp(s *capnp.Segment) (Params_AutomaticSowing_AvgSoilTemp, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_AutomaticSowing_AvgSoilTemp{st}, err
}

func ReadRootParams_AutomaticSowing_AvgSoilTemp(msg *capnp.Message) (Params_AutomaticSowing_AvgSoilTemp, error) {
	root, err := msg.Root()
	return Params_AutomaticSowing_AvgSoilTemp{root.Struct()}, err
}

func (s Params_AutomaticSowing_AvgSoilTemp) String() string {
	str, _ := text.Marshal(0x846f567433b186d1, s.Struct)
	return str
}

func (s Params_AutomaticSowing_AvgSoilTemp) SoilDepthForAveraging() float64 {
	return math.Float64frombits(s.Struct.Uint64(0) ^ 0x3fd3333333333333)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetSoilDepthForAveraging(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v)^0x3fd3333333333333)
}

func (s Params_AutomaticSowing_AvgSoilTemp) DaysInSoilTempWindow() uint16 {
	return s.Struct.Uint16(8)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetDaysInSoilTempWindow(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SowingIfAboveAvgSoilTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetSowingIfAboveAvgSoilTemp(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// Params_AutomaticSowing_AvgSoilTemp_List is a list of Params_AutomaticSowing_AvgSoilTemp.
type Params_AutomaticSowing_AvgSoilTemp_List struct{ capnp.List }

// NewParams_AutomaticSowing_AvgSoilTemp creates a new list of Params_AutomaticSowing_AvgSoilTemp.
func NewParams_AutomaticSowing_AvgSoilTemp_List(s *capnp.Segment, sz int32) (Params_AutomaticSowing_AvgSoilTemp_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_AutomaticSowing_AvgSoilTemp_List{l}, err
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) At(i int) Params_AutomaticSowing_AvgSoilTemp {
	return Params_AutomaticSowing_AvgSoilTemp{s.List.Struct(i)}
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) Set(i int, v Params_AutomaticSowing_AvgSoilTemp) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) String() string {
	str, _ := text.MarshalList(0x846f567433b186d1, s.List)
	return str
}

// Params_AutomaticSowing_AvgSoilTemp_Future is a wrapper for a Params_AutomaticSowing_AvgSoilTemp promised by a client call.
type Params_AutomaticSowing_AvgSoilTemp_Future struct{ *capnp.Future }

func (p Params_AutomaticSowing_AvgSoilTemp_Future) Struct() (Params_AutomaticSowing_AvgSoilTemp, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticSowing_AvgSoilTemp{s}, err
}

type Params_Harvest struct{ capnp.Struct }

// Params_Harvest_TypeID is the unique identifier for the type Params_Harvest.
const Params_Harvest_TypeID = 0x8feb941d70f2a468

func NewParams_Harvest(s *capnp.Segment) (Params_Harvest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Harvest{st}, err
}

func NewRootParams_Harvest(s *capnp.Segment) (Params_Harvest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Harvest{st}, err
}

func ReadRootParams_Harvest(msg *capnp.Message) (Params_Harvest, error) {
	root, err := msg.Root()
	return Params_Harvest{root.Struct()}, err
}

func (s Params_Harvest) String() string {
	str, _ := text.Marshal(0x8feb941d70f2a468, s.Struct)
	return str
}

func (s Params_Harvest) Exported() bool {
	return !s.Struct.Bit(0)
}

func (s Params_Harvest) SetExported(v bool) {
	s.Struct.SetBit(0, !v)
}

func (s Params_Harvest) OptCarbMgmtData() (Params_Harvest_OptCarbonMgmtData, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Harvest_OptCarbonMgmtData{Struct: p.Struct()}, err
}

func (s Params_Harvest) HasOptCarbMgmtData() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Harvest) SetOptCarbMgmtData(v Params_Harvest_OptCarbonMgmtData) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewOptCarbMgmtData sets the optCarbMgmtData field to a newly
// allocated Params_Harvest_OptCarbonMgmtData struct, preferring placement in s's segment.
func (s Params_Harvest) NewOptCarbMgmtData() (Params_Harvest_OptCarbonMgmtData, error) {
	ss, err := NewParams_Harvest_OptCarbonMgmtData(s.Struct.Segment())
	if err != nil {
		return Params_Harvest_OptCarbonMgmtData{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_Harvest_List is a list of Params_Harvest.
type Params_Harvest_List struct{ capnp.List }

// NewParams_Harvest creates a new list of Params_Harvest.
func NewParams_Harvest_List(s *capnp.Segment, sz int32) (Params_Harvest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Harvest_List{l}, err
}

func (s Params_Harvest_List) At(i int) Params_Harvest { return Params_Harvest{s.List.Struct(i)} }

func (s Params_Harvest_List) Set(i int, v Params_Harvest) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Harvest_List) String() string {
	str, _ := text.MarshalList(0x8feb941d70f2a468, s.List)
	return str
}

// Params_Harvest_Future is a wrapper for a Params_Harvest promised by a client call.
type Params_Harvest_Future struct{ *capnp.Future }

func (p Params_Harvest_Future) Struct() (Params_Harvest, error) {
	s, err := p.Future.Struct()
	return Params_Harvest{s}, err
}

func (p Params_Harvest_Future) OptCarbMgmtData() Params_Harvest_OptCarbonMgmtData_Future {
	return Params_Harvest_OptCarbonMgmtData_Future{Future: p.Future.Field(0, nil)}
}

type Params_Harvest_CropUsage uint16

// Params_Harvest_CropUsage_TypeID is the unique identifier for the type Params_Harvest_CropUsage.
const Params_Harvest_CropUsage_TypeID = 0xa9a9bc941e963701

// Values of Params_Harvest_CropUsage.
const (
	Params_Harvest_CropUsage_greenManure       Params_Harvest_CropUsage = 0
	Params_Harvest_CropUsage_biomassProduction Params_Harvest_CropUsage = 1
)

// String returns the enum's constant name.
func (c Params_Harvest_CropUsage) String() string {
	switch c {
	case Params_Harvest_CropUsage_greenManure:
		return "greenManure"
	case Params_Harvest_CropUsage_biomassProduction:
		return "biomassProduction"

	default:
		return ""
	}
}

// Params_Harvest_CropUsageFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Harvest_CropUsageFromString(c string) Params_Harvest_CropUsage {
	switch c {
	case "greenManure":
		return Params_Harvest_CropUsage_greenManure
	case "biomassProduction":
		return Params_Harvest_CropUsage_biomassProduction

	default:
		return 0
	}
}

type Params_Harvest_CropUsage_List struct{ capnp.List }

func NewParams_Harvest_CropUsage_List(s *capnp.Segment, sz int32) (Params_Harvest_CropUsage_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Harvest_CropUsage_List{l.List}, err
}

func (l Params_Harvest_CropUsage_List) At(i int) Params_Harvest_CropUsage {
	ul := capnp.UInt16List{List: l.List}
	return Params_Harvest_CropUsage(ul.At(i))
}

func (l Params_Harvest_CropUsage_List) Set(i int, v Params_Harvest_CropUsage) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Harvest_OptCarbonMgmtData struct{ capnp.Struct }

// Params_Harvest_OptCarbonMgmtData_TypeID is the unique identifier for the type Params_Harvest_OptCarbonMgmtData.
const Params_Harvest_OptCarbonMgmtData_TypeID = 0xaf49ab9bbe76e375

func NewParams_Harvest_OptCarbonMgmtData(s *capnp.Segment) (Params_Harvest_OptCarbonMgmtData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return Params_Harvest_OptCarbonMgmtData{st}, err
}

func NewRootParams_Harvest_OptCarbonMgmtData(s *capnp.Segment) (Params_Harvest_OptCarbonMgmtData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return Params_Harvest_OptCarbonMgmtData{st}, err
}

func ReadRootParams_Harvest_OptCarbonMgmtData(msg *capnp.Message) (Params_Harvest_OptCarbonMgmtData, error) {
	root, err := msg.Root()
	return Params_Harvest_OptCarbonMgmtData{root.Struct()}, err
}

func (s Params_Harvest_OptCarbonMgmtData) String() string {
	str, _ := text.Marshal(0xaf49ab9bbe76e375, s.Struct)
	return str
}

func (s Params_Harvest_OptCarbonMgmtData) OptCarbonConservation() bool {
	return s.Struct.Bit(0)
}

func (s Params_Harvest_OptCarbonMgmtData) SetOptCarbonConservation(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Params_Harvest_OptCarbonMgmtData) CropImpactOnHumusBalance() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Harvest_OptCarbonMgmtData) SetCropImpactOnHumusBalance(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) CropUsage() Params_Harvest_CropUsage {
	return Params_Harvest_CropUsage(s.Struct.Uint16(2) ^ 1)
}

func (s Params_Harvest_OptCarbonMgmtData) SetCropUsage(v Params_Harvest_CropUsage) {
	s.Struct.SetUint16(2, uint16(v)^1)
}

func (s Params_Harvest_OptCarbonMgmtData) ResidueHeq() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_Harvest_OptCarbonMgmtData) SetResidueHeq(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) OrganicFertilizerHeq() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_Harvest_OptCarbonMgmtData) SetOrganicFertilizerHeq(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) MaxResidueRecoverFraction() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_Harvest_OptCarbonMgmtData) SetMaxResidueRecoverFraction(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

// Params_Harvest_OptCarbonMgmtData_List is a list of Params_Harvest_OptCarbonMgmtData.
type Params_Harvest_OptCarbonMgmtData_List struct{ capnp.List }

// NewParams_Harvest_OptCarbonMgmtData creates a new list of Params_Harvest_OptCarbonMgmtData.
func NewParams_Harvest_OptCarbonMgmtData_List(s *capnp.Segment, sz int32) (Params_Harvest_OptCarbonMgmtData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0}, sz)
	return Params_Harvest_OptCarbonMgmtData_List{l}, err
}

func (s Params_Harvest_OptCarbonMgmtData_List) At(i int) Params_Harvest_OptCarbonMgmtData {
	return Params_Harvest_OptCarbonMgmtData{s.List.Struct(i)}
}

func (s Params_Harvest_OptCarbonMgmtData_List) Set(i int, v Params_Harvest_OptCarbonMgmtData) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Harvest_OptCarbonMgmtData_List) String() string {
	str, _ := text.MarshalList(0xaf49ab9bbe76e375, s.List)
	return str
}

// Params_Harvest_OptCarbonMgmtData_Future is a wrapper for a Params_Harvest_OptCarbonMgmtData promised by a client call.
type Params_Harvest_OptCarbonMgmtData_Future struct{ *capnp.Future }

func (p Params_Harvest_OptCarbonMgmtData_Future) Struct() (Params_Harvest_OptCarbonMgmtData, error) {
	s, err := p.Future.Struct()
	return Params_Harvest_OptCarbonMgmtData{s}, err
}

type Params_AutomaticHarvest struct{ capnp.Struct }

// Params_AutomaticHarvest_TypeID is the unique identifier for the type Params_AutomaticHarvest.
const Params_AutomaticHarvest_TypeID = 0xf805d22fabb80702

func NewParams_AutomaticHarvest(s *capnp.Segment) (Params_AutomaticHarvest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Params_AutomaticHarvest{st}, err
}

func NewRootParams_AutomaticHarvest(s *capnp.Segment) (Params_AutomaticHarvest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Params_AutomaticHarvest{st}, err
}

func ReadRootParams_AutomaticHarvest(msg *capnp.Message) (Params_AutomaticHarvest, error) {
	root, err := msg.Root()
	return Params_AutomaticHarvest{root.Struct()}, err
}

func (s Params_AutomaticHarvest) String() string {
	str, _ := text.Marshal(0xf805d22fabb80702, s.Struct)
	return str
}

func (s Params_AutomaticHarvest) Harvest() (Params_Harvest, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Harvest{Struct: p.Struct()}, err
}

func (s Params_AutomaticHarvest) HasHarvest() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_AutomaticHarvest) SetHarvest(v Params_Harvest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewHarvest sets the harvest field to a newly
// allocated Params_Harvest struct, preferring placement in s's segment.
func (s Params_AutomaticHarvest) NewHarvest() (Params_Harvest, error) {
	ss, err := NewParams_Harvest(s.Struct.Segment())
	if err != nil {
		return Params_Harvest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_AutomaticHarvest) MinPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_AutomaticHarvest) SetMinPercentASW(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) MaxPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(8) ^ 0x4059000000000000)
}

func (s Params_AutomaticHarvest) SetMaxPercentASW(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v)^0x4059000000000000)
}

func (s Params_AutomaticHarvest) Max3dayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticHarvest) SetMax3dayPrecipSum(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) MaxCurrentDayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_AutomaticHarvest) SetMaxCurrentDayPrecipSum(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) HarvestTime() Event_PhenoStage {
	return Event_PhenoStage(s.Struct.Uint16(32) ^ 3)
}

func (s Params_AutomaticHarvest) SetHarvestTime(v Event_PhenoStage) {
	s.Struct.SetUint16(32, uint16(v)^3)
}

// Params_AutomaticHarvest_List is a list of Params_AutomaticHarvest.
type Params_AutomaticHarvest_List struct{ capnp.List }

// NewParams_AutomaticHarvest creates a new list of Params_AutomaticHarvest.
func NewParams_AutomaticHarvest_List(s *capnp.Segment, sz int32) (Params_AutomaticHarvest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1}, sz)
	return Params_AutomaticHarvest_List{l}, err
}

func (s Params_AutomaticHarvest_List) At(i int) Params_AutomaticHarvest {
	return Params_AutomaticHarvest{s.List.Struct(i)}
}

func (s Params_AutomaticHarvest_List) Set(i int, v Params_AutomaticHarvest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticHarvest_List) String() string {
	str, _ := text.MarshalList(0xf805d22fabb80702, s.List)
	return str
}

// Params_AutomaticHarvest_Future is a wrapper for a Params_AutomaticHarvest promised by a client call.
type Params_AutomaticHarvest_Future struct{ *capnp.Future }

func (p Params_AutomaticHarvest_Future) Struct() (Params_AutomaticHarvest, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticHarvest{s}, err
}

func (p Params_AutomaticHarvest_Future) Harvest() Params_Harvest_Future {
	return Params_Harvest_Future{Future: p.Future.Field(0, nil)}
}

type Params_Cutting struct{ capnp.Struct }

// Params_Cutting_TypeID is the unique identifier for the type Params_Cutting.
const Params_Cutting_TypeID = 0x8460dac6abff7ed9

func NewParams_Cutting(s *capnp.Segment) (Params_Cutting, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Cutting{st}, err
}

func NewRootParams_Cutting(s *capnp.Segment) (Params_Cutting, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Cutting{st}, err
}

func ReadRootParams_Cutting(msg *capnp.Message) (Params_Cutting, error) {
	root, err := msg.Root()
	return Params_Cutting{root.Struct()}, err
}

func (s Params_Cutting) String() string {
	str, _ := text.Marshal(0x8460dac6abff7ed9, s.Struct)
	return str
}

func (s Params_Cutting) CuttingSpec() (Params_Cutting_Spec_List, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Cutting_Spec_List{List: p.List()}, err
}

func (s Params_Cutting) HasCuttingSpec() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Cutting) SetCuttingSpec(v Params_Cutting_Spec_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCuttingSpec sets the cuttingSpec field to a newly
// allocated Params_Cutting_Spec_List, preferring placement in s's segment.
func (s Params_Cutting) NewCuttingSpec(n int32) (Params_Cutting_Spec_List, error) {
	l, err := NewParams_Cutting_Spec_List(s.Struct.Segment(), n)
	if err != nil {
		return Params_Cutting_Spec_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Params_Cutting) CutMaxAssimilationRatePercentage() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Cutting) SetCutMaxAssimilationRatePercentage(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Params_Cutting_List is a list of Params_Cutting.
type Params_Cutting_List struct{ capnp.List }

// NewParams_Cutting creates a new list of Params_Cutting.
func NewParams_Cutting_List(s *capnp.Segment, sz int32) (Params_Cutting_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Cutting_List{l}, err
}

func (s Params_Cutting_List) At(i int) Params_Cutting { return Params_Cutting{s.List.Struct(i)} }

func (s Params_Cutting_List) Set(i int, v Params_Cutting) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Cutting_List) String() string {
	str, _ := text.MarshalList(0x8460dac6abff7ed9, s.List)
	return str
}

// Params_Cutting_Future is a wrapper for a Params_Cutting promised by a client call.
type Params_Cutting_Future struct{ *capnp.Future }

func (p Params_Cutting_Future) Struct() (Params_Cutting, error) {
	s, err := p.Future.Struct()
	return Params_Cutting{s}, err
}

type Params_Cutting_CL uint16

// Params_Cutting_CL_TypeID is the unique identifier for the type Params_Cutting_CL.
const Params_Cutting_CL_TypeID = 0xe444f780b29541a7

// Values of Params_Cutting_CL.
const (
	Params_Cutting_CL_cut  Params_Cutting_CL = 0
	Params_Cutting_CL_left Params_Cutting_CL = 1
)

// String returns the enum's constant name.
func (c Params_Cutting_CL) String() string {
	switch c {
	case Params_Cutting_CL_cut:
		return "cut"
	case Params_Cutting_CL_left:
		return "left"

	default:
		return ""
	}
}

// Params_Cutting_CLFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Cutting_CLFromString(c string) Params_Cutting_CL {
	switch c {
	case "cut":
		return Params_Cutting_CL_cut
	case "left":
		return Params_Cutting_CL_left

	default:
		return 0
	}
}

type Params_Cutting_CL_List struct{ capnp.List }

func NewParams_Cutting_CL_List(s *capnp.Segment, sz int32) (Params_Cutting_CL_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Cutting_CL_List{l.List}, err
}

func (l Params_Cutting_CL_List) At(i int) Params_Cutting_CL {
	ul := capnp.UInt16List{List: l.List}
	return Params_Cutting_CL(ul.At(i))
}

func (l Params_Cutting_CL_List) Set(i int, v Params_Cutting_CL) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Cutting_Unit uint16

// Params_Cutting_Unit_TypeID is the unique identifier for the type Params_Cutting_Unit.
const Params_Cutting_Unit_TypeID = 0x94d32947f136655e

// Values of Params_Cutting_Unit.
const (
	Params_Cutting_Unit_percentage Params_Cutting_Unit = 0
	Params_Cutting_Unit_biomass    Params_Cutting_Unit = 1
	Params_Cutting_Unit_lai        Params_Cutting_Unit = 2
)

// String returns the enum's constant name.
func (c Params_Cutting_Unit) String() string {
	switch c {
	case Params_Cutting_Unit_percentage:
		return "percentage"
	case Params_Cutting_Unit_biomass:
		return "biomass"
	case Params_Cutting_Unit_lai:
		return "lai"

	default:
		return ""
	}
}

// Params_Cutting_UnitFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Cutting_UnitFromString(c string) Params_Cutting_Unit {
	switch c {
	case "percentage":
		return Params_Cutting_Unit_percentage
	case "biomass":
		return Params_Cutting_Unit_biomass
	case "lai":
		return Params_Cutting_Unit_lai

	default:
		return 0
	}
}

type Params_Cutting_Unit_List struct{ capnp.List }

func NewParams_Cutting_Unit_List(s *capnp.Segment, sz int32) (Params_Cutting_Unit_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Cutting_Unit_List{l.List}, err
}

func (l Params_Cutting_Unit_List) At(i int) Params_Cutting_Unit {
	ul := capnp.UInt16List{List: l.List}
	return Params_Cutting_Unit(ul.At(i))
}

func (l Params_Cutting_Unit_List) Set(i int, v Params_Cutting_Unit) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Cutting_Spec struct{ capnp.Struct }

// Params_Cutting_Spec_TypeID is the unique identifier for the type Params_Cutting_Spec.
const Params_Cutting_Spec_TypeID = 0xfae5dcfccbb93a23

func NewParams_Cutting_Spec(s *capnp.Segment) (Params_Cutting_Spec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_Cutting_Spec{st}, err
}

func NewRootParams_Cutting_Spec(s *capnp.Segment) (Params_Cutting_Spec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_Cutting_Spec{st}, err
}

func ReadRootParams_Cutting_Spec(msg *capnp.Message) (Params_Cutting_Spec, error) {
	root, err := msg.Root()
	return Params_Cutting_Spec{root.Struct()}, err
}

func (s Params_Cutting_Spec) String() string {
	str, _ := text.Marshal(0xfae5dcfccbb93a23, s.Struct)
	return str
}

func (s Params_Cutting_Spec) Organ() PlantOrgan {
	return PlantOrgan(s.Struct.Uint16(0))
}

func (s Params_Cutting_Spec) SetOrgan(v PlantOrgan) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Params_Cutting_Spec) Value() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Cutting_Spec) SetValue(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_Cutting_Spec) Unit() Params_Cutting_Unit {
	return Params_Cutting_Unit(s.Struct.Uint16(2))
}

func (s Params_Cutting_Spec) SetUnit(v Params_Cutting_Unit) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Params_Cutting_Spec) CutOrLeft() Params_Cutting_CL {
	return Params_Cutting_CL(s.Struct.Uint16(4))
}

func (s Params_Cutting_Spec) SetCutOrLeft(v Params_Cutting_CL) {
	s.Struct.SetUint16(4, uint16(v))
}

func (s Params_Cutting_Spec) ExportPercentage() float64 {
	return math.Float64frombits(s.Struct.Uint64(16) ^ 0x4059000000000000)
}

func (s Params_Cutting_Spec) SetExportPercentage(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v)^0x4059000000000000)
}

// Params_Cutting_Spec_List is a list of Params_Cutting_Spec.
type Params_Cutting_Spec_List struct{ capnp.List }

// NewParams_Cutting_Spec creates a new list of Params_Cutting_Spec.
func NewParams_Cutting_Spec_List(s *capnp.Segment, sz int32) (Params_Cutting_Spec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_Cutting_Spec_List{l}, err
}

func (s Params_Cutting_Spec_List) At(i int) Params_Cutting_Spec {
	return Params_Cutting_Spec{s.List.Struct(i)}
}

func (s Params_Cutting_Spec_List) Set(i int, v Params_Cutting_Spec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Cutting_Spec_List) String() string {
	str, _ := text.MarshalList(0xfae5dcfccbb93a23, s.List)
	return str
}

// Params_Cutting_Spec_Future is a wrapper for a Params_Cutting_Spec promised by a client call.
type Params_Cutting_Spec_Future struct{ *capnp.Future }

func (p Params_Cutting_Spec_Future) Struct() (Params_Cutting_Spec, error) {
	s, err := p.Future.Struct()
	return Params_Cutting_Spec{s}, err
}

type Params_MineralFertilization struct{ capnp.Struct }

// Params_MineralFertilization_TypeID is the unique identifier for the type Params_MineralFertilization.
const Params_MineralFertilization_TypeID = 0xa363d226e178debd

func NewParams_MineralFertilization(s *capnp.Segment) (Params_MineralFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_MineralFertilization{st}, err
}

func NewRootParams_MineralFertilization(s *capnp.Segment) (Params_MineralFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_MineralFertilization{st}, err
}

func ReadRootParams_MineralFertilization(msg *capnp.Message) (Params_MineralFertilization, error) {
	root, err := msg.Root()
	return Params_MineralFertilization{root.Struct()}, err
}

func (s Params_MineralFertilization) String() string {
	str, _ := text.Marshal(0xa363d226e178debd, s.Struct)
	return str
}

func (s Params_MineralFertilization) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_MineralFertilization) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_MineralFertilization) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_MineralFertilization) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_MineralFertilization) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_MineralFertilization) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Params_MineralFertilization_List is a list of Params_MineralFertilization.
type Params_MineralFertilization_List struct{ capnp.List }

// NewParams_MineralFertilization creates a new list of Params_MineralFertilization.
func NewParams_MineralFertilization_List(s *capnp.Segment, sz int32) (Params_MineralFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_MineralFertilization_List{l}, err
}

func (s Params_MineralFertilization_List) At(i int) Params_MineralFertilization {
	return Params_MineralFertilization{s.List.Struct(i)}
}

func (s Params_MineralFertilization_List) Set(i int, v Params_MineralFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_MineralFertilization_List) String() string {
	str, _ := text.MarshalList(0xa363d226e178debd, s.List)
	return str
}

// Params_MineralFertilization_Future is a wrapper for a Params_MineralFertilization promised by a client call.
type Params_MineralFertilization_Future struct{ *capnp.Future }

func (p Params_MineralFertilization_Future) Struct() (Params_MineralFertilization, error) {
	s, err := p.Future.Struct()
	return Params_MineralFertilization{s}, err
}

func (p Params_MineralFertilization_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_MineralFertilization_Parameters struct{ capnp.Struct }

// Params_MineralFertilization_Parameters_TypeID is the unique identifier for the type Params_MineralFertilization_Parameters.
const Params_MineralFertilization_Parameters_TypeID = 0xc75b5ef2e9b05c2d

func NewParams_MineralFertilization_Parameters(s *capnp.Segment) (Params_MineralFertilization_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return Params_MineralFertilization_Parameters{st}, err
}

func NewRootParams_MineralFertilization_Parameters(s *capnp.Segment) (Params_MineralFertilization_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return Params_MineralFertilization_Parameters{st}, err
}

func ReadRootParams_MineralFertilization_Parameters(msg *capnp.Message) (Params_MineralFertilization_Parameters, error) {
	root, err := msg.Root()
	return Params_MineralFertilization_Parameters{root.Struct()}, err
}

func (s Params_MineralFertilization_Parameters) String() string {
	str, _ := text.Marshal(0xc75b5ef2e9b05c2d, s.Struct)
	return str
}

func (s Params_MineralFertilization_Parameters) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Params_MineralFertilization_Parameters) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_MineralFertilization_Parameters) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Params_MineralFertilization_Parameters) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Params_MineralFertilization_Parameters) Name() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Params_MineralFertilization_Parameters) HasName() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_MineralFertilization_Parameters) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Params_MineralFertilization_Parameters) SetName(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Params_MineralFertilization_Parameters) Carbamid() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_MineralFertilization_Parameters) SetCarbamid(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_MineralFertilization_Parameters) Nh4() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_MineralFertilization_Parameters) SetNh4(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_MineralFertilization_Parameters) No3() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_MineralFertilization_Parameters) SetNo3(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// Params_MineralFertilization_Parameters_List is a list of Params_MineralFertilization_Parameters.
type Params_MineralFertilization_Parameters_List struct{ capnp.List }

// NewParams_MineralFertilization_Parameters creates a new list of Params_MineralFertilization_Parameters.
func NewParams_MineralFertilization_Parameters_List(s *capnp.Segment, sz int32) (Params_MineralFertilization_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2}, sz)
	return Params_MineralFertilization_Parameters_List{l}, err
}

func (s Params_MineralFertilization_Parameters_List) At(i int) Params_MineralFertilization_Parameters {
	return Params_MineralFertilization_Parameters{s.List.Struct(i)}
}

func (s Params_MineralFertilization_Parameters_List) Set(i int, v Params_MineralFertilization_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_MineralFertilization_Parameters_List) String() string {
	str, _ := text.MarshalList(0xc75b5ef2e9b05c2d, s.List)
	return str
}

// Params_MineralFertilization_Parameters_Future is a wrapper for a Params_MineralFertilization_Parameters promised by a client call.
type Params_MineralFertilization_Parameters_Future struct{ *capnp.Future }

func (p Params_MineralFertilization_Parameters_Future) Struct() (Params_MineralFertilization_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_MineralFertilization_Parameters{s}, err
}

type Params_NDemandFertilization struct{ capnp.Struct }

// Params_NDemandFertilization_TypeID is the unique identifier for the type Params_NDemandFertilization.
const Params_NDemandFertilization_TypeID = 0xc7c14e92e0cd461c

func NewParams_NDemandFertilization(s *capnp.Segment) (Params_NDemandFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Params_NDemandFertilization{st}, err
}

func NewRootParams_NDemandFertilization(s *capnp.Segment) (Params_NDemandFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Params_NDemandFertilization{st}, err
}

func ReadRootParams_NDemandFertilization(msg *capnp.Message) (Params_NDemandFertilization, error) {
	root, err := msg.Root()
	return Params_NDemandFertilization{root.Struct()}, err
}

func (s Params_NDemandFertilization) String() string {
	str, _ := text.Marshal(0xc7c14e92e0cd461c, s.Struct)
	return str
}

func (s Params_NDemandFertilization) NDemand() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_NDemandFertilization) SetNDemand(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_NDemandFertilization) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_NDemandFertilization) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_NDemandFertilization) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_NDemandFertilization) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_NDemandFertilization) Depth() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_NDemandFertilization) SetDepth(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_NDemandFertilization) Stage() uint8 {
	return s.Struct.Uint8(16) ^ 1
}

func (s Params_NDemandFertilization) SetStage(v uint8) {
	s.Struct.SetUint8(16, v^1)
}

// Params_NDemandFertilization_List is a list of Params_NDemandFertilization.
type Params_NDemandFertilization_List struct{ capnp.List }

// NewParams_NDemandFertilization creates a new list of Params_NDemandFertilization.
func NewParams_NDemandFertilization_List(s *capnp.Segment, sz int32) (Params_NDemandFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1}, sz)
	return Params_NDemandFertilization_List{l}, err
}

func (s Params_NDemandFertilization_List) At(i int) Params_NDemandFertilization {
	return Params_NDemandFertilization{s.List.Struct(i)}
}

func (s Params_NDemandFertilization_List) Set(i int, v Params_NDemandFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_NDemandFertilization_List) String() string {
	str, _ := text.MarshalList(0xc7c14e92e0cd461c, s.List)
	return str
}

// Params_NDemandFertilization_Future is a wrapper for a Params_NDemandFertilization promised by a client call.
type Params_NDemandFertilization_Future struct{ *capnp.Future }

func (p Params_NDemandFertilization_Future) Struct() (Params_NDemandFertilization, error) {
	s, err := p.Future.Struct()
	return Params_NDemandFertilization{s}, err
}

func (p Params_NDemandFertilization_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_OrganicFertilization struct{ capnp.Struct }

// Params_OrganicFertilization_TypeID is the unique identifier for the type Params_OrganicFertilization.
const Params_OrganicFertilization_TypeID = 0xb492838c7fed50b0

func NewParams_OrganicFertilization(s *capnp.Segment) (Params_OrganicFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Params_OrganicFertilization{st}, err
}

func NewRootParams_OrganicFertilization(s *capnp.Segment) (Params_OrganicFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Params_OrganicFertilization{st}, err
}

func ReadRootParams_OrganicFertilization(msg *capnp.Message) (Params_OrganicFertilization, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization{root.Struct()}, err
}

func (s Params_OrganicFertilization) String() string {
	str, _ := text.Marshal(0xb492838c7fed50b0, s.Struct)
	return str
}

func (s Params_OrganicFertilization) Params() (Params_OrganicFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_OrganicFertilization) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_OrganicFertilization) SetParams(v Params_OrganicFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_OrganicFertilization) NewParams() (Params_OrganicFertilization_Parameters, error) {
	ss, err := NewParams_OrganicFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_OrganicFertilization) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_OrganicFertilization) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_OrganicFertilization) Incorporation() bool {
	return s.Struct.Bit(64)
}

func (s Params_OrganicFertilization) SetIncorporation(v bool) {
	s.Struct.SetBit(64, v)
}

// Params_OrganicFertilization_List is a list of Params_OrganicFertilization.
type Params_OrganicFertilization_List struct{ capnp.List }

// NewParams_OrganicFertilization creates a new list of Params_OrganicFertilization.
func NewParams_OrganicFertilization_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Params_OrganicFertilization_List{l}, err
}

func (s Params_OrganicFertilization_List) At(i int) Params_OrganicFertilization {
	return Params_OrganicFertilization{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_List) Set(i int, v Params_OrganicFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_List) String() string {
	str, _ := text.MarshalList(0xb492838c7fed50b0, s.List)
	return str
}

// Params_OrganicFertilization_Future is a wrapper for a Params_OrganicFertilization promised by a client call.
type Params_OrganicFertilization_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_Future) Struct() (Params_OrganicFertilization, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization{s}, err
}

func (p Params_OrganicFertilization_Future) Params() Params_OrganicFertilization_Parameters_Future {
	return Params_OrganicFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_OrganicFertilization_OrganicMatterParameters struct{ capnp.Struct }

// Params_OrganicFertilization_OrganicMatterParameters_TypeID is the unique identifier for the type Params_OrganicFertilization_OrganicMatterParameters.
const Params_OrganicFertilization_OrganicMatterParameters_TypeID = 0x95cdc661a6600137

func NewParams_OrganicFertilization_OrganicMatterParameters(s *capnp.Segment) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0})
	return Params_OrganicFertilization_OrganicMatterParameters{st}, err
}

func NewRootParams_OrganicFertilization_OrganicMatterParameters(s *capnp.Segment) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0})
	return Params_OrganicFertilization_OrganicMatterParameters{st}, err
}

func ReadRootParams_OrganicFertilization_OrganicMatterParameters(msg *capnp.Message) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization_OrganicMatterParameters{root.Struct()}, err
}

func (s Params_OrganicFertilization_OrganicMatterParameters) String() string {
	str, _ := text.Marshal(0x95cdc661a6600137, s.Struct)
	return str
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomDryMatterContent() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomDryMatterContent(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomNH4Content() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomNH4Content(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomNO3Content() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomNO3Content(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomCarbamidContent() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomCarbamidContent(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomSlowDecCoeffStandard() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomSlowDecCoeffStandard(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomFastDecCoeffStandard() float64 {
	return math.Float64frombits(s.Struct.Uint64(40))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomFastDecCoeffStandard(v float64) {
	s.Struct.SetUint64(40, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMToAOMSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(48))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMToAOMSlow(v float64) {
	s.Struct.SetUint64(48, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMToAOMFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(56))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMToAOMFast(v float64) {
	s.Struct.SetUint64(56, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) CnRatioAOMSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(64))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetCnRatioAOMSlow(v float64) {
	s.Struct.SetUint64(64, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) CnRatioAOMFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(72))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetCnRatioAOMFast(v float64) {
	s.Struct.SetUint64(72, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMSlowToSMBSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(80))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMSlowToSMBSlow(v float64) {
	s.Struct.SetUint64(80, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMSlowToSMBFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(88))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMSlowToSMBFast(v float64) {
	s.Struct.SetUint64(88, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) NConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(96))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetNConcentration(v float64) {
	s.Struct.SetUint64(96, math.Float64bits(v))
}

// Params_OrganicFertilization_OrganicMatterParameters_List is a list of Params_OrganicFertilization_OrganicMatterParameters.
type Params_OrganicFertilization_OrganicMatterParameters_List struct{ capnp.List }

// NewParams_OrganicFertilization_OrganicMatterParameters creates a new list of Params_OrganicFertilization_OrganicMatterParameters.
func NewParams_OrganicFertilization_OrganicMatterParameters_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_OrganicMatterParameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0}, sz)
	return Params_OrganicFertilization_OrganicMatterParameters_List{l}, err
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) At(i int) Params_OrganicFertilization_OrganicMatterParameters {
	return Params_OrganicFertilization_OrganicMatterParameters{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) Set(i int, v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) String() string {
	str, _ := text.MarshalList(0x95cdc661a6600137, s.List)
	return str
}

// Params_OrganicFertilization_OrganicMatterParameters_Future is a wrapper for a Params_OrganicFertilization_OrganicMatterParameters promised by a client call.
type Params_OrganicFertilization_OrganicMatterParameters_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_OrganicMatterParameters_Future) Struct() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization_OrganicMatterParameters{s}, err
}

type Params_OrganicFertilization_Parameters struct{ capnp.Struct }

// Params_OrganicFertilization_Parameters_TypeID is the unique identifier for the type Params_OrganicFertilization_Parameters.
const Params_OrganicFertilization_Parameters_TypeID = 0xba0c11cf818d29fd

func NewParams_OrganicFertilization_Parameters(s *capnp.Segment) (Params_OrganicFertilization_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Params_OrganicFertilization_Parameters{st}, err
}

func NewRootParams_OrganicFertilization_Parameters(s *capnp.Segment) (Params_OrganicFertilization_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Params_OrganicFertilization_Parameters{st}, err
}

func ReadRootParams_OrganicFertilization_Parameters(msg *capnp.Message) (Params_OrganicFertilization_Parameters, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization_Parameters{root.Struct()}, err
}

func (s Params_OrganicFertilization_Parameters) String() string {
	str, _ := text.Marshal(0xba0c11cf818d29fd, s.Struct)
	return str
}

func (s Params_OrganicFertilization_Parameters) Params() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_OrganicMatterParameters{Struct: p.Struct()}, err
}

func (s Params_OrganicFertilization_Parameters) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_OrganicFertilization_Parameters) SetParams(v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_OrganicMatterParameters struct, preferring placement in s's segment.
func (s Params_OrganicFertilization_Parameters) NewParams() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	ss, err := NewParams_OrganicFertilization_OrganicMatterParameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_OrganicMatterParameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_OrganicFertilization_Parameters) Id() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Params_OrganicFertilization_Parameters) HasId() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_OrganicFertilization_Parameters) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Params_OrganicFertilization_Parameters) SetId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Params_OrganicFertilization_Parameters) Name() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Params_OrganicFertilization_Parameters) HasName() bool {
	return s.Struct.HasPtr(2)
}

func (s Params_OrganicFertilization_Parameters) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Params_OrganicFertilization_Parameters) SetName(v string) error {
	return s.Struct.SetText(2, v)
}

// Params_OrganicFertilization_Parameters_List is a list of Params_OrganicFertilization_Parameters.
type Params_OrganicFertilization_Parameters_List struct{ capnp.List }

// NewParams_OrganicFertilization_Parameters creates a new list of Params_OrganicFertilization_Parameters.
func NewParams_OrganicFertilization_Parameters_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Params_OrganicFertilization_Parameters_List{l}, err
}

func (s Params_OrganicFertilization_Parameters_List) At(i int) Params_OrganicFertilization_Parameters {
	return Params_OrganicFertilization_Parameters{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_Parameters_List) Set(i int, v Params_OrganicFertilization_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_Parameters_List) String() string {
	str, _ := text.MarshalList(0xba0c11cf818d29fd, s.List)
	return str
}

// Params_OrganicFertilization_Parameters_Future is a wrapper for a Params_OrganicFertilization_Parameters promised by a client call.
type Params_OrganicFertilization_Parameters_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_Parameters_Future) Struct() (Params_OrganicFertilization_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization_Parameters{s}, err
}

func (p Params_OrganicFertilization_Parameters_Future) Params() Params_OrganicFertilization_OrganicMatterParameters_Future {
	return Params_OrganicFertilization_OrganicMatterParameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_Tillage struct{ capnp.Struct }

// Params_Tillage_TypeID is the unique identifier for the type Params_Tillage.
const Params_Tillage_TypeID = 0xaa49811a4e3e2c59

func NewParams_Tillage(s *capnp.Segment) (Params_Tillage, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Params_Tillage{st}, err
}

func NewRootParams_Tillage(s *capnp.Segment) (Params_Tillage, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Params_Tillage{st}, err
}

func ReadRootParams_Tillage(msg *capnp.Message) (Params_Tillage, error) {
	root, err := msg.Root()
	return Params_Tillage{root.Struct()}, err
}

func (s Params_Tillage) String() string {
	str, _ := text.Marshal(0xaa49811a4e3e2c59, s.Struct)
	return str
}

func (s Params_Tillage) Depth() float64 {
	return math.Float64frombits(s.Struct.Uint64(0) ^ 0x3fd3333333333333)
}

func (s Params_Tillage) SetDepth(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v)^0x3fd3333333333333)
}

// Params_Tillage_List is a list of Params_Tillage.
type Params_Tillage_List struct{ capnp.List }

// NewParams_Tillage creates a new list of Params_Tillage.
func NewParams_Tillage_List(s *capnp.Segment, sz int32) (Params_Tillage_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Params_Tillage_List{l}, err
}

func (s Params_Tillage_List) At(i int) Params_Tillage { return Params_Tillage{s.List.Struct(i)} }

func (s Params_Tillage_List) Set(i int, v Params_Tillage) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Tillage_List) String() string {
	str, _ := text.MarshalList(0xaa49811a4e3e2c59, s.List)
	return str
}

// Params_Tillage_Future is a wrapper for a Params_Tillage promised by a client call.
type Params_Tillage_Future struct{ *capnp.Future }

func (p Params_Tillage_Future) Struct() (Params_Tillage, error) {
	s, err := p.Future.Struct()
	return Params_Tillage{s}, err
}

type Params_Irrigation struct{ capnp.Struct }

// Params_Irrigation_TypeID is the unique identifier for the type Params_Irrigation.
const Params_Irrigation_TypeID = 0xd90939a58e404ff8

func NewParams_Irrigation(s *capnp.Segment) (Params_Irrigation, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Irrigation{st}, err
}

func NewRootParams_Irrigation(s *capnp.Segment) (Params_Irrigation, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Irrigation{st}, err
}

func ReadRootParams_Irrigation(msg *capnp.Message) (Params_Irrigation, error) {
	root, err := msg.Root()
	return Params_Irrigation{root.Struct()}, err
}

func (s Params_Irrigation) String() string {
	str, _ := text.Marshal(0xd90939a58e404ff8, s.Struct)
	return str
}

func (s Params_Irrigation) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Irrigation) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_Irrigation) Params() (Params_Irrigation_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Irrigation_Parameters{Struct: p.Struct()}, err
}

func (s Params_Irrigation) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Irrigation) SetParams(v Params_Irrigation_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_Irrigation_Parameters struct, preferring placement in s's segment.
func (s Params_Irrigation) NewParams() (Params_Irrigation_Parameters, error) {
	ss, err := NewParams_Irrigation_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_Irrigation_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_Irrigation_List is a list of Params_Irrigation.
type Params_Irrigation_List struct{ capnp.List }

// NewParams_Irrigation creates a new list of Params_Irrigation.
func NewParams_Irrigation_List(s *capnp.Segment, sz int32) (Params_Irrigation_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Irrigation_List{l}, err
}

func (s Params_Irrigation_List) At(i int) Params_Irrigation {
	return Params_Irrigation{s.List.Struct(i)}
}

func (s Params_Irrigation_List) Set(i int, v Params_Irrigation) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Irrigation_List) String() string {
	str, _ := text.MarshalList(0xd90939a58e404ff8, s.List)
	return str
}

// Params_Irrigation_Future is a wrapper for a Params_Irrigation promised by a client call.
type Params_Irrigation_Future struct{ *capnp.Future }

func (p Params_Irrigation_Future) Struct() (Params_Irrigation, error) {
	s, err := p.Future.Struct()
	return Params_Irrigation{s}, err
}

func (p Params_Irrigation_Future) Params() Params_Irrigation_Parameters_Future {
	return Params_Irrigation_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_Irrigation_Parameters struct{ capnp.Struct }

// Params_Irrigation_Parameters_TypeID is the unique identifier for the type Params_Irrigation_Parameters.
const Params_Irrigation_Parameters_TypeID = 0xaec9e089e87f1599

func NewParams_Irrigation_Parameters(s *capnp.Segment) (Params_Irrigation_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Params_Irrigation_Parameters{st}, err
}

func NewRootParams_Irrigation_Parameters(s *capnp.Segment) (Params_Irrigation_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Params_Irrigation_Parameters{st}, err
}

func ReadRootParams_Irrigation_Parameters(msg *capnp.Message) (Params_Irrigation_Parameters, error) {
	root, err := msg.Root()
	return Params_Irrigation_Parameters{root.Struct()}, err
}

func (s Params_Irrigation_Parameters) String() string {
	str, _ := text.Marshal(0xaec9e089e87f1599, s.Struct)
	return str
}

func (s Params_Irrigation_Parameters) NitrateConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Irrigation_Parameters) SetNitrateConcentration(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_Irrigation_Parameters) SulfateConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Irrigation_Parameters) SetSulfateConcentration(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// Params_Irrigation_Parameters_List is a list of Params_Irrigation_Parameters.
type Params_Irrigation_Parameters_List struct{ capnp.List }

// NewParams_Irrigation_Parameters creates a new list of Params_Irrigation_Parameters.
func NewParams_Irrigation_Parameters_List(s *capnp.Segment, sz int32) (Params_Irrigation_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Params_Irrigation_Parameters_List{l}, err
}

func (s Params_Irrigation_Parameters_List) At(i int) Params_Irrigation_Parameters {
	return Params_Irrigation_Parameters{s.List.Struct(i)}
}

func (s Params_Irrigation_Parameters_List) Set(i int, v Params_Irrigation_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Irrigation_Parameters_List) String() string {
	str, _ := text.MarshalList(0xaec9e089e87f1599, s.List)
	return str
}

// Params_Irrigation_Parameters_Future is a wrapper for a Params_Irrigation_Parameters promised by a client call.
type Params_Irrigation_Parameters_Future struct{ *capnp.Future }

func (p Params_Irrigation_Parameters_Future) Struct() (Params_Irrigation_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_Irrigation_Parameters{s}, err
}

type FertilizerService struct{ Client *capnp.Client }

// FertilizerService_TypeID is the unique identifier for the type FertilizerService.
const FertilizerService_TypeID = 0xe3da81cc36d5741d

func (c FertilizerService) MineralFertilizerPartitionFor(ctx context.Context, params func(FertilizerService_mineralFertilizerPartitionFor_Params) error) (FertilizerService_mineralFertilizerPartitionFor_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizerPartitionFor",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_mineralFertilizerPartitionFor_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_mineralFertilizerPartitionFor_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) OrganicFertilizerParametersFor(ctx context.Context, params func(FertilizerService_organicFertilizerParametersFor_Params) error) (FertilizerService_organicFertilizerParametersFor_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      1,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizerParametersFor",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_organicFertilizerParametersFor_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_organicFertilizerParametersFor_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) AvailableMineralFertilizers(ctx context.Context, params func(FertilizerService_availableMineralFertilizers_Params) error) (FertilizerService_availableMineralFertilizers_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      2,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableMineralFertilizers",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_availableMineralFertilizers_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_availableMineralFertilizers_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) AvailableOrganicFertilizers(ctx context.Context, params func(FertilizerService_availableOrganicFertilizers_Params) error) (FertilizerService_availableOrganicFertilizers_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      3,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableOrganicFertilizers",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_availableOrganicFertilizers_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_availableOrganicFertilizers_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) MineralFertilizer(ctx context.Context, params func(FertilizerService_mineralFertilizer_Params) error) (FertilizerService_mineralFertilizer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      4,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(FertilizerService_mineralFertilizer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_mineralFertilizer_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) OrganicFertilizer(ctx context.Context, params func(FertilizerService_organicFertilizer_Params) error) (FertilizerService_organicFertilizer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      5,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(FertilizerService_organicFertilizer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_organicFertilizer_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c FertilizerService) AddRef() FertilizerService {
	return FertilizerService{
		Client: c.Client.AddRef(),
	}
}

func (c FertilizerService) Release() {
	c.Client.Release()
}

// A FertilizerService_Server is a FertilizerService with a local implementation.
type FertilizerService_Server interface {
	MineralFertilizerPartitionFor(context.Context, FertilizerService_mineralFertilizerPartitionFor) error

	OrganicFertilizerParametersFor(context.Context, FertilizerService_organicFertilizerParametersFor) error

	AvailableMineralFertilizers(context.Context, FertilizerService_availableMineralFertilizers) error

	AvailableOrganicFertilizers(context.Context, FertilizerService_availableOrganicFertilizers) error

	MineralFertilizer(context.Context, FertilizerService_mineralFertilizer) error

	OrganicFertilizer(context.Context, FertilizerService_organicFertilizer) error

	Info(context.Context, common.Identifiable_info) error
}

// FertilizerService_NewServer creates a new Server from an implementation of FertilizerService_Server.
func FertilizerService_NewServer(s FertilizerService_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(FertilizerService_Methods(nil, s), s, c, policy)
}

// FertilizerService_ServerToClient creates a new Client from an implementation of FertilizerService_Server.
// The caller is responsible for calling Release on the returned Client.
func FertilizerService_ServerToClient(s FertilizerService_Server, policy *server.Policy) FertilizerService {
	return FertilizerService{Client: capnp.NewClient(FertilizerService_NewServer(s, policy))}
}

// FertilizerService_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func FertilizerService_Methods(methods []server.Method, s FertilizerService_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 7)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizerPartitionFor",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MineralFertilizerPartitionFor(ctx, FertilizerService_mineralFertilizerPartitionFor{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      1,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizerParametersFor",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OrganicFertilizerParametersFor(ctx, FertilizerService_organicFertilizerParametersFor{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      2,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableMineralFertilizers",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AvailableMineralFertilizers(ctx, FertilizerService_availableMineralFertilizers{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      3,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableOrganicFertilizers",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AvailableOrganicFertilizers(ctx, FertilizerService_availableOrganicFertilizers{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      4,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MineralFertilizer(ctx, FertilizerService_mineralFertilizer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      5,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OrganicFertilizer(ctx, FertilizerService_organicFertilizer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// FertilizerService_mineralFertilizerPartitionFor holds the state for a server call to FertilizerService.mineralFertilizerPartitionFor.
// See server.Call for documentation.
type FertilizerService_mineralFertilizerPartitionFor struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_mineralFertilizerPartitionFor) Args() FertilizerService_mineralFertilizerPartitionFor_Params {
	return FertilizerService_mineralFertilizerPartitionFor_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_mineralFertilizerPartitionFor) AllocResults() (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{Struct: r}, err
}

// FertilizerService_organicFertilizerParametersFor holds the state for a server call to FertilizerService.organicFertilizerParametersFor.
// See server.Call for documentation.
type FertilizerService_organicFertilizerParametersFor struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_organicFertilizerParametersFor) Args() FertilizerService_organicFertilizerParametersFor_Params {
	return FertilizerService_organicFertilizerParametersFor_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_organicFertilizerParametersFor) AllocResults() (FertilizerService_organicFertilizerParametersFor_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{Struct: r}, err
}

// FertilizerService_availableMineralFertilizers holds the state for a server call to FertilizerService.availableMineralFertilizers.
// See server.Call for documentation.
type FertilizerService_availableMineralFertilizers struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_availableMineralFertilizers) Args() FertilizerService_availableMineralFertilizers_Params {
	return FertilizerService_availableMineralFertilizers_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_availableMineralFertilizers) AllocResults() (FertilizerService_availableMineralFertilizers_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableMineralFertilizers_Results{Struct: r}, err
}

// FertilizerService_availableOrganicFertilizers holds the state for a server call to FertilizerService.availableOrganicFertilizers.
// See server.Call for documentation.
type FertilizerService_availableOrganicFertilizers struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_availableOrganicFertilizers) Args() FertilizerService_availableOrganicFertilizers_Params {
	return FertilizerService_availableOrganicFertilizers_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_availableOrganicFertilizers) AllocResults() (FertilizerService_availableOrganicFertilizers_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableOrganicFertilizers_Results{Struct: r}, err
}

// FertilizerService_mineralFertilizer holds the state for a server call to FertilizerService.mineralFertilizer.
// See server.Call for documentation.
type FertilizerService_mineralFertilizer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_mineralFertilizer) Args() FertilizerService_mineralFertilizer_Params {
	return FertilizerService_mineralFertilizer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_mineralFertilizer) AllocResults() (FertilizerService_mineralFertilizer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Results{Struct: r}, err
}

// FertilizerService_organicFertilizer holds the state for a server call to FertilizerService.organicFertilizer.
// See server.Call for documentation.
type FertilizerService_organicFertilizer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_organicFertilizer) Args() FertilizerService_organicFertilizer_Params {
	return FertilizerService_organicFertilizer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_organicFertilizer) AllocResults() (FertilizerService_organicFertilizer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Results{Struct: r}, err
}

type FertilizerService_Entry struct{ capnp.Struct }

// FertilizerService_Entry_TypeID is the unique identifier for the type FertilizerService_Entry.
const FertilizerService_Entry_TypeID = 0xf54586500e2b72cd

func NewFertilizerService_Entry(s *capnp.Segment) (FertilizerService_Entry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FertilizerService_Entry{st}, err
}

func NewRootFertilizerService_Entry(s *capnp.Segment) (FertilizerService_Entry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FertilizerService_Entry{st}, err
}

func ReadRootFertilizerService_Entry(msg *capnp.Message) (FertilizerService_Entry, error) {
	root, err := msg.Root()
	return FertilizerService_Entry{root.Struct()}, err
}

func (s FertilizerService_Entry) String() string {
	str, _ := text.Marshal(0xf54586500e2b72cd, s.Struct)
	return str
}

func (s FertilizerService_Entry) Info() (common.IdInformation, error) {
	p, err := s.Struct.Ptr(0)
	return common.IdInformation{Struct: p.Struct()}, err
}

func (s FertilizerService_Entry) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_Entry) SetInfo(v common.IdInformation) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated common.IdInformation struct, preferring placement in s's segment.
func (s FertilizerService_Entry) NewInfo() (common.IdInformation, error) {
	ss, err := common.NewIdInformation(s.Struct.Segment())
	if err != nil {
		return common.IdInformation{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s FertilizerService_Entry) Ref() common.ValueHolder {
	p, _ := s.Struct.Ptr(1)
	return common.ValueHolder{Client: p.Interface().Client()}
}

func (s FertilizerService_Entry) HasRef() bool {
	return s.Struct.HasPtr(1)
}

func (s FertilizerService_Entry) SetRef(v common.ValueHolder) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// FertilizerService_Entry_List is a list of FertilizerService_Entry.
type FertilizerService_Entry_List struct{ capnp.List }

// NewFertilizerService_Entry creates a new list of FertilizerService_Entry.
func NewFertilizerService_Entry_List(s *capnp.Segment, sz int32) (FertilizerService_Entry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FertilizerService_Entry_List{l}, err
}

func (s FertilizerService_Entry_List) At(i int) FertilizerService_Entry {
	return FertilizerService_Entry{s.List.Struct(i)}
}

func (s FertilizerService_Entry_List) Set(i int, v FertilizerService_Entry) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_Entry_List) String() string {
	str, _ := text.MarshalList(0xf54586500e2b72cd, s.List)
	return str
}

// FertilizerService_Entry_Future is a wrapper for a FertilizerService_Entry promised by a client call.
type FertilizerService_Entry_Future struct{ *capnp.Future }

func (p FertilizerService_Entry_Future) Struct() (FertilizerService_Entry, error) {
	s, err := p.Future.Struct()
	return FertilizerService_Entry{s}, err
}

func (p FertilizerService_Entry_Future) Info() common.IdInformation_Future {
	return common.IdInformation_Future{Future: p.Future.Field(0, nil)}
}

func (p FertilizerService_Entry_Future) Ref() common.ValueHolder {
	return common.ValueHolder{Client: p.Future.Field(1, nil).Client()}
}

type FertilizerService_mineralFertilizerPartitionFor_Params struct{ capnp.Struct }

// FertilizerService_mineralFertilizerPartitionFor_Params_TypeID is the unique identifier for the type FertilizerService_mineralFertilizerPartitionFor_Params.
const FertilizerService_mineralFertilizerPartitionFor_Params_TypeID = 0xba3900305e908e31

func NewFertilizerService_mineralFertilizerPartitionFor_Params(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_mineralFertilizerPartitionFor_Params{st}, err
}

func NewRootFertilizerService_mineralFertilizerPartitionFor_Params(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_mineralFertilizerPartitionFor_Params{st}, err
}

func ReadRootFertilizerService_mineralFertilizerPartitionFor_Params(msg *capnp.Message) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizerPartitionFor_Params{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) String() string {
	str, _ := text.Marshal(0xba3900305e908e31, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) MinFert() MineralFertilizer {
	return MineralFertilizer(s.Struct.Uint16(0))
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) SetMinFert(v MineralFertilizer) {
	s.Struct.SetUint16(0, uint16(v))
}

// FertilizerService_mineralFertilizerPartitionFor_Params_List is a list of FertilizerService_mineralFertilizerPartitionFor_Params.
type FertilizerService_mineralFertilizerPartitionFor_Params_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizerPartitionFor_Params creates a new list of FertilizerService_mineralFertilizerPartitionFor_Params.
func NewFertilizerService_mineralFertilizerPartitionFor_Params_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizerPartitionFor_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FertilizerService_mineralFertilizerPartitionFor_Params_List{l}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) At(i int) FertilizerService_mineralFertilizerPartitionFor_Params {
	return FertilizerService_mineralFertilizerPartitionFor_Params{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) Set(i int, v FertilizerService_mineralFertilizerPartitionFor_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) String() string {
	str, _ := text.MarshalList(0xba3900305e908e31, s.List)
	return str
}

// FertilizerService_mineralFertilizerPartitionFor_Params_Future is a wrapper for a FertilizerService_mineralFertilizerPartitionFor_Params promised by a client call.
type FertilizerService_mineralFertilizerPartitionFor_Params_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizerPartitionFor_Params_Future) Struct() (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizerPartitionFor_Params{s}, err
}

type FertilizerService_mineralFertilizerPartitionFor_Results struct{ capnp.Struct }

// FertilizerService_mineralFertilizerPartitionFor_Results_TypeID is the unique identifier for the type FertilizerService_mineralFertilizerPartitionFor_Results.
const FertilizerService_mineralFertilizerPartitionFor_Results_TypeID = 0xbdb5eaa658c7abab

func NewFertilizerService_mineralFertilizerPartitionFor_Results(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{st}, err
}

func NewRootFertilizerService_mineralFertilizerPartitionFor_Results(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{st}, err
}

func ReadRootFertilizerService_mineralFertilizerPartitionFor_Results(msg *capnp.Message) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizerPartitionFor_Results{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) String() string {
	str, _ := text.Marshal(0xbdb5eaa658c7abab, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_mineralFertilizerPartitionFor_Results) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_mineralFertilizerPartitionFor_Results_List is a list of FertilizerService_mineralFertilizerPartitionFor_Results.
type FertilizerService_mineralFertilizerPartitionFor_Results_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizerPartitionFor_Results creates a new list of FertilizerService_mineralFertilizerPartitionFor_Results.
func NewFertilizerService_mineralFertilizerPartitionFor_Results_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizerPartitionFor_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizerPartitionFor_Results_List{l}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) At(i int) FertilizerService_mineralFertilizerPartitionFor_Results {
	return FertilizerService_mineralFertilizerPartitionFor_Results{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) Set(i int, v FertilizerService_mineralFertilizerPartitionFor_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb5eaa658c7abab, s.List)
	return str
}

// FertilizerService_mineralFertilizerPartitionFor_Results_Future is a wrapper for a FertilizerService_mineralFertilizerPartitionFor_Results promised by a client call.
type FertilizerService_mineralFertilizerPartitionFor_Results_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizerPartitionFor_Results_Future) Struct() (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizerPartitionFor_Results{s}, err
}

func (p FertilizerService_mineralFertilizerPartitionFor_Results_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type FertilizerService_organicFertilizerParametersFor_Params struct{ capnp.Struct }

// FertilizerService_organicFertilizerParametersFor_Params_TypeID is the unique identifier for the type FertilizerService_organicFertilizerParametersFor_Params.
const FertilizerService_organicFertilizerParametersFor_Params_TypeID = 0xead8c24402f189b4

func NewFertilizerService_organicFertilizerParametersFor_Params(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_organicFertilizerParametersFor_Params{st}, err
}

func NewRootFertilizerService_organicFertilizerParametersFor_Params(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_organicFertilizerParametersFor_Params{st}, err
}

func ReadRootFertilizerService_organicFertilizerParametersFor_Params(msg *capnp.Message) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizerParametersFor_Params{root.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Params) String() string {
	str, _ := text.Marshal(0xead8c24402f189b4, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizerParametersFor_Params) OrgFert() OrganicFertilizer {
	return OrganicFertilizer(s.Struct.Uint16(0))
}

func (s FertilizerService_organicFertilizerParametersFor_Params) SetOrgFert(v OrganicFertilizer) {
	s.Struct.SetUint16(0, uint16(v))
}

// FertilizerService_organicFertilizerParametersFor_Params_List is a list of FertilizerService_organicFertilizerParametersFor_Params.
type FertilizerService_organicFertilizerParametersFor_Params_List struct{ capnp.List }

// NewFertilizerService_organicFertilizerParametersFor_Params creates a new list of FertilizerService_organicFertilizerParametersFor_Params.
func NewFertilizerService_organicFertilizerParametersFor_Params_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizerParametersFor_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FertilizerService_organicFertilizerParametersFor_Params_List{l}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) At(i int) FertilizerService_organicFertilizerParametersFor_Params {
	return FertilizerService_organicFertilizerParametersFor_Params{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) Set(i int, v FertilizerService_organicFertilizerParametersFor_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) String() string {
	str, _ := text.MarshalList(0xead8c24402f189b4, s.List)
	return str
}

// FertilizerService_organicFertilizerParametersFor_Params_Future is a wrapper for a FertilizerService_organicFertilizerParametersFor_Params promised by a client call.
type FertilizerService_organicFertilizerParametersFor_Params_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizerParametersFor_Params_Future) Struct() (FertilizerService_organicFertilizerParametersFor_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizerParametersFor_Params{s}, err
}

type FertilizerService_organicFertilizerParametersFor_Results struct{ capnp.Struct }

// FertilizerService_organicFertilizerParametersFor_Results_TypeID is the unique identifier for the type FertilizerService_organicFertilizerParametersFor_Results.
const FertilizerService_organicFertilizerParametersFor_Results_TypeID = 0xf6b53f1a4cf29599

func NewFertilizerService_organicFertilizerParametersFor_Results(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{st}, err
}

func NewRootFertilizerService_organicFertilizerParametersFor_Results(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{st}, err
}

func ReadRootFertilizerService_organicFertilizerParametersFor_Results(msg *capnp.Message) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizerParametersFor_Results{root.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results) String() string {
	str, _ := text.Marshal(0xf6b53f1a4cf29599, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizerParametersFor_Results) Params() (Params_OrganicFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizerParametersFor_Results) SetParams(v Params_OrganicFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_organicFertilizerParametersFor_Results) NewParams() (Params_OrganicFertilization_Parameters, error) {
	ss, err := NewParams_OrganicFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_organicFertilizerParametersFor_Results_List is a list of FertilizerService_organicFertilizerParametersFor_Results.
type FertilizerService_organicFertilizerParametersFor_Results_List struct{ capnp.List }

// NewFertilizerService_organicFertilizerParametersFor_Results creates a new list of FertilizerService_organicFertilizerParametersFor_Results.
func NewFertilizerService_organicFertilizerParametersFor_Results_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizerParametersFor_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizerParametersFor_Results_List{l}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) At(i int) FertilizerService_organicFertilizerParametersFor_Results {
	return FertilizerService_organicFertilizerParametersFor_Results{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) Set(i int, v FertilizerService_organicFertilizerParametersFor_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) String() string {
	str, _ := text.MarshalList(0xf6b53f1a4cf29599, s.List)
	return str
}

// FertilizerService_organicFertilizerParametersFor_Results_Future is a wrapper for a FertilizerService_organicFertilizerParametersFor_Results promised by a client call.
type FertilizerService_organicFertilizerParametersFor_Results_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizerParametersFor_Results_Future) Struct() (FertilizerService_organicFertilizerParametersFor_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizerParametersFor_Results{s}, err
}

func (p FertilizerService_organicFertilizerParametersFor_Results_Future) Params() Params_OrganicFertilization_Parameters_Future {
	return Params_OrganicFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type FertilizerService_availableMineralFertilizers_Params struct{ capnp.Struct }

// FertilizerService_availableMineralFertilizers_Params_TypeID is the unique identifier for the type FertilizerService_availableMineralFertilizers_Params.
const FertilizerService_availableMineralFertilizers_Params_TypeID = 0xa9b89d473e06f2c7

func NewFertilizerService_availableMineralFertilizers_Params(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableMineralFertilizers_Params{st}, err
}

func NewRootFertilizerService_availableMineralFertilizers_Params(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableMineralFertilizers_Params{st}, err
}

func ReadRootFertilizerService_availableMineralFertilizers_Params(msg *capnp.Message) (FertilizerService_availableMineralFertilizers_Params, error) {
	root, err := msg.Root()
	return FertilizerService_availableMineralFertilizers_Params{root.Struct()}, err
}

func (s FertilizerService_availableMineralFertilizers_Params) String() string {
	str, _ := text.Marshal(0xa9b89d473e06f2c7, s.Struct)
	return str
}

// FertilizerService_availableMineralFertilizers_Params_List is a list of FertilizerService_availableMineralFertilizers_Params.
type FertilizerService_availableMineralFertilizers_Params_List struct{ capnp.List }

// NewFertilizerService_availableMineralFertilizers_Params creates a new list of FertilizerService_availableMineralFertilizers_Params.
func NewFertilizerService_availableMineralFertilizers_Params_List(s *capnp.Segment, sz int32) (FertilizerService_availableMineralFertilizers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FertilizerService_availableMineralFertilizers_Params_List{l}, err
}

func (s FertilizerService_availableMineralFertilizers_Params_List) At(i int) FertilizerService_availableMineralFertilizers_Params {
	return FertilizerService_availableMineralFertilizers_Params{s.List.Struct(i)}
}

func (s FertilizerService_availableMineralFertilizers_Params_List) Set(i int, v FertilizerService_availableMineralFertilizers_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableMineralFertilizers_Params_List) String() string {
	str, _ := text.MarshalList(0xa9b89d473e06f2c7, s.List)
	return str
}

// FertilizerService_availableMineralFertilizers_Params_Future is a wrapper for a FertilizerService_availableMineralFertilizers_Params promised by a client call.
type FertilizerService_availableMineralFertilizers_Params_Future struct{ *capnp.Future }

func (p FertilizerService_availableMineralFertilizers_Params_Future) Struct() (FertilizerService_availableMineralFertilizers_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableMineralFertilizers_Params{s}, err
}

type FertilizerService_availableMineralFertilizers_Results struct{ capnp.Struct }

// FertilizerService_availableMineralFertilizers_Results_TypeID is the unique identifier for the type FertilizerService_availableMineralFertilizers_Results.
const FertilizerService_availableMineralFertilizers_Results_TypeID = 0xbd608077a7cec156

func NewFertilizerService_availableMineralFertilizers_Results(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableMineralFertilizers_Results{st}, err
}

func NewRootFertilizerService_availableMineralFertilizers_Results(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableMineralFertilizers_Results{st}, err
}

func ReadRootFertilizerService_availableMineralFertilizers_Results(msg *capnp.Message) (FertilizerService_availableMineralFertilizers_Results, error) {
	root, err := msg.Root()
	return FertilizerService_availableMineralFertilizers_Results{root.Struct()}, err
}

func (s FertilizerService_availableMineralFertilizers_Results) String() string {
	str, _ := text.Marshal(0xbd608077a7cec156, s.Struct)
	return str
}

func (s FertilizerService_availableMineralFertilizers_Results) Entries() (FertilizerService_Entry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FertilizerService_Entry_List{List: p.List()}, err
}

func (s FertilizerService_availableMineralFertilizers_Results) HasEntries() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_availableMineralFertilizers_Results) SetEntries(v FertilizerService_Entry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated FertilizerService_Entry_List, preferring placement in s's segment.
func (s FertilizerService_availableMineralFertilizers_Results) NewEntries(n int32) (FertilizerService_Entry_List, error) {
	l, err := NewFertilizerService_Entry_List(s.Struct.Segment(), n)
	if err != nil {
		return FertilizerService_Entry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FertilizerService_availableMineralFertilizers_Results_List is a list of FertilizerService_availableMineralFertilizers_Results.
type FertilizerService_availableMineralFertilizers_Results_List struct{ capnp.List }

// NewFertilizerService_availableMineralFertilizers_Results creates a new list of FertilizerService_availableMineralFertilizers_Results.
func NewFertilizerService_availableMineralFertilizers_Results_List(s *capnp.Segment, sz int32) (FertilizerService_availableMineralFertilizers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_availableMineralFertilizers_Results_List{l}, err
}

func (s FertilizerService_availableMineralFertilizers_Results_List) At(i int) FertilizerService_availableMineralFertilizers_Results {
	return FertilizerService_availableMineralFertilizers_Results{s.List.Struct(i)}
}

func (s FertilizerService_availableMineralFertilizers_Results_List) Set(i int, v FertilizerService_availableMineralFertilizers_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableMineralFertilizers_Results_List) String() string {
	str, _ := text.MarshalList(0xbd608077a7cec156, s.List)
	return str
}

// FertilizerService_availableMineralFertilizers_Results_Future is a wrapper for a FertilizerService_availableMineralFertilizers_Results promised by a client call.
type FertilizerService_availableMineralFertilizers_Results_Future struct{ *capnp.Future }

func (p FertilizerService_availableMineralFertilizers_Results_Future) Struct() (FertilizerService_availableMineralFertilizers_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableMineralFertilizers_Results{s}, err
}

type FertilizerService_availableOrganicFertilizers_Params struct{ capnp.Struct }

// FertilizerService_availableOrganicFertilizers_Params_TypeID is the unique identifier for the type FertilizerService_availableOrganicFertilizers_Params.
const FertilizerService_availableOrganicFertilizers_Params_TypeID = 0x9437da695f7567e7

func NewFertilizerService_availableOrganicFertilizers_Params(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableOrganicFertilizers_Params{st}, err
}

func NewRootFertilizerService_availableOrganicFertilizers_Params(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableOrganicFertilizers_Params{st}, err
}

func ReadRootFertilizerService_availableOrganicFertilizers_Params(msg *capnp.Message) (FertilizerService_availableOrganicFertilizers_Params, error) {
	root, err := msg.Root()
	return FertilizerService_availableOrganicFertilizers_Params{root.Struct()}, err
}

func (s FertilizerService_availableOrganicFertilizers_Params) String() string {
	str, _ := text.Marshal(0x9437da695f7567e7, s.Struct)
	return str
}

// FertilizerService_availableOrganicFertilizers_Params_List is a list of FertilizerService_availableOrganicFertilizers_Params.
type FertilizerService_availableOrganicFertilizers_Params_List struct{ capnp.List }

// NewFertilizerService_availableOrganicFertilizers_Params creates a new list of FertilizerService_availableOrganicFertilizers_Params.
func NewFertilizerService_availableOrganicFertilizers_Params_List(s *capnp.Segment, sz int32) (FertilizerService_availableOrganicFertilizers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FertilizerService_availableOrganicFertilizers_Params_List{l}, err
}

func (s FertilizerService_availableOrganicFertilizers_Params_List) At(i int) FertilizerService_availableOrganicFertilizers_Params {
	return FertilizerService_availableOrganicFertilizers_Params{s.List.Struct(i)}
}

func (s FertilizerService_availableOrganicFertilizers_Params_List) Set(i int, v FertilizerService_availableOrganicFertilizers_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableOrganicFertilizers_Params_List) String() string {
	str, _ := text.MarshalList(0x9437da695f7567e7, s.List)
	return str
}

// FertilizerService_availableOrganicFertilizers_Params_Future is a wrapper for a FertilizerService_availableOrganicFertilizers_Params promised by a client call.
type FertilizerService_availableOrganicFertilizers_Params_Future struct{ *capnp.Future }

func (p FertilizerService_availableOrganicFertilizers_Params_Future) Struct() (FertilizerService_availableOrganicFertilizers_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableOrganicFertilizers_Params{s}, err
}

type FertilizerService_availableOrganicFertilizers_Results struct{ capnp.Struct }

// FertilizerService_availableOrganicFertilizers_Results_TypeID is the unique identifier for the type FertilizerService_availableOrganicFertilizers_Results.
const FertilizerService_availableOrganicFertilizers_Results_TypeID = 0xab49546abd2a478a

func NewFertilizerService_availableOrganicFertilizers_Results(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableOrganicFertilizers_Results{st}, err
}

func NewRootFertilizerService_availableOrganicFertilizers_Results(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableOrganicFertilizers_Results{st}, err
}

func ReadRootFertilizerService_availableOrganicFertilizers_Results(msg *capnp.Message) (FertilizerService_availableOrganicFertilizers_Results, error) {
	root, err := msg.Root()
	return FertilizerService_availableOrganicFertilizers_Results{root.Struct()}, err
}

func (s FertilizerService_availableOrganicFertilizers_Results) String() string {
	str, _ := text.Marshal(0xab49546abd2a478a, s.Struct)
	return str
}

func (s FertilizerService_availableOrganicFertilizers_Results) Entries() (FertilizerService_Entry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FertilizerService_Entry_List{List: p.List()}, err
}

func (s FertilizerService_availableOrganicFertilizers_Results) HasEntries() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_availableOrganicFertilizers_Results) SetEntries(v FertilizerService_Entry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated FertilizerService_Entry_List, preferring placement in s's segment.
func (s FertilizerService_availableOrganicFertilizers_Results) NewEntries(n int32) (FertilizerService_Entry_List, error) {
	l, err := NewFertilizerService_Entry_List(s.Struct.Segment(), n)
	if err != nil {
		return FertilizerService_Entry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FertilizerService_availableOrganicFertilizers_Results_List is a list of FertilizerService_availableOrganicFertilizers_Results.
type FertilizerService_availableOrganicFertilizers_Results_List struct{ capnp.List }

// NewFertilizerService_availableOrganicFertilizers_Results creates a new list of FertilizerService_availableOrganicFertilizers_Results.
func NewFertilizerService_availableOrganicFertilizers_Results_List(s *capnp.Segment, sz int32) (FertilizerService_availableOrganicFertilizers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_availableOrganicFertilizers_Results_List{l}, err
}

func (s FertilizerService_availableOrganicFertilizers_Results_List) At(i int) FertilizerService_availableOrganicFertilizers_Results {
	return FertilizerService_availableOrganicFertilizers_Results{s.List.Struct(i)}
}

func (s FertilizerService_availableOrganicFertilizers_Results_List) Set(i int, v FertilizerService_availableOrganicFertilizers_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableOrganicFertilizers_Results_List) String() string {
	str, _ := text.MarshalList(0xab49546abd2a478a, s.List)
	return str
}

// FertilizerService_availableOrganicFertilizers_Results_Future is a wrapper for a FertilizerService_availableOrganicFertilizers_Results promised by a client call.
type FertilizerService_availableOrganicFertilizers_Results_Future struct{ *capnp.Future }

func (p FertilizerService_availableOrganicFertilizers_Results_Future) Struct() (FertilizerService_availableOrganicFertilizers_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableOrganicFertilizers_Results{s}, err
}

type FertilizerService_mineralFertilizer_Params struct{ capnp.Struct }

// FertilizerService_mineralFertilizer_Params_TypeID is the unique identifier for the type FertilizerService_mineralFertilizer_Params.
const FertilizerService_mineralFertilizer_Params_TypeID = 0x9ead0b36096d9073

func NewFertilizerService_mineralFertilizer_Params(s *capnp.Segment) (FertilizerService_mineralFertilizer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Params{st}, err
}

func NewRootFertilizerService_mineralFertilizer_Params(s *capnp.Segment) (FertilizerService_mineralFertilizer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Params{st}, err
}

func ReadRootFertilizerService_mineralFertilizer_Params(msg *capnp.Message) (FertilizerService_mineralFertilizer_Params, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizer_Params{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizer_Params) String() string {
	str, _ := text.Marshal(0x9ead0b36096d9073, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizer_Params) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FertilizerService_mineralFertilizer_Params) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizer_Params) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FertilizerService_mineralFertilizer_Params) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

// FertilizerService_mineralFertilizer_Params_List is a list of FertilizerService_mineralFertilizer_Params.
type FertilizerService_mineralFertilizer_Params_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizer_Params creates a new list of FertilizerService_mineralFertilizer_Params.
func NewFertilizerService_mineralFertilizer_Params_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizer_Params_List{l}, err
}

func (s FertilizerService_mineralFertilizer_Params_List) At(i int) FertilizerService_mineralFertilizer_Params {
	return FertilizerService_mineralFertilizer_Params{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizer_Params_List) Set(i int, v FertilizerService_mineralFertilizer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizer_Params_List) String() string {
	str, _ := text.MarshalList(0x9ead0b36096d9073, s.List)
	return str
}

// FertilizerService_mineralFertilizer_Params_Future is a wrapper for a FertilizerService_mineralFertilizer_Params promised by a client call.
type FertilizerService_mineralFertilizer_Params_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizer_Params_Future) Struct() (FertilizerService_mineralFertilizer_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizer_Params{s}, err
}

type FertilizerService_mineralFertilizer_Results struct{ capnp.Struct }

// FertilizerService_mineralFertilizer_Results_TypeID is the unique identifier for the type FertilizerService_mineralFertilizer_Results.
const FertilizerService_mineralFertilizer_Results_TypeID = 0x82a3c6bf1cc5ad84

func NewFertilizerService_mineralFertilizer_Results(s *capnp.Segment) (FertilizerService_mineralFertilizer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Results{st}, err
}

func NewRootFertilizerService_mineralFertilizer_Results(s *capnp.Segment) (FertilizerService_mineralFertilizer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Results{st}, err
}

func ReadRootFertilizerService_mineralFertilizer_Results(msg *capnp.Message) (FertilizerService_mineralFertilizer_Results, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizer_Results{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizer_Results) String() string {
	str, _ := text.Marshal(0x82a3c6bf1cc5ad84, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizer_Results) Fert() (Params_MineralFertilization_Parameters_List, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters_List{List: p.List()}, err
}

func (s FertilizerService_mineralFertilizer_Results) HasFert() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizer_Results) SetFert(v Params_MineralFertilization_Parameters_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFert sets the fert field to a newly
// allocated Params_MineralFertilization_Parameters_List, preferring placement in s's segment.
func (s FertilizerService_mineralFertilizer_Results) NewFert(n int32) (Params_MineralFertilization_Parameters_List, error) {
	l, err := NewParams_MineralFertilization_Parameters_List(s.Struct.Segment(), n)
	if err != nil {
		return Params_MineralFertilization_Parameters_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FertilizerService_mineralFertilizer_Results_List is a list of FertilizerService_mineralFertilizer_Results.
type FertilizerService_mineralFertilizer_Results_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizer_Results creates a new list of FertilizerService_mineralFertilizer_Results.
func NewFertilizerService_mineralFertilizer_Results_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizer_Results_List{l}, err
}

func (s FertilizerService_mineralFertilizer_Results_List) At(i int) FertilizerService_mineralFertilizer_Results {
	return FertilizerService_mineralFertilizer_Results{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizer_Results_List) Set(i int, v FertilizerService_mineralFertilizer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizer_Results_List) String() string {
	str, _ := text.MarshalList(0x82a3c6bf1cc5ad84, s.List)
	return str
}

// FertilizerService_mineralFertilizer_Results_Future is a wrapper for a FertilizerService_mineralFertilizer_Results promised by a client call.
type FertilizerService_mineralFertilizer_Results_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizer_Results_Future) Struct() (FertilizerService_mineralFertilizer_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizer_Results{s}, err
}

type FertilizerService_organicFertilizer_Params struct{ capnp.Struct }

// FertilizerService_organicFertilizer_Params_TypeID is the unique identifier for the type FertilizerService_organicFertilizer_Params.
const FertilizerService_organicFertilizer_Params_TypeID = 0xd945095e4d1d3ad4

func NewFertilizerService_organicFertilizer_Params(s *capnp.Segment) (FertilizerService_organicFertilizer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Params{st}, err
}

func NewRootFertilizerService_organicFertilizer_Params(s *capnp.Segment) (FertilizerService_organicFertilizer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Params{st}, err
}

func ReadRootFertilizerService_organicFertilizer_Params(msg *capnp.Message) (FertilizerService_organicFertilizer_Params, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizer_Params{root.Struct()}, err
}

func (s FertilizerService_organicFertilizer_Params) String() string {
	str, _ := text.Marshal(0xd945095e4d1d3ad4, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizer_Params) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FertilizerService_organicFertilizer_Params) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizer_Params) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FertilizerService_organicFertilizer_Params) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

// FertilizerService_organicFertilizer_Params_List is a list of FertilizerService_organicFertilizer_Params.
type FertilizerService_organicFertilizer_Params_List struct{ capnp.List }

// NewFertilizerService_organicFertilizer_Params creates a new list of FertilizerService_organicFertilizer_Params.
func NewFertilizerService_organicFertilizer_Params_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizer_Params_List{l}, err
}

func (s FertilizerService_organicFertilizer_Params_List) At(i int) FertilizerService_organicFertilizer_Params {
	return FertilizerService_organicFertilizer_Params{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizer_Params_List) Set(i int, v FertilizerService_organicFertilizer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizer_Params_List) String() string {
	str, _ := text.MarshalList(0xd945095e4d1d3ad4, s.List)
	return str
}

// FertilizerService_organicFertilizer_Params_Future is a wrapper for a FertilizerService_organicFertilizer_Params promised by a client call.
type FertilizerService_organicFertilizer_Params_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizer_Params_Future) Struct() (FertilizerService_organicFertilizer_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizer_Params{s}, err
}

type FertilizerService_organicFertilizer_Results struct{ capnp.Struct }

// FertilizerService_organicFertilizer_Results_TypeID is the unique identifier for the type FertilizerService_organicFertilizer_Results.
const FertilizerService_organicFertilizer_Results_TypeID = 0xcf94305221c00752

func NewFertilizerService_organicFertilizer_Results(s *capnp.Segment) (FertilizerService_organicFertilizer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Results{st}, err
}

func NewRootFertilizerService_organicFertilizer_Results(s *capnp.Segment) (FertilizerService_organicFertilizer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Results{st}, err
}

func ReadRootFertilizerService_organicFertilizer_Results(msg *capnp.Message) (FertilizerService_organicFertilizer_Results, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizer_Results{root.Struct()}, err
}

func (s FertilizerService_organicFertilizer_Results) String() string {
	str, _ := text.Marshal(0xcf94305221c00752, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizer_Results) Fert() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_OrganicMatterParameters{Struct: p.Struct()}, err
}

func (s FertilizerService_organicFertilizer_Results) HasFert() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizer_Results) SetFert(v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewFert sets the fert field to a newly
// allocated Params_OrganicFertilization_OrganicMatterParameters struct, preferring placement in s's segment.
func (s FertilizerService_organicFertilizer_Results) NewFert() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	ss, err := NewParams_OrganicFertilization_OrganicMatterParameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_OrganicMatterParameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_organicFertilizer_Results_List is a list of FertilizerService_organicFertilizer_Results.
type FertilizerService_organicFertilizer_Results_List struct{ capnp.List }

// NewFertilizerService_organicFertilizer_Results creates a new list of FertilizerService_organicFertilizer_Results.
func NewFertilizerService_organicFertilizer_Results_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizer_Results_List{l}, err
}

func (s FertilizerService_organicFertilizer_Results_List) At(i int) FertilizerService_organicFertilizer_Results {
	return FertilizerService_organicFertilizer_Results{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizer_Results_List) Set(i int, v FertilizerService_organicFertilizer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizer_Results_List) String() string {
	str, _ := text.MarshalList(0xcf94305221c00752, s.List)
	return str
}

// FertilizerService_organicFertilizer_Results_Future is a wrapper for a FertilizerService_organicFertilizer_Results promised by a client call.
type FertilizerService_organicFertilizer_Results_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizer_Results_Future) Struct() (FertilizerService_organicFertilizer_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizer_Results{s}, err
}

func (p FertilizerService_organicFertilizer_Results_Future) Fert() Params_OrganicFertilization_OrganicMatterParameters_Future {
	return Params_OrganicFertilization_OrganicMatterParameters_Future{Future: p.Future.Field(0, nil)}
}

type Service struct{ Client *capnp.Client }

// Service_TypeID is the unique identifier for the type Service.
const Service_TypeID = 0xbfda1920aff38c07

func (c Service) ManagementAt(ctx context.Context, params func(geo.LatLonCoord) error) (Service_managementAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbfda1920aff38c07,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:Service",
			MethodName:    "managementAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(geo.LatLonCoord{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Service_managementAt_Results_Future{Future: ans.Future()}, release
}
func (c Service) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c Service) AddRef() Service {
	return Service{
		Client: c.Client.AddRef(),
	}
}

func (c Service) Release() {
	c.Client.Release()
}

// A Service_Server is a Service with a local implementation.
type Service_Server interface {
	ManagementAt(context.Context, Service_managementAt) error

	Info(context.Context, common.Identifiable_info) error
}

// Service_NewServer creates a new Server from an implementation of Service_Server.
func Service_NewServer(s Service_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Service_Methods(nil, s), s, c, policy)
}

// Service_ServerToClient creates a new Client from an implementation of Service_Server.
// The caller is responsible for calling Release on the returned Client.
func Service_ServerToClient(s Service_Server, policy *server.Policy) Service {
	return Service{Client: capnp.NewClient(Service_NewServer(s, policy))}
}

// Service_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Service_Methods(methods []server.Method, s Service_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbfda1920aff38c07,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:Service",
			MethodName:    "managementAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ManagementAt(ctx, Service_managementAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// Service_managementAt holds the state for a server call to Service.managementAt.
// See server.Call for documentation.
type Service_managementAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Service_managementAt) Args() geo.LatLonCoord {
	return geo.LatLonCoord{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Service_managementAt) AllocResults() (Service_managementAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{Struct: r}, err
}

type Service_managementAt_Results struct{ capnp.Struct }

// Service_managementAt_Results_TypeID is the unique identifier for the type Service_managementAt_Results.
const Service_managementAt_Results_TypeID = 0xf32d7a3fdc567bdb

func NewService_managementAt_Results(s *capnp.Segment) (Service_managementAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{st}, err
}

func NewRootService_managementAt_Results(s *capnp.Segment) (Service_managementAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{st}, err
}

func ReadRootService_managementAt_Results(msg *capnp.Message) (Service_managementAt_Results, error) {
	root, err := msg.Root()
	return Service_managementAt_Results{root.Struct()}, err
}

func (s Service_managementAt_Results) String() string {
	str, _ := text.Marshal(0xf32d7a3fdc567bdb, s.Struct)
	return str
}

func (s Service_managementAt_Results) Mgmt() (Event_List, error) {
	p, err := s.Struct.Ptr(0)
	return Event_List{List: p.List()}, err
}

func (s Service_managementAt_Results) HasMgmt() bool {
	return s.Struct.HasPtr(0)
}

func (s Service_managementAt_Results) SetMgmt(v Event_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMgmt sets the mgmt field to a newly
// allocated Event_List, preferring placement in s's segment.
func (s Service_managementAt_Results) NewMgmt(n int32) (Event_List, error) {
	l, err := NewEvent_List(s.Struct.Segment(), n)
	if err != nil {
		return Event_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Service_managementAt_Results_List is a list of Service_managementAt_Results.
type Service_managementAt_Results_List struct{ capnp.List }

// NewService_managementAt_Results creates a new list of Service_managementAt_Results.
func NewService_managementAt_Results_List(s *capnp.Segment, sz int32) (Service_managementAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Service_managementAt_Results_List{l}, err
}

func (s Service_managementAt_Results_List) At(i int) Service_managementAt_Results {
	return Service_managementAt_Results{s.List.Struct(i)}
}

func (s Service_managementAt_Results_List) Set(i int, v Service_managementAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_managementAt_Results_List) String() string {
	str, _ := text.MarshalList(0xf32d7a3fdc567bdb, s.List)
	return str
}

// Service_managementAt_Results_Future is a wrapper for a Service_managementAt_Results promised by a client call.
type Service_managementAt_Results_Future struct{ *capnp.Future }

func (p Service_managementAt_Results_Future) Struct() (Service_managementAt_Results, error) {
	s, err := p.Future.Struct()
	return Service_managementAt_Results{s}, err
}

const schema_93337c65a295d42f = "x\xda\xccz\x0ft\x15\xd5\xb5\xf7\xde3\xf72\x04\x12" +
	"n\x0e\x93\x08D\xf0b\x04\x0a\x11\x14\x12Z*\xabm" +
	"HH\x80\xf0\x11\xc9\xe4\x06\xff\xf0\xa9er\xef\xc9\xcd" +
	"\xe8\xbd3\x97\x99\xb9\x09\xb1Z\x0a\x9f\xb6\xca\x92V," +
	"~-}\xd2'\xb6\xb6\x0f\xd0*V\xdeR\x96T\xf1" +
	"\xd5\xff\xf5\xb5XY\xabZ}Z[_\xab\xafv=" +
	"\xe8z\xaf\xb5\xaf8o\xed3\xf7\xde\x99\xdc\x04Lj" +
	"\xfb\xd6c-\xd6\xdc\xecs\xe6\xcc\xd9\xfb\xec?\xbf\xbd" +
	"\xf7Y\xfcT\xd5\x0aiI4>\x03 1\x07\xa3\x13" +
	"\xbc\x9b\xee\x7fj\xe6\xe3O\x7fk;\xb0e\x08\x10E" +
	"\x05\xa0)_\xb9C\x02T\xef\xacl\x06\xf4^\xf9\xbc" +
	"w\xf0\xe9W7\xdd\x04\xdaBD/\xfa\xa5\x8a\xbe\x9a" +
	"\xb7f\xbfP\x98\xf9T\xe5=\xa8\xbe^\xb9\x0c@=" +
	"]9\x08\xe8\x1d\xff\xe2\xa1&\xf72\xeb&\xd0>\x85" +
	"\xb2\x97\xd8}\xa3\xfe\xdc\xb1\xc7\x8fC\x84&\xdfX\xd5" +
	"*\xa9{\xab\x14\x00uO\xd5\x03\x80^\xff\xb7O\xe5" +
	"f\xed\xfe\xb7\xaf\x8c\xbat\xe7\x94{P\xe5S>\x06" +
	"\xa0\xde<\x85\x96\xfeu:\xffY\xe3\xd5e\xbb\xfd\x9d" +
	"\x8a\x15\xdf\x99\xf2\x92\x04\x11\xafn\xd2\xe3\x1bg\xdcu" +
	"`7\xb0\xb9\x92w\xf1\xcbw\xde\xc3oh\xfa*\x00" +
	"6\xbd7\xe5\x08\xaa\xd1\x18M\xc5\xd8\x97\x10\xd0\xbb\x86" +
	"\x7f\xe2\xe4\xea\x05?\xdd\x0dl\xa9\x14\xb0\x06\xd8\xf4v" +
	"\xecyT\xb1\x9a6w:\xb6\x1e\xd0[\x86\x9b\xbe\xa3" +
	"?\xfd\xe2\x9d\xa0\xb5`\x95\xf7`\xd7{[o\xfb\x7f" +
	"w<\xec\x7f\xb7\xb6\xfayIm\xa1\xc9M\x9f\xae~" +
	"C\x02\xf4\x9c\xdb\xb3\x15\x9f\x98|\xff7\xc3b\xdc\xa6" +
	"n'1\xeeUI\x8c\xb7\xcf\xbd\xfbw\x8d\x7f\xff\xfe" +
	">`s1\xd8c4J\x13\x8f\xaa6\xaa\xc7U\xfa" +
	"\xf9\xa2\x1a\xa7m\x1e\xfd\x97-\xbf\x98\xf7R\xf2[\xa3" +
	"J\xe6\x9d\x9aI\x92ZQ;\x0d@\xad\xad%\xc9\xe0" +
	"\xb2\xff\x7f\xde\xee\xc7\xf6\xef\x17L\x95\x84\x0a\xd8\x94\xaf" +
	"=\x85\xea\xaeZbjg\xed2@\xef\x99S\x13>" +
	"\xb3z\xef#\xfbC2\xdc[+dx\xe5\xc2\xcf\\" +
	"Z\xb7\xad\xe3@\xd9\x17\xc5\x94}\xb5\xf7\xa0\xfa\xa8X" +
	"\xe6p-1\xb3cu\xc3\xd1k{:\x0e\x86\xb9=" +
	"Q\xfb*q\xfb\xbe\x98\xb0\xa7v\xebon}\xf3\xb9" +
	"\xef\x81\xb6\x0c%\xef\x8f\xebW|\xf9\xdeK*^\xf1" +
	"W\xbb\xf2\x9c\xa9\x92:t\x0e\xad\x96?\x87\xb6\x9f\xff" +
	"\xe5\xc0\x0f\xfe\xee`\xc7\x03\xa0-\xc5h\xb0\x7f1\xf9" +
	"\x17\xe74J*N\xa3\x9f\xa7\xcf\xb9\x9cDs\xec\xdc" +
	"\xa1\xcb7,\x7f\xfc!`\x17J^dp\xd5\xd0\xf7" +
	"\x1b\xd2?&f\x87\xa6?\x84\xea\xae\xe9\x82\xd9\xe9i" +
	"@o\xa1\xf4\xc6\xba\xd9\xab\x97~\x7f\x84Z\x1c\x9b\xbe" +
	"\x1d\xd5\x13b\xe6\xf1\xe9_\x03\x0cNW[\x88R\xb9" +
	"\xb8kgL\x92\xd4\x8f\xcf E\xdc0\x83\xd4\xf6\xdb" +
	"\xfdo'\xff\xa9\xba\xfaQ\xd0.D\x0c\xb6\xd0\xa6H" +
	"\x88M'glG5ZGkc\x1dqwz\xc1" +
	"\xcem?f\x95G\x80\xb5\x84>\x14\x95ii^\xd7" +
	"+\xa9\xb7\x8a\xc97\xd7=\x00\xf8\xc6\x92/\xdf~\xcd" +
	"\xe2K\x8eh\xcb\xb0x<\xb3\xce}\x8b\xc4\xdar." +
	"\x89\xf5\xb2c\xff\xfc\xdd\xc1/l:\x1a\x96\xbb~\xae" +
	"\x90\xfb\xcdb\xc2\xc1\x83\xcf\\\xf1\x9dw\x0f\x0f\x9b\xf0" +
	"\xf6\xb9\xef\xd2\x84\x8a\x994\xe1\x9a+\xae\x9b\xf2\xb9\x83" +
	"\xff\xf8\x83\xb2\xbd\xd7F\x14\x04hZ4s\x07\x02\xaa" +
	"\x9f\x9eI\x1bWn\xfb\xfd\x03\xb3g\xbc\xfa8\xb0\xb9" +
	"\xf20\xf1\xed\x99y-\xaa\xf7\xcf\xa4]\xef\x9f\xb9Z" +
	"=1s\x1a\x80\xf7Z\xcdo\xd5\x99U\xb7<=\xba" +
	"\x9b\x98\xf9\x0dT_\x17o\xbc2\x93D\xb8\xe8\xaa\x07" +
	"\xdf9u\xcd\xff}\x86\x8cK\x0e\xb4=*\xd1\xec\xa1" +
	"Y\xbd\x92\xbaw\x16\xfd\xdc3K\x98\xc3\xccU/\xbe" +
	"y\xc7\xa5\xc7\x9e\xa1\xc5\xe5\xf2\xc5\xef?o\x92\xa4\xbe" +
	"x\x1e-\xfe\xdcy\xbf\x06\xf4\xfe|\xe8\xeb\xd3b\xdf" +
	"\\\xfd\xec\xe8<\xee\x8b\x7f\x83x<\x14'\x1eKK" +
	"\x0d\xb3J!x6\xbb\x17\xd5\xb9\xb3\xbf\x0br\xb0\x84" +
	"6\x17C\xd3\xda#\x8a\x8c\xd8\xb4o\xf6FT\x0f\xcf" +
	"^\x06\xd0\xf4\xfa\xec\xaf\xd0v\xbb\x95'\xce\xef^\xbc" +
	"\xfb\xc7\xe1S\xa8\xad\x17>\xf5\xe3\xf5t\x0a\x0f\x9ez" +
	"g\xe7\x03U\x0b~2B37\xd4_\x8f\xaaQ/" +
	"t\xa3\xfec\xb4V\xc9\x85j\x0bqb\x88u!\xa9" +
	"K.x\x0b\xd5\x0d\x17L#5\xb8`\x19\xf9\xa1\x92" +
	"\xa9\x8dv\x0c'\xe6\x1eA\xf5\xbd\xb9\xe48\xde\x9fK" +
	"\xec\xbf\xbc|V\xe75\x15\xed\xaf\x847\xbaa\x9e\xf0" +
	"Z\x9b\xe7\xd1F\xff\xf4\x7fj\x7f\xff\x82\xbb\xea\xe7\xa3" +
	"\x8br\xd7<\x9bD\xb9WL\x9d\xe5\x9e\xf8\xc4\x8f\xb6" +
	"\xbd\xfa\xcb\x11\xeart\xde\x11TO\xcc\xa3M\xbe>" +
	"\xefK\xa8V\xcd'}\xf9n\xcb\x9d\x0f}\xe1\x0fm" +
	"\xbf\x1a\xe1\x88O\x7f\xec\x08\xaa\xb5\xf3\xe98\xd9|\xf2" +
	"Yo\xb2\xdf\xa9Ou\xaey{\x84\xc1\xd7\xce\x7f\x12" +
	"\xd5Eb\xe6\x82\xf9\x7f\x00\xf4\x1e\xbe\xf5\xa4\xd4\xf6\xe4" +
	"\xcf\xde\x85\x90\xfd\x9c\x98/\xb4\xff\xfd\xf9\xb4\xc7\x9f\x7f" +
	"\xee\xb2\xd7\x9a\xaf_\xf4{`\x8bJ\xfc\xceX0\x95" +
	"&,Y@\x13^\xb4/\x9c\xd2\xf5\xc5\xf6\xff \x81" +
	"\x04\x1cE%\xa5\x1a\x9b\xf4\x05\xef\xa2z\xe3\x02\xfa\xdc" +
	"\xd0\x82A\x00uVC\xcc\xdbs\xe7\xa9uu\xcd\x87" +
	"\xff3,A\xd6pJ\x1cu\x03\xad()\x8f\x1c\xbc" +
	"\xf8\xa5\xe8\x1f\xe9@\xa2\xe5\x07\xb2\xa1\xe1]T77" +
	"\xd0\xcfl\x83\xf0n\x17,\x7f\xf4\x85?\xbf\xf6\xf6\x9f" +
	"\xc8\x17\xca\x81\\|V.|\x1e\xd5\x93\x17\xd2\xcf\xf7" +
	".\x14v\xf1\xef\xb7M\xfe\x1eO\xa5O\x8f\xd0\xa3\x8a" +
	"EGP=\x7f\x91p \x8bVK\xe0A\x85\x97\xb5" +
	"R<sq\xd6\xaa0\x8d\xa4~q\xd6\xa2\xc7g\xb3" +
	"\xba\xa9\xa7y\x96\x9b\xeeEI=g\xe6\x96\xaf\xe2\xb6" +
	"kd\x8c\xeb\xb9\x9d\xe0\xf6\x80\x91\xe4\x17e\x0d\x93\xdb" +
	"z&\x18\x98\xd3\xcd\x9d|\xc6u\x00\xb4\x88\x1c\x01\x88" +
	" \x00\xabj\x00\xd0&\xca\xa8\xcd\x910\xd6\xc7m\x17" +
	"\xa7\x00v\xc9\x88\xd5\x81\xb1\x03\x12\xb1\xb4\x91\xe8Y7" +
	"\xd2\xa5\xdbz\xd6\xb9he\xdeu\x15\xc3Lk\x95\x88" +
	"!\xa5au\xa1P^\xd5\x10\xc8\x8dU4\xc8+\xd7" +
	"\xc56\x98\x86\x1bK\xe4xR\x9bX\xda\xe2\x82^\x00" +
	"m\xbe\x8cZ\x9b\x84\x885\xa4\"KZ&!\x80\xb6" +
	"NF\xed\x0a\x09\xbdd\xdeu\x0d3\x9d\x00%\xc7\x93" +
	"\x01\x03\xa5\xc5\x0b\x0c$\xf3n\xa7\xbe\xa5\xc5\x91\x1d#" +
	"kdt\xd7\xb0\xccn\xdd\xe5]\xdcNr\xd3\xd5\xd3" +
	"\x1c\x00'\x83\x84\x93C\xccN\x1c\x0b\xb3-y\xd7\xca" +
	"\xea\xae\x91LX\x83\x86\x99\xbe\xa8e \x9d\xb0\x8cL" +
	"\x0f\xcf\xe6\xa0\x0bQ\xab\xf4yAd\xed\x0f\x01hk" +
	"d\xd4z$d\x18\x11\xcc0\xed\x00\x80\xd6#\xa3\xb6" +
	"IB&I5(\x01\xb0\xab\x9f\x07\xd0R2j9" +
	"\x09=\xc722m<\xe7b\xff*\xcbn\x19\xe0v" +
	"\\O\x1bf\xda\xdf\xad\xd7$\xfe\xfd\xb4\x19\x00\xbc\x94" +
	">\xe4t\x98\x09\x0b\xfd\xcf_n\xc4\xcc\x945\x88\x0a" +
	"H\xa8\x10\xde\x11\x1b\xec\xe8\x93Zz\xad\x01\x1e\xde\xe7" +
	"H\xd6\xc7t\xcekt{@\xe1\x8e\xabM\xc40\xa0" +
	"\xa9\xe8\x0e\xe0\x01\xab\xb8\xc3[i[\xb9\x0d\x8e\x9e\x06" +
	"\xe4\xde\xfa\x9c\xbbR\xb7{-4;\xd3Y\xb7Mw" +
	"Q/\x9e6\"[\xb0\xb6p\xdaKK\xa7\xcd\x96l" +
	"\x07\xd0\x16\xcb\xa8}JB\x8fo\xc9Y\xb6\xcbS@" +
	"\xc7\x0aR\x14\xc9\xa2,\x7f\xcdN\xf4W\xd4\x01\xab\x83" +
	"\x0d\x00bu\x88\xafI\xe34$}@72zo" +
	"\x86\xaf\xb7\xd3\xbai$\x83\x19\xce\x1c!\x05t\xc6(" +
	"\xb3\xce\xc0$\x9b\xfd\x15H;V\x88\xf3~\xb4\x81\xf6" +
	"\xc9\x0e5\x02\xa0\xc4\xf6\xd7\x01\xa0\xcc\xf6\xd1#\xc2\xf6" +
	"\xd0#\xcav\xd5\x03\xe0\x04v+=\x14\xb6\x8d\x1e\x13" +
	"\xd9\x10=*\xd8fzLb\x06=&3\x9d^\xa8" +
	"dWN\x05\xc0*\xa6\x11q\x0a\xeb\xa0G\x8c\xb5\xd4" +
	"\x03\xc4\xf4\xfe\x8c\x13\xd73\xd7[\xa6\xac\x9b\xb2\x9e\x93" +
	"uG\xd1\x9d~%\xd9\xb7TI\xe6\x96(\xc9\\\xa3" +
	"\x92\xcc5)f\xee:\xd9t0\xaf\xe4uS\xc9\xeb" +
	"\x8e\x927\x8d\x12\xb3\x13\xc6\xea\x08\xc8&\xc8\xb2\xc1\xb7" +
	"\x06\xc1\xef\xac\x8d\x82\xdf\x19\xad\x82_V\x0f\xe0\xe5\x0a" +
	"\x86\x08r\x9ao\xed5\xac\xac\xee8JF7\xc6x" +
	"r\x85\x0f\x96\x9d\x920\xf3\"\xb1Sw]n\x8b\x89" +
	"\xdc\xe5\xb6\xe3ohi\xd1\xd5\xa8W\xe3=\x00\x89M" +
	"(c\"\x83d\xa1\xbe\x02\xaa\x06\xda\x00\x89~\xa2\xbb" +
	"\x18\x18\xa9\xbaY\xd0sD\xbf\x81\xe8\xb2\\\x832\x05" +
	"\x1a\xfc\x06@\xe2\x06\xa2\xdfB\xf4H\xa4\x06#\x84\x16" +
	"\xf1I\x80\xc4-D\xdfM\xf4h\xb4\x06\xa3\x00\xea." +
	"A\xdfM\xf4\xbb\x89>aB\x0dN\x00P\xf7\xe2\x0e" +
	"\x80\xc4\xddD\xbf\x8f\xe8\x8aR\x83\x02\xbf\x09\xfa}D" +
	"\x7f\x84\xe8\x13'\xd6\xe0D\x82\xf9x=@\xe2a\xa2" +
	"?A\xf4\x8a\x8a\x1a\xac\x00P\x8f\x0a\xfacD\x7f\x96" +
	"\xe8\x93&\xd5\xe0$\x00\xf5)<\x00\x90x\x96\xe8/" +
	"\x13}\xf2\xe4\x1a\x9cL\xf0Z\xd0_&\xfa\x9bD\xaf" +
	"\xac\xac\xc1J\x00\xf5u\xb1\xcekD\xff\x0dJ\xe8\xe9" +
	"V\xb6\xcd\x1e\xea\xd4\x91\xc4\xba\xd22]\x85\x9bn\xc9" +
	"\x91\xe8V\xf6\xd25KWZ\x107\xddr\xfa\xfa\xa6" +
	"Q\xe9d\xc4:f\x8d\x14-\xc6\xe5\xe1\x83\x89\x8c5" +
	"\xd8&\xf1\xe4J\x8b\xf7\xf5%\\\xddL\xe9v\x0a\xc2" +
	"3V\xe9\x8e{\x96\x199\xddv[\xd6w\xf6\xa0\xd5" +
	"\xb2\xbe\x93V\x833\x8c\xd1:\xa1\xb1$\xc5\x09\xc3j" +
	"\x81f\xff\xb5Q\x07\xe8\x9d\xf2\xd5\x12\x98\xb1\x06{\xac" +
	"Dgkl\xd8{#\x87\x87\xbdm\xae\xb4L\xb2\x04" +
	"h\xb6\x85\xfa\x8ep\xcd\x1f\x1d\x0b\xf8\xc62\x0c\x09\xd4" +
	"\x15\x90@\x8d\x84\xb2\x91\xc2J\x90\xb02\xf4\xcd\xc8Y" +
	"\xbf\xd9\xb1\xae;\xde\xa6\xbb\xdc!\x83\xaa)-z\xe3" +
	"r\x00m\x8b\x8c\xdaM\x815\xb1m\xd7\x03h_\x90" +
	"Q\xbb-\x14\xefn\xbd\x16@\xbbEFmw`G" +
	"lW+\x80v\x9b\x8c\xda\xd7\x03#bw\xda\x00\xda" +
	"n\x19\xb5\xbb%l\xf6\x03\x1aV{;Y\xbd|\xdf" +
	"\x07\xff\xfa\xb5\xa2\xb7\xe7\xba\x9d1\xb8\xe3Bs\xe2L" +
	"S2\xb4_7aAl\xf4\x09[\xfbu{\x80;" +
	"\xee\x19_]\xa3C\xfcL3\x8abS\xc6\xe2\xb3:" +
	"\x87\x9f\x8f8t\x82i\x18J\xb9\x18n\xf4\x8a\x9e\x0b" +
	"d\xdb\x09#\xa4\xeeQb&I~\xa1\x8c\xda'%" +
	"_\xdf\x0c\xd7\xb0\x00\xcd2`W\x0d\xd8\xacg\xad|" +
	"\xc8\xd2\xc6\xe5\xde\xd7\xf8\"\xba\x88\x02|\x9c\"<'" +
	"\x05\x98(\x8e\x94\xf5\x0a\x17_u\x07\x80\x97\xb697" +
	";u\x13\x94\xbc\xcd\xbd\x82s\xefB\xdbJ\xe5\x93\xae" +
	"a\xa1\xf9\xd1\xc3sg\xb9\x92\x8f7<\x17X\xea1" +
	"2\x19\xa5\xc0H\xa4\x84K\xaa\x1a\x03\xf3\x88\xa7x\xce" +
	"\xed\x1f\x05}\xfd- \x86@\xed\xb2\xeb\x84M\xb5\xb5" +
	"\xb0\x97\x1e\x09\xb7r\xd3\xb5\x0d\xee\x04\xb0\xb7\x94\x0c\x01" +
	"\xac@\x86q-\"a\x98\xc8p\x1ai\x16\x16\xa6\x97" +
	"\x0afe0\x7fL\x8a\xdba\xdbF\xda\x0f\xb1\xa5\xa8" +
	"\x8a\xc2\x07\x84\xb4\xf3@\xa0\x89%\x1f\xf0q\"~\xd2" +
	"\x07\xf5\x9ei\xb8\xb6\xee\xf2\x95\xe8\xbb=[\x8f\x0d\xf3" +
	"zN>\xd3w\x96\xe1qm\xb8\xa8\xafE\x10J\x18" +
	"4. #mzz\xe9\xb8\xf7\x10P\xbfKF\xed" +
	"\x1f\x8a\x9bFd\xf7\x12&\xbfOF\xed\x11r\\X" +
	"\x83\x12\";L\xc6\xf7\xb0\x8c\xda\x13\xe4\xb8\xa4\x1a\x94" +
	"\x11\xd9\xd1\x8d\x00\xdac2j\xcf\x92\xe3\x92k0\x82" +
	"\xc8\x9e\"\x9e\x9f\x95Q{\x99B\x7f\xa4\x06\xa3\x88\xec" +
	"\xf8K\x00\xda\xcfd\xd4~%\x95`\xac\x85\x14\x01\x1c" +
	"n\x0f\xc4}\xff\x8f \x09\x98\x9b\xb4\xad\\G6\xa7" +
	"KIw\xbd\xb9&\x9f\xcd;\xadzF7\x93\xe1\xcc" +
	"%\x19@m\x8c\x05\x90\x1c0\x1a\xa3%l\xee\x18\xa9" +
	"<_\x032\xdf\\z\xc7*\xa8\x1d\x16\xf5.f\xaf" +
	"\x09\x0dg\xf5-\xdd\xf4\x9a\x94\xe7\xdd<i\x0dp{" +
	"\x95\xad\xfbf;\xce\xac\xa1}\x80~w\xf5s\xd3\x8a" +
	"'\xdc\x82\x91U\x0boAN\x0c\x91\xcd\xed\x16\x80\xf0" +
	"\xfc\xb5\x02\x00\xcfZ\x0b\xe0\xf1,\xb7\xd3\xdcLR\xf2" +
	"\xd0\x97\xb1\x06\xb9m\x98\x80iO7\xdd~\xee\x18\x8e" +
	"\xb0<\xdd\xcd\xdb\x86;\x14\xb6\xc2\x0f\xb1\xf6\x8cn\xba" +
	"\xc2\xde\x04\x08\x9c.6\xd1\xe2\xa3\xf0K\x1a\xc4&\x96" +
	"4\x8aM,h\x14(\xfc\xfc\xe5\x02\x85\xcfh\x04\x88" +
	"\xd9\x96\xe5\xc62\\\xef\x8b;\xfd\x96\xe5\xc6\xfb\xec\xbc" +
	"\xe16;\xae\x9d\xbf\xce\x8d;\xf9\xb4n\x8fO-G" +
	"\x03\xadd\xe3\x18*h\xb3\x8a'CU\xc9\xaa\x8d^" +
	"\x11\xd4\xca\xe5\xa8\xb6\xf8\x93\xa2De\xc9\x0e\xdb)\"" +
	"\xac\x90Q[\x17D\x89\x0e\xa2\xb5\xc9\xa8u\x91F\xaf" +
	"\xf05\xba\xd3\x0er\xeb\xe6\x9c\xd8 V\x07\x9f\x1e=" +
	"j\x18f\xd2\xb2s\x96\x0de*;\x1e\xbd\xe8\x19\xca" +
	"q(8\x8fJ\xcf\xf3\xbdG(\x1f\xac\xc2\x0f\xbcB" +
	"t[;,#t\xb9m\xea\x19\xca\x08cA\xdd\x09" +
	"\x10cbc\xe1\xd1R\x19\xba0:\xae<\x7f\xd4\xd4" +
	"\xa2 l\x85\xdbN(\xd7/\x93w\xc9\xefu\xd4\x85" +
	"\x05^\xc0>\x9d\x0dAU \x10x\xd81WC\x18" +
	"\x93\xc5L=\xcbG\x00\xb4I\x1f\x15\x14v\x15P\x82" +
	"\xb9\xca\x12\x00Q\xd1\xb3\xa3F\x9d\x1a\x09\xb7f\x0d\x93" +
	"^\xc4X\xd0\xc5)\x93\xe8_3\x8e\xff\xadc\xe0\x99" +
	"J]\x7f]\x91vs'\x96\xcf\x0c\xe7\x82\x82G\xa5" +
	"\x8c\xda\xf4\x0fCi\xe32$\xbd\xcf\xe5\xb6\x90O\xa4" +
	"\x1aE\x8a)\x9c\x986GFm1i\xa3$\xf2K" +
	"\xb6\xa8!0\xae8\xa7W\xb1:\xe8\x93\xf8\x1f\x8e\xa5" +
	"\xf4!\xa7T@\x1a[6\x90\xe0v\x8c\x04\xe2C\xa8" +
	"(\x80\xf7__\xf9\xd1%\x8b\xff|\xf2\xb7X\xac\xe5" +
	"2v-H\xacB\xf1\x8a/C\xcct[\xdc\x15(" +
	"P\xef\x895w]\xf9\xc2\xf1\x07\x1e\x1a\x87;\xf7M" +
	"\x94\xc0\xbel\xa6\xcb,qm\xc8\xe8\x8a\xc1\xbc\xf3\xda" +
	"\xc0\xcba\xc1\x107\x90<\xbad\xd4\xae\x12U\xc5\x8c" +
	"k\x0c\xe8\xb6\xef8\x1e~+5\xb1\xfb\xc1m\xaf\x17" +
	"\xd5<G\xe1\xa3\x8d\x9b\x10s\x0cw\xa8(\x9f\x18E" +
	"_d\xdeMW=>\xe7[_\xdb\xf9\x1b\x11M\xc6" +
	"\xebfF\xcb\x06\xca\xddL(\xc5\xaa\x1b-\xc5\"F" +
	"n\x90Q\xbb%`\xeef\x92\xc2M2j\xb7\x13P" +
	"A?\xc3\xdaY\x1fJ\xbb\"\x92\x9fa\xed\xaa\x0f\xd2" +
	"\xae3\xba\x9d$\xa5\xeaYC\xd4\xe1\x0aA@1\xfb" +
	"\x97\x06\xbf\xad\xa6\xbf\x0c\xa2]\xda\xc6\xb3\xba\x99*\x8b" +
	"\x85\x02(\x94\x98\xd6\xc9\xfa\xaf\x92Q\xeb\x0fb\x19\xef" +
	"\x0e*\xa6>:\x03`YR\xfb~\x195\x97\x98\xae" +
	"\xf6\xd1\xd9f\"fd\xd4\xb6H\xb8\xd5\xf4?7," +
	"7?\xa3\x15\x86\x91?`\xdc!\x08\x83\x13@\x8aN" +
	"\x18o\xac\xeb\xe5\xee \x97\xb9Y\xb4Q\xb9,\xd6\x09" +
	"\x1b\x8d\x94'r\xa5\xac\x16`d\xce\xd9\xecg\xa5g" +
	"IF#\x1f&\x7f\xe1\xf2\xe7#\x06}A\xd6\xb1<" +
	"hf\xb1\xf6\xedA\xa3\x97\xb5\xb7\x06m\x12\xd6\xb2#" +
	"h{\xd0H\xa99\xc8Z\x0e\x04\x8d@\xd6~ h" +
	"\xa6\xb2\x8e\x03A\xff\x9au\xb6\x06]0\xd6\xb1\xb1\x90" +
	"\xb6{\xc5\xdaz\xa4P\\\x87\x02\x82\x87R\xd1\xbdH" +
	"\x80\xad\x85Z\xa3W4\xa0\"\x9c\xf5\x13\x06\xaf\xa8X" +
	"e\xe4\xf5e\xe0\xd7'o\xa54POs\xaf\x98\xe2" +
	"\x80l\x99c\x14d\xfb\x00\x97MW\xb4>\x82.\x18" +
	"\xbb6\xd4\x03g\x1b\x037\xcbX\x83\xd7^\x8401" +
	"\xc2@\x9e\x00\xc8\x09\xbf\x12*(\xda\xcc\x92\xea\x1f&" +
	"\xd3~PF\xed\xb1@\xf5\x1fm\x08r\x90*\xc9\xf3" +
	"0\xd4\x02dG\xeb@\xaa\x92? b\xa9\xc5\xca\xee" +
	"m\x05\xa9*r\x9a\x88\xa5\xde2\xdb\xd9\x08\x12\x8b\xca" +
	"\xa2\xc6\xc8\xf2\xa4w9\x19\xb5\x1b$d\x13\x16\x8b\x02" +
	"#\x1b\xda\x1e8\x9b\x98;\x94\xe3#\x01W\xcc0\xfb" +
	",\xac\xf6~\xfa\xaa\xfc\xc1\x0b\x9f\x7f\xe1\xe5\"|\xd1" +
	"\xdd\xadB\xe7\xb9\x19\x17\xe1\xa9\x08t\xa6\x82\x84S)" +
	"1\xc9\x9b-n\xc2\xd5\xd1v\xd7\xf7\xb5\xe9C0\x02" +
	"B\x8e\xb7\xeae\x95'\xd3g\xef\x80\xd5\x14;`#" +
	"\xa0\xd7\xd8\x8f\xbd\xd9t\xe9\xb8\xc8Y-\xf6\xcbZ\xcb" +
	"E\x08\xd8\xb6]$\x147\xb6\x8a\x84\"\xbfC$\x14" +
	"\xf9\x8d\"\xa1\xd8\xdc*\xca\xfa\xc6\x01Q\xd6\x17\x8f\x89" +
	"\xfe\xa3\x82\x19\xad\xa2\xac\xaf\xaf\x15e\xfd\xab\xbb\x01\x0a" +
	"\x15/O/\xb7\x8bB\xb1\x0a\xf4\x11v\xe1\x19!\x15" +
	"\xde\xea\x16\xf4\xda\x1aU\xed\xbd\xec\xe8\xb6c\x8ej;" +
	"[\x0b\x9d7\xcf\xe1\xeeez&\xcf)^;\xfa\x00" +
	"O\xb8\xbaK\xe9\xda\xb8jI\xe16\x9a\xe8\x1d\x12\x12" +
	"(\xddLb\xd8\xeb\x15\x1bV\xa0\xf0lN\x9b/G" +
	"\x10E\xdd\xbeB\xd4\xc3+Q\xc6\xc4tQ\x9f\xf7;" +
	"kj\xad\xa0O'\xfa\x1c,\xa4\xe7\x12\xa2z\xbe\xa8" +
	"\xdb\xcf&\xfaB,d\xe82\xa2\xba@\xd0\xe7\x13}" +
	")\x16\x92\xf4\x08\x80\xbaD\xac\xb3\x94\xe8+D}\xbe" +
	"P\xb7\xff4\x1e\x01H\xac \xfa:Q\x9f/\xd4\xed" +
	";D\xfd|\x1d\xd1\xaf\x10\xf5\xf9B\xdd~\x03\xae\x05" +
	"H\xf4\x10}\x13m\xa4\xc2/\xdb_\x8d\xbd\x00\x89\xab" +
	"\x88\xdc\x8f\x12R8\xa8\x00P9.\x0fw#\xe8h" +
	"zx6\xd7\x83\xfd6w\xfa\xadL*\x94\xf5\xfb}" +
	"\xbf\x1e\x8e\xd9\xdc\xe5\x86\x99\x12\xa5\xed\x12f3L\xd1" +
	"\xe3\x84\xb8\xe9\xb6$.\x0f\xa7\xf5#\xe9O\\\xb9B" +
	"\xa4\xd3[\x9aR\xfaP\x17\xda<i\xe4\x12\xf9l\xb8" +
	"?\xa8oY\x99\xb7m\x8e\xa6\xdb\xa6\x0fu\xd9\xbc\xd9" +
	"\x9fR\x9a\xe0\xf2,\xfd\xdd\x82\xbd\xd6\x00o\xd5\x1d\x1e" +
	"\xa3m\x97\x86{u\x87\xfb-\xc7P\xed>|\xb0X" +
	"\x1d\x9cz!\xb2\x95\xca\xbc\xa5\xb84.T\x1c\xaaV" +
	"5\xfb\xe5*\xa1[\xa5\xebNg\xab\xad.\x0fps" +
	"\xd1\xdd.Z\x1e\xc4\xe9\xb2<8H\xdfJ\x8b\x97\xed" +
	"\xf4\xa3{\xb1\xbfv\xed\xbe}\x80\xc7)ipi\xc5" +
	"\xea\x02p\x1a\xe6\x16S\xba\xcb\xcf\x02+\xa2ce\xa9" +
	"\xd9\xe7I\x08?\xb8\xb3\x81\x8d\xf1v\xd3\xb5\x87\xb4\xe9" +
	"r\x14#\xc5\xcbT\xa1KQ\x87N\x81\xc4\x0e)\x18" +
	"-]\x15\xc1\xe2\x05\x0ev\xef\x9f@b\xf7*\x00\xa5" +
	"KrX\xbcn\xc5\xf6\xbc\x05\x12\xdb\xa3\xa0T\xba\x84" +
	"\x88\xc5+pl'\x8d\xedT0\xb8\x03\x88\xc5;\x95" +
	"l\xdb\x1d \xb1\x1b\x15\x94K7m\xb0x7\x88m" +
	"\xa6\xb1\xacR\xf2\x93Ry\xae\x17\x17\xc9\xde\x8a\xa0\xa8" +
	"6l\x06\xa9X3\xb7\x1d\x7fJ1\xe7\x95\xca\x93^" +
	"\x82\xf9\xc3\xc6\xcbJ\x0f\x85\xf1rg\xcd1\xfc\xe1a" +
	"\xd4\x8f\x96V\x11\xb2j6\xcc\xf4E+\xd7\x85\xea\xfb" +
	"\xf5\"\xb6U4\x00(\xc9\xbc\x1b\xcb\xf0>w\x8c\x1e" +
	"\xdf\xc7\xc0E\xd4S\xaa\xfb\xcc\x17\xebn\xf6c\xa6\xe1" +
	"\xc7L\xee\xc7\xcc\xab\xfd\x98y\xb5\x1f3\xaf\xf4c\xa6" +
	"\xe6\xc7L\xcd\x8f\x99\x9a\x1f3\xb5\xd6\xff\xadQ\xf2/" +
	"-+\x8cp\x01A\xad\xcf/\xd5\xc4\xec\xb3\x94j," +
	";](\xd5\x94\xee\x1d\x95\x95j\x94\x0fK\xe6\xfd\xe2" +
	"Fi\xa0\xc5- )t\xcet\x95(\x9b\xce\x86\xae" +
	"\x12\x85\xae\x7f\x0d\xab\xafL\x18\xa7 \xdac\xe4'\xca" +
	"\xda\x0b\x0d\xe1\xc2F\xd1C\xd7\x17<tJ:\x13 " +
	"Ul\xde\x87\xcc\xfb\xea+o\xbcsW\xd5\xb3'\x87" +
	"U\x8aB\xc4a\x95\xa2\xa98\xac\x8aD\xa9}K\x04" +
	"\x19N\xc5\x9e\xbf\xd5\xe1v\xf3\xb8S^4Z\x1e\x9c" +
	"\xee\x19\xeb\xb3\x7f!\xf4Z\xa3\xdb1\xb2\x87B7\xc4" +
	"\xc7Wl\x8f\x0d\xa0}]F\xed\xdb\x85\xd4\x1a\x11\xd9" +
	">\"\xde-\xa3v_\x11Y\x01\xb0\xfd;B-\x92" +
	"H\xa1\x8d{\xf8\x08\x80\xf6\x88\x8c\xda\x0f\x09SU\xfb" +
	"\xdd\x90c\xbd\x00\xda\x132j?\x92\x10\xc0/R=" +
	"Gz\xfbC\x19\xb5\x9fH\xff\xf3\xb0\xa5\xe0\x1az@" +
	"1\xb2|x\xa98\x1a\x93\x87\xb5\x83C\x97\xb5\xc7/" +
	"\xeb\xe2\x8d\x98D\x8e'\xfd\xbaF\xa8\x98\xd38Z1" +
	"\xa71(\xe6\x94\xdaN77\x84\x9a\xe8\xc5\xb6\xd3\xad" +
	"\xdd\xe5\xd5\x1cD\xb6kG\xd0/\x8f\x0bm\xc3Xp" +
	"\xc9\xdaw\x05\xf1\x01B\xefEQ\xc4\xf2\xa6A\xfe\xa2" +
	"tU\xaf\xe0/\x92yw\xbd\xbd\x8e\xf7\x01\xd2h\xe9" +
	"V_a\xd4\xbf\x98\xd5\xc5\xb1\xfc:]\xe1l\xc6\x14" +
	"oBq.tEj\x93\xb8m3\x03E\xc0Q\x19" +
	"\x8aKRj\x85\xf8[VQ<#\xec\xfdz\x11\x1b" +
	"N6\x8a\xd8\xf0\x8e\x7fM\xea\x17\x8d\"6\xbcR'" +
	"b\xc3\xf1:\x91O=\xe7_\x93:\xd6(\xaeI=" +
	"Z/\xaeI\x1d\xf2\xafI\xed\xf7\xafI\xed\xa3\xb1j" +
	"\xb6\x87\xfebl\x17\xfd5\xd5\xbfz\xa5\xfaW\xafj" +
	"\xd8\x10-V+\xaaIx\x0e3\xe81M\\\xbdR" +
	"t\xa7?\x9e\xd4S\x99\xac\x92\xd4\xe9\xbf\xa3$\xf5|" +
	"<\x95&Jz0\x19\xef\xb7R\x99\xac\x9cM\xcaY" +
	"G\xb1\x8cd<g\xd0H\xce\xa0\xff\x8e\x923\xf2\xf1" +
	"\x9c\x91O]\xa7\xe42\x83\xf1\x9c%\xc6\xac\xac\xe2X" +
	"C\xb2\xe3\xc4\xdd|*\x93\x8d\x0fr\x9er\xe4A\xe7" +
	"\xbf\x03\x00\x00\xff\xff\xc7\x13f\xa1"

func init() {
	schemas.Register(schema_93337c65a295d42f,
		0x82a3c6bf1cc5ad84,
		0x8460dac6abff7ed9,
		0x846f567433b186d1,
		0x8feb941d70f2a468,
		0x9437da695f7567e7,
		0x94aa9c195abf0a1a,
		0x94d32947f136655e,
		0x95cdc661a6600137,
		0x9ead0b36096d9073,
		0xa1f99f32eea02590,
		0xa363d226e178debd,
		0xa9a9bc941e963701,
		0xa9b89d473e06f2c7,
		0xaa49811a4e3e2c59,
		0xab49546abd2a478a,
		0xaec9e089e87f1599,
		0xaf49ab9bbe76e375,
		0xb2bf3a5557791bc1,
		0xb33447204cdf022c,
		0xb492838c7fed50b0,
		0xb91010c363e568a4,
		0xba0c11cf818d29fd,
		0xba3900305e908e31,
		0xbd608077a7cec156,
		0xbdb5eaa658c7abab,
		0xbeb6ab7b0e6b585e,
		0xbfda1920aff38c07,
		0xc6880d1c13ec14dc,
		0xc75b5ef2e9b05c2d,
		0xc7c14e92e0cd461c,
		0xc8479e0f1798b1fc,
		0xcb20e21466098705,
		0xcf672ab379467704,
		0xcf94305221c00752,
		0xd0290daf8de9f2b0,
		0xd1bfc1c9617d9453,
		0xd90939a58e404ff8,
		0xd945095e4d1d3ad4,
		0xdb4674cbf3154bfa,
		0xe3da81cc36d5741d,
		0xe444f780b29541a7,
		0xe5484dc513ee11e0,
		0xead8c24402f189b4,
		0xf32d7a3fdc567bdb,
		0xf54586500e2b72cd,
		0xf6b53f1a4cf29599,
		0xf805d22fabb80702,
		0xfae5dcfccbb93a23,
		0xfd676465ae0b8cf0)
}
