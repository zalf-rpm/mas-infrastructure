// Code generated by capnpc-go. DO NOT EDIT.

package monica

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	common "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/common"
	crop "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/crop"
	geo "github.com/zalf-rpm/mas-infrastructure/capnp_schemas/gen/go/geo"
	math "math"
	strconv "strconv"
)

type ILRDates struct{ capnp.Struct }

// ILRDates_TypeID is the unique identifier for the type ILRDates.
const ILRDates_TypeID = 0xa1f99f32eea02590

func NewILRDates(s *capnp.Segment) (ILRDates, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return ILRDates{st}, err
}

func NewRootILRDates(s *capnp.Segment) (ILRDates, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return ILRDates{st}, err
}

func ReadRootILRDates(msg *capnp.Message) (ILRDates, error) {
	root, err := msg.Root()
	return ILRDates{root.Struct()}, err
}

func (s ILRDates) String() string {
	str, _ := text.Marshal(0xa1f99f32eea02590, s.Struct)
	return str
}

func (s ILRDates) Sowing() (common.Date, error) {
	p, err := s.Struct.Ptr(0)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasSowing() bool {
	return s.Struct.HasPtr(0)
}

func (s ILRDates) SetSowing(v common.Date) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSowing sets the sowing field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewSowing() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) EarliestSowing() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasEarliestSowing() bool {
	return s.Struct.HasPtr(1)
}

func (s ILRDates) SetEarliestSowing(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEarliestSowing sets the earliestSowing field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewEarliestSowing() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) LatestSowing() (common.Date, error) {
	p, err := s.Struct.Ptr(2)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasLatestSowing() bool {
	return s.Struct.HasPtr(2)
}

func (s ILRDates) SetLatestSowing(v common.Date) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewLatestSowing sets the latestSowing field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewLatestSowing() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) Harvest() (common.Date, error) {
	p, err := s.Struct.Ptr(3)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasHarvest() bool {
	return s.Struct.HasPtr(3)
}

func (s ILRDates) SetHarvest(v common.Date) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewHarvest sets the harvest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewHarvest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s ILRDates) LatestHarvest() (common.Date, error) {
	p, err := s.Struct.Ptr(4)
	return common.Date{Struct: p.Struct()}, err
}

func (s ILRDates) HasLatestHarvest() bool {
	return s.Struct.HasPtr(4)
}

func (s ILRDates) SetLatestHarvest(v common.Date) error {
	return s.Struct.SetPtr(4, v.Struct.ToPtr())
}

// NewLatestHarvest sets the latestHarvest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s ILRDates) NewLatestHarvest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(4, ss.Struct.ToPtr())
	return ss, err
}

// ILRDates_List is a list of ILRDates.
type ILRDates_List struct{ capnp.List }

// NewILRDates creates a new list of ILRDates.
func NewILRDates_List(s *capnp.Segment, sz int32) (ILRDates_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return ILRDates_List{l}, err
}

func (s ILRDates_List) At(i int) ILRDates { return ILRDates{s.List.Struct(i)} }

func (s ILRDates_List) Set(i int, v ILRDates) error { return s.List.SetStruct(i, v.Struct) }

func (s ILRDates_List) String() string {
	str, _ := text.MarshalList(0xa1f99f32eea02590, s.List)
	return str
}

// ILRDates_Future is a wrapper for a ILRDates promised by a client call.
type ILRDates_Future struct{ *capnp.Future }

func (p ILRDates_Future) Struct() (ILRDates, error) {
	s, err := p.Future.Struct()
	return ILRDates{s}, err
}

func (p ILRDates_Future) Sowing() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(0, nil)}
}

func (p ILRDates_Future) EarliestSowing() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p ILRDates_Future) LatestSowing() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(2, nil)}
}

func (p ILRDates_Future) Harvest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(3, nil)}
}

func (p ILRDates_Future) LatestHarvest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(4, nil)}
}

type MineralFertilizer uint16

// MineralFertilizer_TypeID is the unique identifier for the type MineralFertilizer.
const MineralFertilizer_TypeID = 0x94aa9c195abf0a1a

// Values of MineralFertilizer.
const (
	MineralFertilizer_ahls  MineralFertilizer = 0
	MineralFertilizer_alzon MineralFertilizer = 1
	MineralFertilizer_an    MineralFertilizer = 2
	MineralFertilizer_ap    MineralFertilizer = 3
	MineralFertilizer_as    MineralFertilizer = 4
	MineralFertilizer_ash   MineralFertilizer = 5
	MineralFertilizer_cf4   MineralFertilizer = 6
	MineralFertilizer_cp1   MineralFertilizer = 7
	MineralFertilizer_cp2   MineralFertilizer = 8
	MineralFertilizer_cp3   MineralFertilizer = 9
	MineralFertilizer_npk   MineralFertilizer = 10
	MineralFertilizer_ns    MineralFertilizer = 11
	MineralFertilizer_u     MineralFertilizer = 12
	MineralFertilizer_uan   MineralFertilizer = 13
	MineralFertilizer_uas   MineralFertilizer = 14
	MineralFertilizer_uni   MineralFertilizer = 15
)

// String returns the enum's constant name.
func (c MineralFertilizer) String() string {
	switch c {
	case MineralFertilizer_ahls:
		return "ahls"
	case MineralFertilizer_alzon:
		return "alzon"
	case MineralFertilizer_an:
		return "an"
	case MineralFertilizer_ap:
		return "ap"
	case MineralFertilizer_as:
		return "as"
	case MineralFertilizer_ash:
		return "ash"
	case MineralFertilizer_cf4:
		return "cf4"
	case MineralFertilizer_cp1:
		return "cp1"
	case MineralFertilizer_cp2:
		return "cp2"
	case MineralFertilizer_cp3:
		return "cp3"
	case MineralFertilizer_npk:
		return "npk"
	case MineralFertilizer_ns:
		return "ns"
	case MineralFertilizer_u:
		return "u"
	case MineralFertilizer_uan:
		return "uan"
	case MineralFertilizer_uas:
		return "uas"
	case MineralFertilizer_uni:
		return "uni"

	default:
		return ""
	}
}

// MineralFertilizerFromString returns the enum value with a name,
// or the zero value if there's no such value.
func MineralFertilizerFromString(c string) MineralFertilizer {
	switch c {
	case "ahls":
		return MineralFertilizer_ahls
	case "alzon":
		return MineralFertilizer_alzon
	case "an":
		return MineralFertilizer_an
	case "ap":
		return MineralFertilizer_ap
	case "as":
		return MineralFertilizer_as
	case "ash":
		return MineralFertilizer_ash
	case "cf4":
		return MineralFertilizer_cf4
	case "cp1":
		return MineralFertilizer_cp1
	case "cp2":
		return MineralFertilizer_cp2
	case "cp3":
		return MineralFertilizer_cp3
	case "npk":
		return MineralFertilizer_npk
	case "ns":
		return MineralFertilizer_ns
	case "u":
		return MineralFertilizer_u
	case "uan":
		return MineralFertilizer_uan
	case "uas":
		return MineralFertilizer_uas
	case "uni":
		return MineralFertilizer_uni

	default:
		return 0
	}
}

type MineralFertilizer_List struct{ capnp.List }

func NewMineralFertilizer_List(s *capnp.Segment, sz int32) (MineralFertilizer_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return MineralFertilizer_List{l.List}, err
}

func (l MineralFertilizer_List) At(i int) MineralFertilizer {
	ul := capnp.UInt16List{List: l.List}
	return MineralFertilizer(ul.At(i))
}

func (l MineralFertilizer_List) Set(i int, v MineralFertilizer) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type OrganicFertilizer uint16

// OrganicFertilizer_TypeID is the unique identifier for the type OrganicFertilizer.
const OrganicFertilizer_TypeID = 0xfd676465ae0b8cf0

// Values of OrganicFertilizer.
const (
	OrganicFertilizer_ash   OrganicFertilizer = 0
	OrganicFertilizer_cadlm OrganicFertilizer = 1
	OrganicFertilizer_cam   OrganicFertilizer = 2
	OrganicFertilizer_cas   OrganicFertilizer = 3
	OrganicFertilizer_cau   OrganicFertilizer = 4
	OrganicFertilizer_dgdlm OrganicFertilizer = 5
	OrganicFertilizer_gwc   OrganicFertilizer = 6
	OrganicFertilizer_hodlm OrganicFertilizer = 7
	OrganicFertilizer_mc    OrganicFertilizer = 8
	OrganicFertilizer_ms    OrganicFertilizer = 9
	OrganicFertilizer_oic   OrganicFertilizer = 10
	OrganicFertilizer_pidlm OrganicFertilizer = 11
	OrganicFertilizer_pim   OrganicFertilizer = 12
	OrganicFertilizer_pis   OrganicFertilizer = 13
	OrganicFertilizer_piu   OrganicFertilizer = 14
	OrganicFertilizer_piudk OrganicFertilizer = 15
	OrganicFertilizer_plw   OrganicFertilizer = 16
	OrganicFertilizer_podlm OrganicFertilizer = 17
	OrganicFertilizer_pom   OrganicFertilizer = 18
	OrganicFertilizer_soy   OrganicFertilizer = 19
	OrganicFertilizer_ss    OrganicFertilizer = 20
	OrganicFertilizer_tudlm OrganicFertilizer = 21
	OrganicFertilizer_weeds OrganicFertilizer = 22
	OrganicFertilizer_ws    OrganicFertilizer = 23
)

// String returns the enum's constant name.
func (c OrganicFertilizer) String() string {
	switch c {
	case OrganicFertilizer_ash:
		return "ash"
	case OrganicFertilizer_cadlm:
		return "cadlm"
	case OrganicFertilizer_cam:
		return "cam"
	case OrganicFertilizer_cas:
		return "cas"
	case OrganicFertilizer_cau:
		return "cau"
	case OrganicFertilizer_dgdlm:
		return "dgdlm"
	case OrganicFertilizer_gwc:
		return "gwc"
	case OrganicFertilizer_hodlm:
		return "hodlm"
	case OrganicFertilizer_mc:
		return "mc"
	case OrganicFertilizer_ms:
		return "ms"
	case OrganicFertilizer_oic:
		return "oic"
	case OrganicFertilizer_pidlm:
		return "pidlm"
	case OrganicFertilizer_pim:
		return "pim"
	case OrganicFertilizer_pis:
		return "pis"
	case OrganicFertilizer_piu:
		return "piu"
	case OrganicFertilizer_piudk:
		return "piudk"
	case OrganicFertilizer_plw:
		return "plw"
	case OrganicFertilizer_podlm:
		return "podlm"
	case OrganicFertilizer_pom:
		return "pom"
	case OrganicFertilizer_soy:
		return "soy"
	case OrganicFertilizer_ss:
		return "ss"
	case OrganicFertilizer_tudlm:
		return "tudlm"
	case OrganicFertilizer_weeds:
		return "weeds"
	case OrganicFertilizer_ws:
		return "ws"

	default:
		return ""
	}
}

// OrganicFertilizerFromString returns the enum value with a name,
// or the zero value if there's no such value.
func OrganicFertilizerFromString(c string) OrganicFertilizer {
	switch c {
	case "ash":
		return OrganicFertilizer_ash
	case "cadlm":
		return OrganicFertilizer_cadlm
	case "cam":
		return OrganicFertilizer_cam
	case "cas":
		return OrganicFertilizer_cas
	case "cau":
		return OrganicFertilizer_cau
	case "dgdlm":
		return OrganicFertilizer_dgdlm
	case "gwc":
		return OrganicFertilizer_gwc
	case "hodlm":
		return OrganicFertilizer_hodlm
	case "mc":
		return OrganicFertilizer_mc
	case "ms":
		return OrganicFertilizer_ms
	case "oic":
		return OrganicFertilizer_oic
	case "pidlm":
		return OrganicFertilizer_pidlm
	case "pim":
		return OrganicFertilizer_pim
	case "pis":
		return OrganicFertilizer_pis
	case "piu":
		return OrganicFertilizer_piu
	case "piudk":
		return OrganicFertilizer_piudk
	case "plw":
		return OrganicFertilizer_plw
	case "podlm":
		return OrganicFertilizer_podlm
	case "pom":
		return OrganicFertilizer_pom
	case "soy":
		return OrganicFertilizer_soy
	case "ss":
		return OrganicFertilizer_ss
	case "tudlm":
		return OrganicFertilizer_tudlm
	case "weeds":
		return OrganicFertilizer_weeds
	case "ws":
		return OrganicFertilizer_ws

	default:
		return 0
	}
}

type OrganicFertilizer_List struct{ capnp.List }

func NewOrganicFertilizer_List(s *capnp.Segment, sz int32) (OrganicFertilizer_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return OrganicFertilizer_List{l.List}, err
}

func (l OrganicFertilizer_List) At(i int) OrganicFertilizer {
	ul := capnp.UInt16List{List: l.List}
	return OrganicFertilizer(ul.At(i))
}

func (l OrganicFertilizer_List) Set(i int, v OrganicFertilizer) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type EventType uint16

// EventType_TypeID is the unique identifier for the type EventType.
const EventType_TypeID = 0xd0290daf8de9f2b0

// Values of EventType.
const (
	EventType_sowing               EventType = 0
	EventType_automaticSowing      EventType = 1
	EventType_harvest              EventType = 2
	EventType_automaticHarvest     EventType = 3
	EventType_irrigation           EventType = 4
	EventType_tillage              EventType = 5
	EventType_organicFertilization EventType = 6
	EventType_mineralFertilization EventType = 7
	EventType_nDemandFertilization EventType = 8
	EventType_cutting              EventType = 9
	EventType_setValue             EventType = 10
	EventType_saveState            EventType = 11
)

// String returns the enum's constant name.
func (c EventType) String() string {
	switch c {
	case EventType_sowing:
		return "sowing"
	case EventType_automaticSowing:
		return "automaticSowing"
	case EventType_harvest:
		return "harvest"
	case EventType_automaticHarvest:
		return "automaticHarvest"
	case EventType_irrigation:
		return "irrigation"
	case EventType_tillage:
		return "tillage"
	case EventType_organicFertilization:
		return "organicFertilization"
	case EventType_mineralFertilization:
		return "mineralFertilization"
	case EventType_nDemandFertilization:
		return "nDemandFertilization"
	case EventType_cutting:
		return "cutting"
	case EventType_setValue:
		return "setValue"
	case EventType_saveState:
		return "saveState"

	default:
		return ""
	}
}

// EventTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func EventTypeFromString(c string) EventType {
	switch c {
	case "sowing":
		return EventType_sowing
	case "automaticSowing":
		return EventType_automaticSowing
	case "harvest":
		return EventType_harvest
	case "automaticHarvest":
		return EventType_automaticHarvest
	case "irrigation":
		return EventType_irrigation
	case "tillage":
		return EventType_tillage
	case "organicFertilization":
		return EventType_organicFertilization
	case "mineralFertilization":
		return EventType_mineralFertilization
	case "nDemandFertilization":
		return EventType_nDemandFertilization
	case "cutting":
		return EventType_cutting
	case "setValue":
		return EventType_setValue
	case "saveState":
		return EventType_saveState

	default:
		return 0
	}
}

type EventType_List struct{ capnp.List }

func NewEventType_List(s *capnp.Segment, sz int32) (EventType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return EventType_List{l.List}, err
}

func (l EventType_List) At(i int) EventType {
	ul := capnp.UInt16List{List: l.List}
	return EventType(ul.At(i))
}

func (l EventType_List) Set(i int, v EventType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type PlantOrgan uint16

// PlantOrgan_TypeID is the unique identifier for the type PlantOrgan.
const PlantOrgan_TypeID = 0xb33447204cdf022c

// Values of PlantOrgan.
const (
	PlantOrgan_root   PlantOrgan = 0
	PlantOrgan_leaf   PlantOrgan = 1
	PlantOrgan_shoot  PlantOrgan = 2
	PlantOrgan_fruit  PlantOrgan = 3
	PlantOrgan_strukt PlantOrgan = 4
	PlantOrgan_sugar  PlantOrgan = 5
)

// String returns the enum's constant name.
func (c PlantOrgan) String() string {
	switch c {
	case PlantOrgan_root:
		return "root"
	case PlantOrgan_leaf:
		return "leaf"
	case PlantOrgan_shoot:
		return "shoot"
	case PlantOrgan_fruit:
		return "fruit"
	case PlantOrgan_strukt:
		return "strukt"
	case PlantOrgan_sugar:
		return "sugar"

	default:
		return ""
	}
}

// PlantOrganFromString returns the enum value with a name,
// or the zero value if there's no such value.
func PlantOrganFromString(c string) PlantOrgan {
	switch c {
	case "root":
		return PlantOrgan_root
	case "leaf":
		return PlantOrgan_leaf
	case "shoot":
		return PlantOrgan_shoot
	case "fruit":
		return PlantOrgan_fruit
	case "strukt":
		return PlantOrgan_strukt
	case "sugar":
		return PlantOrgan_sugar

	default:
		return 0
	}
}

type PlantOrgan_List struct{ capnp.List }

func NewPlantOrgan_List(s *capnp.Segment, sz int32) (PlantOrgan_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return PlantOrgan_List{l.List}, err
}

func (l PlantOrgan_List) At(i int) PlantOrgan {
	ul := capnp.UInt16List{List: l.List}
	return PlantOrgan(ul.At(i))
}

func (l PlantOrgan_List) Set(i int, v PlantOrgan) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event struct{ capnp.Struct }
type Event_at Event
type Event_between Event
type Event_after Event
type Event_Which uint16

const (
	Event_Which_at      Event_Which = 0
	Event_Which_between Event_Which = 1
	Event_Which_after   Event_Which = 2
)

func (w Event_Which) String() string {
	const s = "atbetweenafter"
	switch w {
	case Event_Which_at:
		return s[0:2]
	case Event_Which_between:
		return s[2:9]
	case Event_Which_after:
		return s[9:14]

	}
	return "Event_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Event_TypeID is the unique identifier for the type Event.
const Event_TypeID = 0xcf672ab379467704

func NewEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Event{st}, err
}

func NewRootEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Event{st}, err
}

func ReadRootEvent(msg *capnp.Message) (Event, error) {
	root, err := msg.Root()
	return Event{root.Struct()}, err
}

func (s Event) String() string {
	str, _ := text.Marshal(0xcf672ab379467704, s.Struct)
	return str
}

func (s Event) Which() Event_Which {
	return Event_Which(s.Struct.Uint16(2))
}
func (s Event) Type() Event_ExternalType {
	return Event_ExternalType(s.Struct.Uint16(0))
}

func (s Event) SetType(v Event_ExternalType) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Event) Info() (common.IdInformation, error) {
	p, err := s.Struct.Ptr(0)
	return common.IdInformation{Struct: p.Struct()}, err
}

func (s Event) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s Event) SetInfo(v common.IdInformation) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated common.IdInformation struct, preferring placement in s's segment.
func (s Event) NewInfo() (common.IdInformation, error) {
	ss, err := common.NewIdInformation(s.Struct.Segment())
	if err != nil {
		return common.IdInformation{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) At() Event_at { return Event_at(s) }

func (s Event) SetAt() {
	s.Struct.SetUint16(2, 0)
}

func (s Event_at) Date() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_at) HasDate() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_at) SetDate(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDate sets the date field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_at) NewDate() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) Between() Event_between { return Event_between(s) }

func (s Event) SetBetween() {
	s.Struct.SetUint16(2, 1)
}

func (s Event_between) Earliest() (common.Date, error) {
	p, err := s.Struct.Ptr(1)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_between) HasEarliest() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_between) SetEarliest(v common.Date) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEarliest sets the earliest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_between) NewEarliest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event_between) Latest() (common.Date, error) {
	p, err := s.Struct.Ptr(2)
	return common.Date{Struct: p.Struct()}, err
}

func (s Event_between) HasLatest() bool {
	return s.Struct.HasPtr(2)
}

func (s Event_between) SetLatest(v common.Date) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewLatest sets the latest field to a newly
// allocated common.Date struct, preferring placement in s's segment.
func (s Event_between) NewLatest() (common.Date, error) {
	ss, err := common.NewDate(s.Struct.Segment())
	if err != nil {
		return common.Date{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Event) After() Event_after { return Event_after(s) }

func (s Event) SetAfter() {
	s.Struct.SetUint16(2, 2)
}

func (s Event_after) Event() (Event_Type, error) {
	p, err := s.Struct.Ptr(1)
	return Event_Type{Struct: p.Struct()}, err
}

func (s Event_after) HasEvent() bool {
	return s.Struct.HasPtr(1)
}

func (s Event_after) SetEvent(v Event_Type) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewEvent sets the event field to a newly
// allocated Event_Type struct, preferring placement in s's segment.
func (s Event_after) NewEvent() (Event_Type, error) {
	ss, err := NewEvent_Type(s.Struct.Segment())
	if err != nil {
		return Event_Type{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Event_after) Days() uint16 {
	return s.Struct.Uint16(4)
}

func (s Event_after) SetDays(v uint16) {
	s.Struct.SetUint16(4, v)
}

func (s Event) Params() (capnp.Ptr, error) {
	return s.Struct.Ptr(3)
}

func (s Event) HasParams() bool {
	return s.Struct.HasPtr(3)
}

func (s Event) SetParams(v capnp.Ptr) error {
	return s.Struct.SetPtr(3, v)
}

func (s Event) RunAtStartOfDay() bool {
	return s.Struct.Bit(48)
}

func (s Event) SetRunAtStartOfDay(v bool) {
	s.Struct.SetBit(48, v)
}

// Event_List is a list of Event.
type Event_List struct{ capnp.List }

// NewEvent creates a new list of Event.
func NewEvent_List(s *capnp.Segment, sz int32) (Event_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Event_List{l}, err
}

func (s Event_List) At(i int) Event { return Event{s.List.Struct(i)} }

func (s Event_List) Set(i int, v Event) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_List) String() string {
	str, _ := text.MarshalList(0xcf672ab379467704, s.List)
	return str
}

// Event_Future is a wrapper for a Event promised by a client call.
type Event_Future struct{ *capnp.Future }

func (p Event_Future) Struct() (Event, error) {
	s, err := p.Future.Struct()
	return Event{s}, err
}

func (p Event_Future) Info() common.IdInformation_Future {
	return common.IdInformation_Future{Future: p.Future.Field(0, nil)}
}

func (p Event_Future) At() Event_at_Future { return Event_at_Future{p.Future} }

// Event_at_Future is a wrapper for a Event_at promised by a client call.
type Event_at_Future struct{ *capnp.Future }

func (p Event_at_Future) Struct() (Event_at, error) {
	s, err := p.Future.Struct()
	return Event_at{s}, err
}

func (p Event_at_Future) Date() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_Future) Between() Event_between_Future { return Event_between_Future{p.Future} }

// Event_between_Future is a wrapper for a Event_between promised by a client call.
type Event_between_Future struct{ *capnp.Future }

func (p Event_between_Future) Struct() (Event_between, error) {
	s, err := p.Future.Struct()
	return Event_between{s}, err
}

func (p Event_between_Future) Earliest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_between_Future) Latest() common.Date_Future {
	return common.Date_Future{Future: p.Future.Field(2, nil)}
}

func (p Event_Future) After() Event_after_Future { return Event_after_Future{p.Future} }

// Event_after_Future is a wrapper for a Event_after promised by a client call.
type Event_after_Future struct{ *capnp.Future }

func (p Event_after_Future) Struct() (Event_after, error) {
	s, err := p.Future.Struct()
	return Event_after{s}, err
}

func (p Event_after_Future) Event() Event_Type_Future {
	return Event_Type_Future{Future: p.Future.Field(1, nil)}
}

func (p Event_Future) Params() *capnp.Future {
	return p.Future.Field(3, nil)
}

type Event_ExternalType uint16

// Event_ExternalType_TypeID is the unique identifier for the type Event_ExternalType.
const Event_ExternalType_TypeID = 0xe5484dc513ee11e0

// Values of Event_ExternalType.
const (
	Event_ExternalType_sowing               Event_ExternalType = 0
	Event_ExternalType_automaticSowing      Event_ExternalType = 1
	Event_ExternalType_harvest              Event_ExternalType = 2
	Event_ExternalType_automaticHarvest     Event_ExternalType = 3
	Event_ExternalType_irrigation           Event_ExternalType = 4
	Event_ExternalType_tillage              Event_ExternalType = 5
	Event_ExternalType_organicFertilization Event_ExternalType = 6
	Event_ExternalType_mineralFertilization Event_ExternalType = 7
	Event_ExternalType_nDemandFertilization Event_ExternalType = 8
	Event_ExternalType_cutting              Event_ExternalType = 9
)

// String returns the enum's constant name.
func (c Event_ExternalType) String() string {
	switch c {
	case Event_ExternalType_sowing:
		return "sowing"
	case Event_ExternalType_automaticSowing:
		return "automaticSowing"
	case Event_ExternalType_harvest:
		return "harvest"
	case Event_ExternalType_automaticHarvest:
		return "automaticHarvest"
	case Event_ExternalType_irrigation:
		return "irrigation"
	case Event_ExternalType_tillage:
		return "tillage"
	case Event_ExternalType_organicFertilization:
		return "organicFertilization"
	case Event_ExternalType_mineralFertilization:
		return "mineralFertilization"
	case Event_ExternalType_nDemandFertilization:
		return "nDemandFertilization"
	case Event_ExternalType_cutting:
		return "cutting"

	default:
		return ""
	}
}

// Event_ExternalTypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Event_ExternalTypeFromString(c string) Event_ExternalType {
	switch c {
	case "sowing":
		return Event_ExternalType_sowing
	case "automaticSowing":
		return Event_ExternalType_automaticSowing
	case "harvest":
		return Event_ExternalType_harvest
	case "automaticHarvest":
		return Event_ExternalType_automaticHarvest
	case "irrigation":
		return Event_ExternalType_irrigation
	case "tillage":
		return Event_ExternalType_tillage
	case "organicFertilization":
		return Event_ExternalType_organicFertilization
	case "mineralFertilization":
		return Event_ExternalType_mineralFertilization
	case "nDemandFertilization":
		return Event_ExternalType_nDemandFertilization
	case "cutting":
		return Event_ExternalType_cutting

	default:
		return 0
	}
}

type Event_ExternalType_List struct{ capnp.List }

func NewEvent_ExternalType_List(s *capnp.Segment, sz int32) (Event_ExternalType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Event_ExternalType_List{l.List}, err
}

func (l Event_ExternalType_List) At(i int) Event_ExternalType {
	ul := capnp.UInt16List{List: l.List}
	return Event_ExternalType(ul.At(i))
}

func (l Event_ExternalType_List) Set(i int, v Event_ExternalType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event_PhenoStage uint16

// Event_PhenoStage_TypeID is the unique identifier for the type Event_PhenoStage.
const Event_PhenoStage_TypeID = 0xb2bf3a5557791bc1

// Values of Event_PhenoStage.
const (
	Event_PhenoStage_emergence Event_PhenoStage = 0
	Event_PhenoStage_flowering Event_PhenoStage = 1
	Event_PhenoStage_anthesis  Event_PhenoStage = 2
	Event_PhenoStage_maturity  Event_PhenoStage = 3
)

// String returns the enum's constant name.
func (c Event_PhenoStage) String() string {
	switch c {
	case Event_PhenoStage_emergence:
		return "emergence"
	case Event_PhenoStage_flowering:
		return "flowering"
	case Event_PhenoStage_anthesis:
		return "anthesis"
	case Event_PhenoStage_maturity:
		return "maturity"

	default:
		return ""
	}
}

// Event_PhenoStageFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Event_PhenoStageFromString(c string) Event_PhenoStage {
	switch c {
	case "emergence":
		return Event_PhenoStage_emergence
	case "flowering":
		return Event_PhenoStage_flowering
	case "anthesis":
		return Event_PhenoStage_anthesis
	case "maturity":
		return Event_PhenoStage_maturity

	default:
		return 0
	}
}

type Event_PhenoStage_List struct{ capnp.List }

func NewEvent_PhenoStage_List(s *capnp.Segment, sz int32) (Event_PhenoStage_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Event_PhenoStage_List{l.List}, err
}

func (l Event_PhenoStage_List) At(i int) Event_PhenoStage {
	ul := capnp.UInt16List{List: l.List}
	return Event_PhenoStage(ul.At(i))
}

func (l Event_PhenoStage_List) Set(i int, v Event_PhenoStage) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Event_Type struct{ capnp.Struct }
type Event_Type_Which uint16

const (
	Event_Type_Which_external Event_Type_Which = 0
	Event_Type_Which_internal Event_Type_Which = 1
)

func (w Event_Type_Which) String() string {
	const s = "externalinternal"
	switch w {
	case Event_Type_Which_external:
		return s[0:8]
	case Event_Type_Which_internal:
		return s[8:16]

	}
	return "Event_Type_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Event_Type_TypeID is the unique identifier for the type Event_Type.
const Event_Type_TypeID = 0xb91010c363e568a4

func NewEvent_Type(s *capnp.Segment) (Event_Type, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Event_Type{st}, err
}

func NewRootEvent_Type(s *capnp.Segment) (Event_Type, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Event_Type{st}, err
}

func ReadRootEvent_Type(msg *capnp.Message) (Event_Type, error) {
	root, err := msg.Root()
	return Event_Type{root.Struct()}, err
}

func (s Event_Type) String() string {
	str, _ := text.Marshal(0xb91010c363e568a4, s.Struct)
	return str
}

func (s Event_Type) Which() Event_Type_Which {
	return Event_Type_Which(s.Struct.Uint16(2))
}
func (s Event_Type) External() Event_ExternalType {
	if s.Struct.Uint16(2) != 0 {
		panic("Which() != external")
	}
	return Event_ExternalType(s.Struct.Uint16(0))
}

func (s Event_Type) SetExternal(v Event_ExternalType) {
	s.Struct.SetUint16(2, 0)
	s.Struct.SetUint16(0, uint16(v))
}

func (s Event_Type) Internal() Event_PhenoStage {
	if s.Struct.Uint16(2) != 1 {
		panic("Which() != internal")
	}
	return Event_PhenoStage(s.Struct.Uint16(0))
}

func (s Event_Type) SetInternal(v Event_PhenoStage) {
	s.Struct.SetUint16(2, 1)
	s.Struct.SetUint16(0, uint16(v))
}

// Event_Type_List is a list of Event_Type.
type Event_Type_List struct{ capnp.List }

// NewEvent_Type creates a new list of Event_Type.
func NewEvent_Type_List(s *capnp.Segment, sz int32) (Event_Type_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Event_Type_List{l}, err
}

func (s Event_Type_List) At(i int) Event_Type { return Event_Type{s.List.Struct(i)} }

func (s Event_Type_List) Set(i int, v Event_Type) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_Type_List) String() string {
	str, _ := text.MarshalList(0xb91010c363e568a4, s.List)
	return str
}

// Event_Type_Future is a wrapper for a Event_Type promised by a client call.
type Event_Type_Future struct{ *capnp.Future }

func (p Event_Type_Future) Struct() (Event_Type, error) {
	s, err := p.Future.Struct()
	return Event_Type{s}, err
}

type Params struct{ capnp.Struct }

// Params_TypeID is the unique identifier for the type Params.
const Params_TypeID = 0xcb20e21466098705

func NewParams(s *capnp.Segment) (Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Params{st}, err
}

func NewRootParams(s *capnp.Segment) (Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Params{st}, err
}

func ReadRootParams(msg *capnp.Message) (Params, error) {
	root, err := msg.Root()
	return Params{root.Struct()}, err
}

func (s Params) String() string {
	str, _ := text.Marshal(0xcb20e21466098705, s.Struct)
	return str
}

// Params_List is a list of Params.
type Params_List struct{ capnp.List }

// NewParams creates a new list of Params.
func NewParams_List(s *capnp.Segment, sz int32) (Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Params_List{l}, err
}

func (s Params_List) At(i int) Params { return Params{s.List.Struct(i)} }

func (s Params_List) Set(i int, v Params) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_List) String() string {
	str, _ := text.MarshalList(0xcb20e21466098705, s.List)
	return str
}

// Params_Future is a wrapper for a Params promised by a client call.
type Params_Future struct{ *capnp.Future }

func (p Params_Future) Struct() (Params, error) {
	s, err := p.Future.Struct()
	return Params{s}, err
}

type Params_Sowing struct{ capnp.Struct }

// Params_Sowing_TypeID is the unique identifier for the type Params_Sowing.
const Params_Sowing_TypeID = 0xc6880d1c13ec14dc

func NewParams_Sowing(s *capnp.Segment) (Params_Sowing, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Sowing{st}, err
}

func NewRootParams_Sowing(s *capnp.Segment) (Params_Sowing, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Sowing{st}, err
}

func ReadRootParams_Sowing(msg *capnp.Message) (Params_Sowing, error) {
	root, err := msg.Root()
	return Params_Sowing{root.Struct()}, err
}

func (s Params_Sowing) String() string {
	str, _ := text.Marshal(0xc6880d1c13ec14dc, s.Struct)
	return str
}

func (s Params_Sowing) Cultivar() crop.Cultivar {
	return crop.Cultivar(s.Struct.Uint16(0))
}

func (s Params_Sowing) SetCultivar(v crop.Cultivar) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Params_Sowing) PlantDensity() uint16 {
	return s.Struct.Uint16(2)
}

func (s Params_Sowing) SetPlantDensity(v uint16) {
	s.Struct.SetUint16(2, v)
}

func (s Params_Sowing) Crop() crop.Crop {
	p, _ := s.Struct.Ptr(0)
	return crop.Crop{Client: p.Interface().Client()}
}

func (s Params_Sowing) HasCrop() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Sowing) SetCrop(v crop.Crop) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Params_Sowing_List is a list of Params_Sowing.
type Params_Sowing_List struct{ capnp.List }

// NewParams_Sowing creates a new list of Params_Sowing.
func NewParams_Sowing_List(s *capnp.Segment, sz int32) (Params_Sowing_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Sowing_List{l}, err
}

func (s Params_Sowing_List) At(i int) Params_Sowing { return Params_Sowing{s.List.Struct(i)} }

func (s Params_Sowing_List) Set(i int, v Params_Sowing) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Sowing_List) String() string {
	str, _ := text.MarshalList(0xc6880d1c13ec14dc, s.List)
	return str
}

// Params_Sowing_Future is a wrapper for a Params_Sowing promised by a client call.
type Params_Sowing_Future struct{ *capnp.Future }

func (p Params_Sowing_Future) Struct() (Params_Sowing, error) {
	s, err := p.Future.Struct()
	return Params_Sowing{s}, err
}

func (p Params_Sowing_Future) Crop() crop.Crop {
	return crop.Crop{Client: p.Future.Field(0, nil).Client()}
}

type Params_AutomaticSowing struct{ capnp.Struct }

// Params_AutomaticSowing_TypeID is the unique identifier for the type Params_AutomaticSowing.
const Params_AutomaticSowing_TypeID = 0xd1bfc1c9617d9453

func NewParams_AutomaticSowing(s *capnp.Segment) (Params_AutomaticSowing, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2})
	return Params_AutomaticSowing{st}, err
}

func NewRootParams_AutomaticSowing(s *capnp.Segment) (Params_AutomaticSowing, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2})
	return Params_AutomaticSowing{st}, err
}

func ReadRootParams_AutomaticSowing(msg *capnp.Message) (Params_AutomaticSowing, error) {
	root, err := msg.Root()
	return Params_AutomaticSowing{root.Struct()}, err
}

func (s Params_AutomaticSowing) String() string {
	str, _ := text.Marshal(0xd1bfc1c9617d9453, s.Struct)
	return str
}

func (s Params_AutomaticSowing) Sowing() (Params_Sowing, error) {
	p, err := s.Struct.Ptr(1)
	return Params_Sowing{Struct: p.Struct()}, err
}

func (s Params_AutomaticSowing) HasSowing() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_AutomaticSowing) SetSowing(v Params_Sowing) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewSowing sets the sowing field to a newly
// allocated Params_Sowing struct, preferring placement in s's segment.
func (s Params_AutomaticSowing) NewSowing() (Params_Sowing, error) {
	ss, err := NewParams_Sowing(s.Struct.Segment())
	if err != nil {
		return Params_Sowing{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_AutomaticSowing) MinTempThreshold() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_AutomaticSowing) SetMinTempThreshold(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_AutomaticSowing) DaysInTempWindow() uint16 {
	return s.Struct.Uint16(8)
}

func (s Params_AutomaticSowing) SetDaysInTempWindow(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Params_AutomaticSowing) MinPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticSowing) SetMinPercentASW(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_AutomaticSowing) MaxPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(24) ^ 0x4059000000000000)
}

func (s Params_AutomaticSowing) SetMaxPercentASW(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v)^0x4059000000000000)
}

func (s Params_AutomaticSowing) Max3dayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_AutomaticSowing) SetMax3dayPrecipSum(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

func (s Params_AutomaticSowing) MaxCurrentDayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(40))
}

func (s Params_AutomaticSowing) SetMaxCurrentDayPrecipSum(v float64) {
	s.Struct.SetUint64(40, math.Float64bits(v))
}

func (s Params_AutomaticSowing) TempSumAboveBaseTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(48))
}

func (s Params_AutomaticSowing) SetTempSumAboveBaseTemp(v float64) {
	s.Struct.SetUint64(48, math.Float64bits(v))
}

func (s Params_AutomaticSowing) BaseTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(56))
}

func (s Params_AutomaticSowing) SetBaseTemp(v float64) {
	s.Struct.SetUint64(56, math.Float64bits(v))
}

func (s Params_AutomaticSowing) AvgSoilTemp() (Params_AutomaticSowing_AvgSoilTemp, error) {
	p, err := s.Struct.Ptr(0)
	return Params_AutomaticSowing_AvgSoilTemp{Struct: p.Struct()}, err
}

func (s Params_AutomaticSowing) HasAvgSoilTemp() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_AutomaticSowing) SetAvgSoilTemp(v Params_AutomaticSowing_AvgSoilTemp) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAvgSoilTemp sets the avgSoilTemp field to a newly
// allocated Params_AutomaticSowing_AvgSoilTemp struct, preferring placement in s's segment.
func (s Params_AutomaticSowing) NewAvgSoilTemp() (Params_AutomaticSowing_AvgSoilTemp, error) {
	ss, err := NewParams_AutomaticSowing_AvgSoilTemp(s.Struct.Segment())
	if err != nil {
		return Params_AutomaticSowing_AvgSoilTemp{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_AutomaticSowing_List is a list of Params_AutomaticSowing.
type Params_AutomaticSowing_List struct{ capnp.List }

// NewParams_AutomaticSowing creates a new list of Params_AutomaticSowing.
func NewParams_AutomaticSowing_List(s *capnp.Segment, sz int32) (Params_AutomaticSowing_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 64, PointerCount: 2}, sz)
	return Params_AutomaticSowing_List{l}, err
}

func (s Params_AutomaticSowing_List) At(i int) Params_AutomaticSowing {
	return Params_AutomaticSowing{s.List.Struct(i)}
}

func (s Params_AutomaticSowing_List) Set(i int, v Params_AutomaticSowing) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticSowing_List) String() string {
	str, _ := text.MarshalList(0xd1bfc1c9617d9453, s.List)
	return str
}

// Params_AutomaticSowing_Future is a wrapper for a Params_AutomaticSowing promised by a client call.
type Params_AutomaticSowing_Future struct{ *capnp.Future }

func (p Params_AutomaticSowing_Future) Struct() (Params_AutomaticSowing, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticSowing{s}, err
}

func (p Params_AutomaticSowing_Future) Sowing() Params_Sowing_Future {
	return Params_Sowing_Future{Future: p.Future.Field(1, nil)}
}

func (p Params_AutomaticSowing_Future) AvgSoilTemp() Params_AutomaticSowing_AvgSoilTemp_Future {
	return Params_AutomaticSowing_AvgSoilTemp_Future{Future: p.Future.Field(0, nil)}
}

type Params_AutomaticSowing_AvgSoilTemp struct{ capnp.Struct }

// Params_AutomaticSowing_AvgSoilTemp_TypeID is the unique identifier for the type Params_AutomaticSowing_AvgSoilTemp.
const Params_AutomaticSowing_AvgSoilTemp_TypeID = 0x846f567433b186d1

func NewParams_AutomaticSowing_AvgSoilTemp(s *capnp.Segment) (Params_AutomaticSowing_AvgSoilTemp, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_AutomaticSowing_AvgSoilTemp{st}, err
}

func NewRootParams_AutomaticSowing_AvgSoilTemp(s *capnp.Segment) (Params_AutomaticSowing_AvgSoilTemp, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_AutomaticSowing_AvgSoilTemp{st}, err
}

func ReadRootParams_AutomaticSowing_AvgSoilTemp(msg *capnp.Message) (Params_AutomaticSowing_AvgSoilTemp, error) {
	root, err := msg.Root()
	return Params_AutomaticSowing_AvgSoilTemp{root.Struct()}, err
}

func (s Params_AutomaticSowing_AvgSoilTemp) String() string {
	str, _ := text.Marshal(0x846f567433b186d1, s.Struct)
	return str
}

func (s Params_AutomaticSowing_AvgSoilTemp) SoilDepthForAveraging() float64 {
	return math.Float64frombits(s.Struct.Uint64(0) ^ 0x3fd3333333333333)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetSoilDepthForAveraging(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v)^0x3fd3333333333333)
}

func (s Params_AutomaticSowing_AvgSoilTemp) DaysInSoilTempWindow() uint16 {
	return s.Struct.Uint16(8)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetDaysInSoilTempWindow(v uint16) {
	s.Struct.SetUint16(8, v)
}

func (s Params_AutomaticSowing_AvgSoilTemp) SowingIfAboveAvgSoilTemp() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticSowing_AvgSoilTemp) SetSowingIfAboveAvgSoilTemp(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// Params_AutomaticSowing_AvgSoilTemp_List is a list of Params_AutomaticSowing_AvgSoilTemp.
type Params_AutomaticSowing_AvgSoilTemp_List struct{ capnp.List }

// NewParams_AutomaticSowing_AvgSoilTemp creates a new list of Params_AutomaticSowing_AvgSoilTemp.
func NewParams_AutomaticSowing_AvgSoilTemp_List(s *capnp.Segment, sz int32) (Params_AutomaticSowing_AvgSoilTemp_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_AutomaticSowing_AvgSoilTemp_List{l}, err
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) At(i int) Params_AutomaticSowing_AvgSoilTemp {
	return Params_AutomaticSowing_AvgSoilTemp{s.List.Struct(i)}
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) Set(i int, v Params_AutomaticSowing_AvgSoilTemp) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticSowing_AvgSoilTemp_List) String() string {
	str, _ := text.MarshalList(0x846f567433b186d1, s.List)
	return str
}

// Params_AutomaticSowing_AvgSoilTemp_Future is a wrapper for a Params_AutomaticSowing_AvgSoilTemp promised by a client call.
type Params_AutomaticSowing_AvgSoilTemp_Future struct{ *capnp.Future }

func (p Params_AutomaticSowing_AvgSoilTemp_Future) Struct() (Params_AutomaticSowing_AvgSoilTemp, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticSowing_AvgSoilTemp{s}, err
}

type Params_Harvest struct{ capnp.Struct }

// Params_Harvest_TypeID is the unique identifier for the type Params_Harvest.
const Params_Harvest_TypeID = 0x8feb941d70f2a468

func NewParams_Harvest(s *capnp.Segment) (Params_Harvest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Harvest{st}, err
}

func NewRootParams_Harvest(s *capnp.Segment) (Params_Harvest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Harvest{st}, err
}

func ReadRootParams_Harvest(msg *capnp.Message) (Params_Harvest, error) {
	root, err := msg.Root()
	return Params_Harvest{root.Struct()}, err
}

func (s Params_Harvest) String() string {
	str, _ := text.Marshal(0x8feb941d70f2a468, s.Struct)
	return str
}

func (s Params_Harvest) Exported() bool {
	return !s.Struct.Bit(0)
}

func (s Params_Harvest) SetExported(v bool) {
	s.Struct.SetBit(0, !v)
}

func (s Params_Harvest) OptCarbMgmtData() (Params_Harvest_OptCarbonMgmtData, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Harvest_OptCarbonMgmtData{Struct: p.Struct()}, err
}

func (s Params_Harvest) HasOptCarbMgmtData() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Harvest) SetOptCarbMgmtData(v Params_Harvest_OptCarbonMgmtData) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewOptCarbMgmtData sets the optCarbMgmtData field to a newly
// allocated Params_Harvest_OptCarbonMgmtData struct, preferring placement in s's segment.
func (s Params_Harvest) NewOptCarbMgmtData() (Params_Harvest_OptCarbonMgmtData, error) {
	ss, err := NewParams_Harvest_OptCarbonMgmtData(s.Struct.Segment())
	if err != nil {
		return Params_Harvest_OptCarbonMgmtData{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_Harvest_List is a list of Params_Harvest.
type Params_Harvest_List struct{ capnp.List }

// NewParams_Harvest creates a new list of Params_Harvest.
func NewParams_Harvest_List(s *capnp.Segment, sz int32) (Params_Harvest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Harvest_List{l}, err
}

func (s Params_Harvest_List) At(i int) Params_Harvest { return Params_Harvest{s.List.Struct(i)} }

func (s Params_Harvest_List) Set(i int, v Params_Harvest) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Harvest_List) String() string {
	str, _ := text.MarshalList(0x8feb941d70f2a468, s.List)
	return str
}

// Params_Harvest_Future is a wrapper for a Params_Harvest promised by a client call.
type Params_Harvest_Future struct{ *capnp.Future }

func (p Params_Harvest_Future) Struct() (Params_Harvest, error) {
	s, err := p.Future.Struct()
	return Params_Harvest{s}, err
}

func (p Params_Harvest_Future) OptCarbMgmtData() Params_Harvest_OptCarbonMgmtData_Future {
	return Params_Harvest_OptCarbonMgmtData_Future{Future: p.Future.Field(0, nil)}
}

type Params_Harvest_CropUsage uint16

// Params_Harvest_CropUsage_TypeID is the unique identifier for the type Params_Harvest_CropUsage.
const Params_Harvest_CropUsage_TypeID = 0xa9a9bc941e963701

// Values of Params_Harvest_CropUsage.
const (
	Params_Harvest_CropUsage_greenManure       Params_Harvest_CropUsage = 0
	Params_Harvest_CropUsage_biomassProduction Params_Harvest_CropUsage = 1
)

// String returns the enum's constant name.
func (c Params_Harvest_CropUsage) String() string {
	switch c {
	case Params_Harvest_CropUsage_greenManure:
		return "greenManure"
	case Params_Harvest_CropUsage_biomassProduction:
		return "biomassProduction"

	default:
		return ""
	}
}

// Params_Harvest_CropUsageFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Harvest_CropUsageFromString(c string) Params_Harvest_CropUsage {
	switch c {
	case "greenManure":
		return Params_Harvest_CropUsage_greenManure
	case "biomassProduction":
		return Params_Harvest_CropUsage_biomassProduction

	default:
		return 0
	}
}

type Params_Harvest_CropUsage_List struct{ capnp.List }

func NewParams_Harvest_CropUsage_List(s *capnp.Segment, sz int32) (Params_Harvest_CropUsage_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Harvest_CropUsage_List{l.List}, err
}

func (l Params_Harvest_CropUsage_List) At(i int) Params_Harvest_CropUsage {
	ul := capnp.UInt16List{List: l.List}
	return Params_Harvest_CropUsage(ul.At(i))
}

func (l Params_Harvest_CropUsage_List) Set(i int, v Params_Harvest_CropUsage) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Harvest_OptCarbonMgmtData struct{ capnp.Struct }

// Params_Harvest_OptCarbonMgmtData_TypeID is the unique identifier for the type Params_Harvest_OptCarbonMgmtData.
const Params_Harvest_OptCarbonMgmtData_TypeID = 0xaf49ab9bbe76e375

func NewParams_Harvest_OptCarbonMgmtData(s *capnp.Segment) (Params_Harvest_OptCarbonMgmtData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return Params_Harvest_OptCarbonMgmtData{st}, err
}

func NewRootParams_Harvest_OptCarbonMgmtData(s *capnp.Segment) (Params_Harvest_OptCarbonMgmtData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0})
	return Params_Harvest_OptCarbonMgmtData{st}, err
}

func ReadRootParams_Harvest_OptCarbonMgmtData(msg *capnp.Message) (Params_Harvest_OptCarbonMgmtData, error) {
	root, err := msg.Root()
	return Params_Harvest_OptCarbonMgmtData{root.Struct()}, err
}

func (s Params_Harvest_OptCarbonMgmtData) String() string {
	str, _ := text.Marshal(0xaf49ab9bbe76e375, s.Struct)
	return str
}

func (s Params_Harvest_OptCarbonMgmtData) OptCarbonConservation() bool {
	return s.Struct.Bit(0)
}

func (s Params_Harvest_OptCarbonMgmtData) SetOptCarbonConservation(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Params_Harvest_OptCarbonMgmtData) CropImpactOnHumusBalance() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Harvest_OptCarbonMgmtData) SetCropImpactOnHumusBalance(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) CropUsage() Params_Harvest_CropUsage {
	return Params_Harvest_CropUsage(s.Struct.Uint16(2) ^ 1)
}

func (s Params_Harvest_OptCarbonMgmtData) SetCropUsage(v Params_Harvest_CropUsage) {
	s.Struct.SetUint16(2, uint16(v)^1)
}

func (s Params_Harvest_OptCarbonMgmtData) ResidueHeq() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_Harvest_OptCarbonMgmtData) SetResidueHeq(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) OrganicFertilizerHeq() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_Harvest_OptCarbonMgmtData) SetOrganicFertilizerHeq(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_Harvest_OptCarbonMgmtData) MaxResidueRecoverFraction() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_Harvest_OptCarbonMgmtData) SetMaxResidueRecoverFraction(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

// Params_Harvest_OptCarbonMgmtData_List is a list of Params_Harvest_OptCarbonMgmtData.
type Params_Harvest_OptCarbonMgmtData_List struct{ capnp.List }

// NewParams_Harvest_OptCarbonMgmtData creates a new list of Params_Harvest_OptCarbonMgmtData.
func NewParams_Harvest_OptCarbonMgmtData_List(s *capnp.Segment, sz int32) (Params_Harvest_OptCarbonMgmtData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 0}, sz)
	return Params_Harvest_OptCarbonMgmtData_List{l}, err
}

func (s Params_Harvest_OptCarbonMgmtData_List) At(i int) Params_Harvest_OptCarbonMgmtData {
	return Params_Harvest_OptCarbonMgmtData{s.List.Struct(i)}
}

func (s Params_Harvest_OptCarbonMgmtData_List) Set(i int, v Params_Harvest_OptCarbonMgmtData) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Harvest_OptCarbonMgmtData_List) String() string {
	str, _ := text.MarshalList(0xaf49ab9bbe76e375, s.List)
	return str
}

// Params_Harvest_OptCarbonMgmtData_Future is a wrapper for a Params_Harvest_OptCarbonMgmtData promised by a client call.
type Params_Harvest_OptCarbonMgmtData_Future struct{ *capnp.Future }

func (p Params_Harvest_OptCarbonMgmtData_Future) Struct() (Params_Harvest_OptCarbonMgmtData, error) {
	s, err := p.Future.Struct()
	return Params_Harvest_OptCarbonMgmtData{s}, err
}

type Params_AutomaticHarvest struct{ capnp.Struct }

// Params_AutomaticHarvest_TypeID is the unique identifier for the type Params_AutomaticHarvest.
const Params_AutomaticHarvest_TypeID = 0xf805d22fabb80702

func NewParams_AutomaticHarvest(s *capnp.Segment) (Params_AutomaticHarvest, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Params_AutomaticHarvest{st}, err
}

func NewRootParams_AutomaticHarvest(s *capnp.Segment) (Params_AutomaticHarvest, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Params_AutomaticHarvest{st}, err
}

func ReadRootParams_AutomaticHarvest(msg *capnp.Message) (Params_AutomaticHarvest, error) {
	root, err := msg.Root()
	return Params_AutomaticHarvest{root.Struct()}, err
}

func (s Params_AutomaticHarvest) String() string {
	str, _ := text.Marshal(0xf805d22fabb80702, s.Struct)
	return str
}

func (s Params_AutomaticHarvest) Harvest() (Params_Harvest, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Harvest{Struct: p.Struct()}, err
}

func (s Params_AutomaticHarvest) HasHarvest() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_AutomaticHarvest) SetHarvest(v Params_Harvest) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewHarvest sets the harvest field to a newly
// allocated Params_Harvest struct, preferring placement in s's segment.
func (s Params_AutomaticHarvest) NewHarvest() (Params_Harvest, error) {
	ss, err := NewParams_Harvest(s.Struct.Segment())
	if err != nil {
		return Params_Harvest{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_AutomaticHarvest) MinPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_AutomaticHarvest) SetMinPercentASW(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) MaxPercentASW() float64 {
	return math.Float64frombits(s.Struct.Uint64(8) ^ 0x4059000000000000)
}

func (s Params_AutomaticHarvest) SetMaxPercentASW(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v)^0x4059000000000000)
}

func (s Params_AutomaticHarvest) Max3dayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_AutomaticHarvest) SetMax3dayPrecipSum(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) MaxCurrentDayPrecipSum() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_AutomaticHarvest) SetMaxCurrentDayPrecipSum(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_AutomaticHarvest) HarvestTime() Event_PhenoStage {
	return Event_PhenoStage(s.Struct.Uint16(32) ^ 3)
}

func (s Params_AutomaticHarvest) SetHarvestTime(v Event_PhenoStage) {
	s.Struct.SetUint16(32, uint16(v)^3)
}

// Params_AutomaticHarvest_List is a list of Params_AutomaticHarvest.
type Params_AutomaticHarvest_List struct{ capnp.List }

// NewParams_AutomaticHarvest creates a new list of Params_AutomaticHarvest.
func NewParams_AutomaticHarvest_List(s *capnp.Segment, sz int32) (Params_AutomaticHarvest_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1}, sz)
	return Params_AutomaticHarvest_List{l}, err
}

func (s Params_AutomaticHarvest_List) At(i int) Params_AutomaticHarvest {
	return Params_AutomaticHarvest{s.List.Struct(i)}
}

func (s Params_AutomaticHarvest_List) Set(i int, v Params_AutomaticHarvest) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_AutomaticHarvest_List) String() string {
	str, _ := text.MarshalList(0xf805d22fabb80702, s.List)
	return str
}

// Params_AutomaticHarvest_Future is a wrapper for a Params_AutomaticHarvest promised by a client call.
type Params_AutomaticHarvest_Future struct{ *capnp.Future }

func (p Params_AutomaticHarvest_Future) Struct() (Params_AutomaticHarvest, error) {
	s, err := p.Future.Struct()
	return Params_AutomaticHarvest{s}, err
}

func (p Params_AutomaticHarvest_Future) Harvest() Params_Harvest_Future {
	return Params_Harvest_Future{Future: p.Future.Field(0, nil)}
}

type Params_Cutting struct{ capnp.Struct }

// Params_Cutting_TypeID is the unique identifier for the type Params_Cutting.
const Params_Cutting_TypeID = 0x8460dac6abff7ed9

func NewParams_Cutting(s *capnp.Segment) (Params_Cutting, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Cutting{st}, err
}

func NewRootParams_Cutting(s *capnp.Segment) (Params_Cutting, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Cutting{st}, err
}

func ReadRootParams_Cutting(msg *capnp.Message) (Params_Cutting, error) {
	root, err := msg.Root()
	return Params_Cutting{root.Struct()}, err
}

func (s Params_Cutting) String() string {
	str, _ := text.Marshal(0x8460dac6abff7ed9, s.Struct)
	return str
}

func (s Params_Cutting) CuttingSpec() (Params_Cutting_Spec_List, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Cutting_Spec_List{List: p.List()}, err
}

func (s Params_Cutting) HasCuttingSpec() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Cutting) SetCuttingSpec(v Params_Cutting_Spec_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewCuttingSpec sets the cuttingSpec field to a newly
// allocated Params_Cutting_Spec_List, preferring placement in s's segment.
func (s Params_Cutting) NewCuttingSpec(n int32) (Params_Cutting_Spec_List, error) {
	l, err := NewParams_Cutting_Spec_List(s.Struct.Segment(), n)
	if err != nil {
		return Params_Cutting_Spec_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Params_Cutting) CutMaxAssimilationRatePercentage() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Cutting) SetCutMaxAssimilationRatePercentage(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Params_Cutting_List is a list of Params_Cutting.
type Params_Cutting_List struct{ capnp.List }

// NewParams_Cutting creates a new list of Params_Cutting.
func NewParams_Cutting_List(s *capnp.Segment, sz int32) (Params_Cutting_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Cutting_List{l}, err
}

func (s Params_Cutting_List) At(i int) Params_Cutting { return Params_Cutting{s.List.Struct(i)} }

func (s Params_Cutting_List) Set(i int, v Params_Cutting) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Cutting_List) String() string {
	str, _ := text.MarshalList(0x8460dac6abff7ed9, s.List)
	return str
}

// Params_Cutting_Future is a wrapper for a Params_Cutting promised by a client call.
type Params_Cutting_Future struct{ *capnp.Future }

func (p Params_Cutting_Future) Struct() (Params_Cutting, error) {
	s, err := p.Future.Struct()
	return Params_Cutting{s}, err
}

type Params_Cutting_CL uint16

// Params_Cutting_CL_TypeID is the unique identifier for the type Params_Cutting_CL.
const Params_Cutting_CL_TypeID = 0xe444f780b29541a7

// Values of Params_Cutting_CL.
const (
	Params_Cutting_CL_cut  Params_Cutting_CL = 0
	Params_Cutting_CL_left Params_Cutting_CL = 1
)

// String returns the enum's constant name.
func (c Params_Cutting_CL) String() string {
	switch c {
	case Params_Cutting_CL_cut:
		return "cut"
	case Params_Cutting_CL_left:
		return "left"

	default:
		return ""
	}
}

// Params_Cutting_CLFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Cutting_CLFromString(c string) Params_Cutting_CL {
	switch c {
	case "cut":
		return Params_Cutting_CL_cut
	case "left":
		return Params_Cutting_CL_left

	default:
		return 0
	}
}

type Params_Cutting_CL_List struct{ capnp.List }

func NewParams_Cutting_CL_List(s *capnp.Segment, sz int32) (Params_Cutting_CL_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Cutting_CL_List{l.List}, err
}

func (l Params_Cutting_CL_List) At(i int) Params_Cutting_CL {
	ul := capnp.UInt16List{List: l.List}
	return Params_Cutting_CL(ul.At(i))
}

func (l Params_Cutting_CL_List) Set(i int, v Params_Cutting_CL) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Cutting_Unit uint16

// Params_Cutting_Unit_TypeID is the unique identifier for the type Params_Cutting_Unit.
const Params_Cutting_Unit_TypeID = 0x94d32947f136655e

// Values of Params_Cutting_Unit.
const (
	Params_Cutting_Unit_percentage Params_Cutting_Unit = 0
	Params_Cutting_Unit_biomass    Params_Cutting_Unit = 1
	Params_Cutting_Unit_lai        Params_Cutting_Unit = 2
)

// String returns the enum's constant name.
func (c Params_Cutting_Unit) String() string {
	switch c {
	case Params_Cutting_Unit_percentage:
		return "percentage"
	case Params_Cutting_Unit_biomass:
		return "biomass"
	case Params_Cutting_Unit_lai:
		return "lai"

	default:
		return ""
	}
}

// Params_Cutting_UnitFromString returns the enum value with a name,
// or the zero value if there's no such value.
func Params_Cutting_UnitFromString(c string) Params_Cutting_Unit {
	switch c {
	case "percentage":
		return Params_Cutting_Unit_percentage
	case "biomass":
		return Params_Cutting_Unit_biomass
	case "lai":
		return Params_Cutting_Unit_lai

	default:
		return 0
	}
}

type Params_Cutting_Unit_List struct{ capnp.List }

func NewParams_Cutting_Unit_List(s *capnp.Segment, sz int32) (Params_Cutting_Unit_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Params_Cutting_Unit_List{l.List}, err
}

func (l Params_Cutting_Unit_List) At(i int) Params_Cutting_Unit {
	ul := capnp.UInt16List{List: l.List}
	return Params_Cutting_Unit(ul.At(i))
}

func (l Params_Cutting_Unit_List) Set(i int, v Params_Cutting_Unit) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Params_Cutting_Spec struct{ capnp.Struct }

// Params_Cutting_Spec_TypeID is the unique identifier for the type Params_Cutting_Spec.
const Params_Cutting_Spec_TypeID = 0xfae5dcfccbb93a23

func NewParams_Cutting_Spec(s *capnp.Segment) (Params_Cutting_Spec, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_Cutting_Spec{st}, err
}

func NewRootParams_Cutting_Spec(s *capnp.Segment) (Params_Cutting_Spec, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_Cutting_Spec{st}, err
}

func ReadRootParams_Cutting_Spec(msg *capnp.Message) (Params_Cutting_Spec, error) {
	root, err := msg.Root()
	return Params_Cutting_Spec{root.Struct()}, err
}

func (s Params_Cutting_Spec) String() string {
	str, _ := text.Marshal(0xfae5dcfccbb93a23, s.Struct)
	return str
}

func (s Params_Cutting_Spec) Organ() PlantOrgan {
	return PlantOrgan(s.Struct.Uint16(0))
}

func (s Params_Cutting_Spec) SetOrgan(v PlantOrgan) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Params_Cutting_Spec) Value() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Cutting_Spec) SetValue(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_Cutting_Spec) Unit() Params_Cutting_Unit {
	return Params_Cutting_Unit(s.Struct.Uint16(2))
}

func (s Params_Cutting_Spec) SetUnit(v Params_Cutting_Unit) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Params_Cutting_Spec) CutOrLeft() Params_Cutting_CL {
	return Params_Cutting_CL(s.Struct.Uint16(4))
}

func (s Params_Cutting_Spec) SetCutOrLeft(v Params_Cutting_CL) {
	s.Struct.SetUint16(4, uint16(v))
}

func (s Params_Cutting_Spec) ExportPercentage() float64 {
	return math.Float64frombits(s.Struct.Uint64(16) ^ 0x4059000000000000)
}

func (s Params_Cutting_Spec) SetExportPercentage(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v)^0x4059000000000000)
}

// Params_Cutting_Spec_List is a list of Params_Cutting_Spec.
type Params_Cutting_Spec_List struct{ capnp.List }

// NewParams_Cutting_Spec creates a new list of Params_Cutting_Spec.
func NewParams_Cutting_Spec_List(s *capnp.Segment, sz int32) (Params_Cutting_Spec_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_Cutting_Spec_List{l}, err
}

func (s Params_Cutting_Spec_List) At(i int) Params_Cutting_Spec {
	return Params_Cutting_Spec{s.List.Struct(i)}
}

func (s Params_Cutting_Spec_List) Set(i int, v Params_Cutting_Spec) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Cutting_Spec_List) String() string {
	str, _ := text.MarshalList(0xfae5dcfccbb93a23, s.List)
	return str
}

// Params_Cutting_Spec_Future is a wrapper for a Params_Cutting_Spec promised by a client call.
type Params_Cutting_Spec_Future struct{ *capnp.Future }

func (p Params_Cutting_Spec_Future) Struct() (Params_Cutting_Spec, error) {
	s, err := p.Future.Struct()
	return Params_Cutting_Spec{s}, err
}

type Params_MineralFertilization struct{ capnp.Struct }

// Params_MineralFertilization_TypeID is the unique identifier for the type Params_MineralFertilization.
const Params_MineralFertilization_TypeID = 0xa363d226e178debd

func NewParams_MineralFertilization(s *capnp.Segment) (Params_MineralFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_MineralFertilization{st}, err
}

func NewRootParams_MineralFertilization(s *capnp.Segment) (Params_MineralFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_MineralFertilization{st}, err
}

func ReadRootParams_MineralFertilization(msg *capnp.Message) (Params_MineralFertilization, error) {
	root, err := msg.Root()
	return Params_MineralFertilization{root.Struct()}, err
}

func (s Params_MineralFertilization) String() string {
	str, _ := text.Marshal(0xa363d226e178debd, s.Struct)
	return str
}

func (s Params_MineralFertilization) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_MineralFertilization) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_MineralFertilization) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_MineralFertilization) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_MineralFertilization) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_MineralFertilization) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Params_MineralFertilization_List is a list of Params_MineralFertilization.
type Params_MineralFertilization_List struct{ capnp.List }

// NewParams_MineralFertilization creates a new list of Params_MineralFertilization.
func NewParams_MineralFertilization_List(s *capnp.Segment, sz int32) (Params_MineralFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_MineralFertilization_List{l}, err
}

func (s Params_MineralFertilization_List) At(i int) Params_MineralFertilization {
	return Params_MineralFertilization{s.List.Struct(i)}
}

func (s Params_MineralFertilization_List) Set(i int, v Params_MineralFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_MineralFertilization_List) String() string {
	str, _ := text.MarshalList(0xa363d226e178debd, s.List)
	return str
}

// Params_MineralFertilization_Future is a wrapper for a Params_MineralFertilization promised by a client call.
type Params_MineralFertilization_Future struct{ *capnp.Future }

func (p Params_MineralFertilization_Future) Struct() (Params_MineralFertilization, error) {
	s, err := p.Future.Struct()
	return Params_MineralFertilization{s}, err
}

func (p Params_MineralFertilization_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_MineralFertilization_Parameters struct{ capnp.Struct }

// Params_MineralFertilization_Parameters_TypeID is the unique identifier for the type Params_MineralFertilization_Parameters.
const Params_MineralFertilization_Parameters_TypeID = 0xc75b5ef2e9b05c2d

func NewParams_MineralFertilization_Parameters(s *capnp.Segment) (Params_MineralFertilization_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_MineralFertilization_Parameters{st}, err
}

func NewRootParams_MineralFertilization_Parameters(s *capnp.Segment) (Params_MineralFertilization_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0})
	return Params_MineralFertilization_Parameters{st}, err
}

func ReadRootParams_MineralFertilization_Parameters(msg *capnp.Message) (Params_MineralFertilization_Parameters, error) {
	root, err := msg.Root()
	return Params_MineralFertilization_Parameters{root.Struct()}, err
}

func (s Params_MineralFertilization_Parameters) String() string {
	str, _ := text.Marshal(0xc75b5ef2e9b05c2d, s.Struct)
	return str
}

func (s Params_MineralFertilization_Parameters) Carbamid() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_MineralFertilization_Parameters) SetCarbamid(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_MineralFertilization_Parameters) Nh4() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_MineralFertilization_Parameters) SetNh4(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_MineralFertilization_Parameters) No3() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_MineralFertilization_Parameters) SetNo3(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

// Params_MineralFertilization_Parameters_List is a list of Params_MineralFertilization_Parameters.
type Params_MineralFertilization_Parameters_List struct{ capnp.List }

// NewParams_MineralFertilization_Parameters creates a new list of Params_MineralFertilization_Parameters.
func NewParams_MineralFertilization_Parameters_List(s *capnp.Segment, sz int32) (Params_MineralFertilization_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 0}, sz)
	return Params_MineralFertilization_Parameters_List{l}, err
}

func (s Params_MineralFertilization_Parameters_List) At(i int) Params_MineralFertilization_Parameters {
	return Params_MineralFertilization_Parameters{s.List.Struct(i)}
}

func (s Params_MineralFertilization_Parameters_List) Set(i int, v Params_MineralFertilization_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_MineralFertilization_Parameters_List) String() string {
	str, _ := text.MarshalList(0xc75b5ef2e9b05c2d, s.List)
	return str
}

// Params_MineralFertilization_Parameters_Future is a wrapper for a Params_MineralFertilization_Parameters promised by a client call.
type Params_MineralFertilization_Parameters_Future struct{ *capnp.Future }

func (p Params_MineralFertilization_Parameters_Future) Struct() (Params_MineralFertilization_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_MineralFertilization_Parameters{s}, err
}

type Params_NDemandFertilization struct{ capnp.Struct }

// Params_NDemandFertilization_TypeID is the unique identifier for the type Params_NDemandFertilization.
const Params_NDemandFertilization_TypeID = 0xc7c14e92e0cd461c

func NewParams_NDemandFertilization(s *capnp.Segment) (Params_NDemandFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Params_NDemandFertilization{st}, err
}

func NewRootParams_NDemandFertilization(s *capnp.Segment) (Params_NDemandFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return Params_NDemandFertilization{st}, err
}

func ReadRootParams_NDemandFertilization(msg *capnp.Message) (Params_NDemandFertilization, error) {
	root, err := msg.Root()
	return Params_NDemandFertilization{root.Struct()}, err
}

func (s Params_NDemandFertilization) String() string {
	str, _ := text.Marshal(0xc7c14e92e0cd461c, s.Struct)
	return str
}

func (s Params_NDemandFertilization) NDemand() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_NDemandFertilization) SetNDemand(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_NDemandFertilization) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_NDemandFertilization) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_NDemandFertilization) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_NDemandFertilization) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_NDemandFertilization) Depth() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_NDemandFertilization) SetDepth(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_NDemandFertilization) Stage() uint8 {
	return s.Struct.Uint8(16) ^ 1
}

func (s Params_NDemandFertilization) SetStage(v uint8) {
	s.Struct.SetUint8(16, v^1)
}

// Params_NDemandFertilization_List is a list of Params_NDemandFertilization.
type Params_NDemandFertilization_List struct{ capnp.List }

// NewParams_NDemandFertilization creates a new list of Params_NDemandFertilization.
func NewParams_NDemandFertilization_List(s *capnp.Segment, sz int32) (Params_NDemandFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1}, sz)
	return Params_NDemandFertilization_List{l}, err
}

func (s Params_NDemandFertilization_List) At(i int) Params_NDemandFertilization {
	return Params_NDemandFertilization{s.List.Struct(i)}
}

func (s Params_NDemandFertilization_List) Set(i int, v Params_NDemandFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_NDemandFertilization_List) String() string {
	str, _ := text.MarshalList(0xc7c14e92e0cd461c, s.List)
	return str
}

// Params_NDemandFertilization_Future is a wrapper for a Params_NDemandFertilization promised by a client call.
type Params_NDemandFertilization_Future struct{ *capnp.Future }

func (p Params_NDemandFertilization_Future) Struct() (Params_NDemandFertilization, error) {
	s, err := p.Future.Struct()
	return Params_NDemandFertilization{s}, err
}

func (p Params_NDemandFertilization_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_OrganicFertilization struct{ capnp.Struct }

// Params_OrganicFertilization_TypeID is the unique identifier for the type Params_OrganicFertilization.
const Params_OrganicFertilization_TypeID = 0xb492838c7fed50b0

func NewParams_OrganicFertilization(s *capnp.Segment) (Params_OrganicFertilization, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Params_OrganicFertilization{st}, err
}

func NewRootParams_OrganicFertilization(s *capnp.Segment) (Params_OrganicFertilization, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Params_OrganicFertilization{st}, err
}

func ReadRootParams_OrganicFertilization(msg *capnp.Message) (Params_OrganicFertilization, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization{root.Struct()}, err
}

func (s Params_OrganicFertilization) String() string {
	str, _ := text.Marshal(0xb492838c7fed50b0, s.Struct)
	return str
}

func (s Params_OrganicFertilization) Params() (Params_OrganicFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_Parameters{Struct: p.Struct()}, err
}

func (s Params_OrganicFertilization) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_OrganicFertilization) SetParams(v Params_OrganicFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_Parameters struct, preferring placement in s's segment.
func (s Params_OrganicFertilization) NewParams() (Params_OrganicFertilization_Parameters, error) {
	ss, err := NewParams_OrganicFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_OrganicFertilization) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_OrganicFertilization) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_OrganicFertilization) Incorporation() bool {
	return s.Struct.Bit(64)
}

func (s Params_OrganicFertilization) SetIncorporation(v bool) {
	s.Struct.SetBit(64, v)
}

// Params_OrganicFertilization_List is a list of Params_OrganicFertilization.
type Params_OrganicFertilization_List struct{ capnp.List }

// NewParams_OrganicFertilization creates a new list of Params_OrganicFertilization.
func NewParams_OrganicFertilization_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return Params_OrganicFertilization_List{l}, err
}

func (s Params_OrganicFertilization_List) At(i int) Params_OrganicFertilization {
	return Params_OrganicFertilization{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_List) Set(i int, v Params_OrganicFertilization) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_List) String() string {
	str, _ := text.MarshalList(0xb492838c7fed50b0, s.List)
	return str
}

// Params_OrganicFertilization_Future is a wrapper for a Params_OrganicFertilization promised by a client call.
type Params_OrganicFertilization_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_Future) Struct() (Params_OrganicFertilization, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization{s}, err
}

func (p Params_OrganicFertilization_Future) Params() Params_OrganicFertilization_Parameters_Future {
	return Params_OrganicFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_OrganicFertilization_OrganicMatterParameters struct{ capnp.Struct }

// Params_OrganicFertilization_OrganicMatterParameters_TypeID is the unique identifier for the type Params_OrganicFertilization_OrganicMatterParameters.
const Params_OrganicFertilization_OrganicMatterParameters_TypeID = 0x95cdc661a6600137

func NewParams_OrganicFertilization_OrganicMatterParameters(s *capnp.Segment) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0})
	return Params_OrganicFertilization_OrganicMatterParameters{st}, err
}

func NewRootParams_OrganicFertilization_OrganicMatterParameters(s *capnp.Segment) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0})
	return Params_OrganicFertilization_OrganicMatterParameters{st}, err
}

func ReadRootParams_OrganicFertilization_OrganicMatterParameters(msg *capnp.Message) (Params_OrganicFertilization_OrganicMatterParameters, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization_OrganicMatterParameters{root.Struct()}, err
}

func (s Params_OrganicFertilization_OrganicMatterParameters) String() string {
	str, _ := text.Marshal(0x95cdc661a6600137, s.Struct)
	return str
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomDryMatterContent() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomDryMatterContent(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomNH4Content() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomNH4Content(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomNO3Content() float64 {
	return math.Float64frombits(s.Struct.Uint64(16))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomNO3Content(v float64) {
	s.Struct.SetUint64(16, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomCarbamidContent() float64 {
	return math.Float64frombits(s.Struct.Uint64(24))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomCarbamidContent(v float64) {
	s.Struct.SetUint64(24, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomSlowDecCoeffStandard() float64 {
	return math.Float64frombits(s.Struct.Uint64(32))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomSlowDecCoeffStandard(v float64) {
	s.Struct.SetUint64(32, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) AomFastDecCoeffStandard() float64 {
	return math.Float64frombits(s.Struct.Uint64(40))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetAomFastDecCoeffStandard(v float64) {
	s.Struct.SetUint64(40, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMToAOMSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(48))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMToAOMSlow(v float64) {
	s.Struct.SetUint64(48, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMToAOMFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(56))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMToAOMFast(v float64) {
	s.Struct.SetUint64(56, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) CnRatioAOMSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(64))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetCnRatioAOMSlow(v float64) {
	s.Struct.SetUint64(64, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) CnRatioAOMFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(72))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetCnRatioAOMFast(v float64) {
	s.Struct.SetUint64(72, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMSlowToSMBSlow() float64 {
	return math.Float64frombits(s.Struct.Uint64(80))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMSlowToSMBSlow(v float64) {
	s.Struct.SetUint64(80, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) PartAOMSlowToSMBFast() float64 {
	return math.Float64frombits(s.Struct.Uint64(88))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetPartAOMSlowToSMBFast(v float64) {
	s.Struct.SetUint64(88, math.Float64bits(v))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) NConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(96))
}

func (s Params_OrganicFertilization_OrganicMatterParameters) SetNConcentration(v float64) {
	s.Struct.SetUint64(96, math.Float64bits(v))
}

// Params_OrganicFertilization_OrganicMatterParameters_List is a list of Params_OrganicFertilization_OrganicMatterParameters.
type Params_OrganicFertilization_OrganicMatterParameters_List struct{ capnp.List }

// NewParams_OrganicFertilization_OrganicMatterParameters creates a new list of Params_OrganicFertilization_OrganicMatterParameters.
func NewParams_OrganicFertilization_OrganicMatterParameters_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_OrganicMatterParameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 104, PointerCount: 0}, sz)
	return Params_OrganicFertilization_OrganicMatterParameters_List{l}, err
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) At(i int) Params_OrganicFertilization_OrganicMatterParameters {
	return Params_OrganicFertilization_OrganicMatterParameters{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) Set(i int, v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_OrganicMatterParameters_List) String() string {
	str, _ := text.MarshalList(0x95cdc661a6600137, s.List)
	return str
}

// Params_OrganicFertilization_OrganicMatterParameters_Future is a wrapper for a Params_OrganicFertilization_OrganicMatterParameters promised by a client call.
type Params_OrganicFertilization_OrganicMatterParameters_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_OrganicMatterParameters_Future) Struct() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization_OrganicMatterParameters{s}, err
}

type Params_OrganicFertilization_Parameters struct{ capnp.Struct }

// Params_OrganicFertilization_Parameters_TypeID is the unique identifier for the type Params_OrganicFertilization_Parameters.
const Params_OrganicFertilization_Parameters_TypeID = 0xba0c11cf818d29fd

func NewParams_OrganicFertilization_Parameters(s *capnp.Segment) (Params_OrganicFertilization_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Params_OrganicFertilization_Parameters{st}, err
}

func NewRootParams_OrganicFertilization_Parameters(s *capnp.Segment) (Params_OrganicFertilization_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Params_OrganicFertilization_Parameters{st}, err
}

func ReadRootParams_OrganicFertilization_Parameters(msg *capnp.Message) (Params_OrganicFertilization_Parameters, error) {
	root, err := msg.Root()
	return Params_OrganicFertilization_Parameters{root.Struct()}, err
}

func (s Params_OrganicFertilization_Parameters) String() string {
	str, _ := text.Marshal(0xba0c11cf818d29fd, s.Struct)
	return str
}

func (s Params_OrganicFertilization_Parameters) Params() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_OrganicMatterParameters{Struct: p.Struct()}, err
}

func (s Params_OrganicFertilization_Parameters) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_OrganicFertilization_Parameters) SetParams(v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_OrganicMatterParameters struct, preferring placement in s's segment.
func (s Params_OrganicFertilization_Parameters) NewParams() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	ss, err := NewParams_OrganicFertilization_OrganicMatterParameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_OrganicMatterParameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s Params_OrganicFertilization_Parameters) Id() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Params_OrganicFertilization_Parameters) HasId() bool {
	return s.Struct.HasPtr(1)
}

func (s Params_OrganicFertilization_Parameters) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Params_OrganicFertilization_Parameters) SetId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Params_OrganicFertilization_Parameters) Name() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Params_OrganicFertilization_Parameters) HasName() bool {
	return s.Struct.HasPtr(2)
}

func (s Params_OrganicFertilization_Parameters) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Params_OrganicFertilization_Parameters) SetName(v string) error {
	return s.Struct.SetText(2, v)
}

// Params_OrganicFertilization_Parameters_List is a list of Params_OrganicFertilization_Parameters.
type Params_OrganicFertilization_Parameters_List struct{ capnp.List }

// NewParams_OrganicFertilization_Parameters creates a new list of Params_OrganicFertilization_Parameters.
func NewParams_OrganicFertilization_Parameters_List(s *capnp.Segment, sz int32) (Params_OrganicFertilization_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Params_OrganicFertilization_Parameters_List{l}, err
}

func (s Params_OrganicFertilization_Parameters_List) At(i int) Params_OrganicFertilization_Parameters {
	return Params_OrganicFertilization_Parameters{s.List.Struct(i)}
}

func (s Params_OrganicFertilization_Parameters_List) Set(i int, v Params_OrganicFertilization_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_OrganicFertilization_Parameters_List) String() string {
	str, _ := text.MarshalList(0xba0c11cf818d29fd, s.List)
	return str
}

// Params_OrganicFertilization_Parameters_Future is a wrapper for a Params_OrganicFertilization_Parameters promised by a client call.
type Params_OrganicFertilization_Parameters_Future struct{ *capnp.Future }

func (p Params_OrganicFertilization_Parameters_Future) Struct() (Params_OrganicFertilization_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_OrganicFertilization_Parameters{s}, err
}

func (p Params_OrganicFertilization_Parameters_Future) Params() Params_OrganicFertilization_OrganicMatterParameters_Future {
	return Params_OrganicFertilization_OrganicMatterParameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_Tillage struct{ capnp.Struct }

// Params_Tillage_TypeID is the unique identifier for the type Params_Tillage.
const Params_Tillage_TypeID = 0xaa49811a4e3e2c59

func NewParams_Tillage(s *capnp.Segment) (Params_Tillage, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Params_Tillage{st}, err
}

func NewRootParams_Tillage(s *capnp.Segment) (Params_Tillage, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Params_Tillage{st}, err
}

func ReadRootParams_Tillage(msg *capnp.Message) (Params_Tillage, error) {
	root, err := msg.Root()
	return Params_Tillage{root.Struct()}, err
}

func (s Params_Tillage) String() string {
	str, _ := text.Marshal(0xaa49811a4e3e2c59, s.Struct)
	return str
}

func (s Params_Tillage) Depth() float64 {
	return math.Float64frombits(s.Struct.Uint64(0) ^ 0x3fd3333333333333)
}

func (s Params_Tillage) SetDepth(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v)^0x3fd3333333333333)
}

// Params_Tillage_List is a list of Params_Tillage.
type Params_Tillage_List struct{ capnp.List }

// NewParams_Tillage creates a new list of Params_Tillage.
func NewParams_Tillage_List(s *capnp.Segment, sz int32) (Params_Tillage_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Params_Tillage_List{l}, err
}

func (s Params_Tillage_List) At(i int) Params_Tillage { return Params_Tillage{s.List.Struct(i)} }

func (s Params_Tillage_List) Set(i int, v Params_Tillage) error { return s.List.SetStruct(i, v.Struct) }

func (s Params_Tillage_List) String() string {
	str, _ := text.MarshalList(0xaa49811a4e3e2c59, s.List)
	return str
}

// Params_Tillage_Future is a wrapper for a Params_Tillage promised by a client call.
type Params_Tillage_Future struct{ *capnp.Future }

func (p Params_Tillage_Future) Struct() (Params_Tillage, error) {
	s, err := p.Future.Struct()
	return Params_Tillage{s}, err
}

type Params_Irrigation struct{ capnp.Struct }

// Params_Irrigation_TypeID is the unique identifier for the type Params_Irrigation.
const Params_Irrigation_TypeID = 0xd90939a58e404ff8

func NewParams_Irrigation(s *capnp.Segment) (Params_Irrigation, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Irrigation{st}, err
}

func NewRootParams_Irrigation(s *capnp.Segment) (Params_Irrigation, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Params_Irrigation{st}, err
}

func ReadRootParams_Irrigation(msg *capnp.Message) (Params_Irrigation, error) {
	root, err := msg.Root()
	return Params_Irrigation{root.Struct()}, err
}

func (s Params_Irrigation) String() string {
	str, _ := text.Marshal(0xd90939a58e404ff8, s.Struct)
	return str
}

func (s Params_Irrigation) Amount() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Irrigation) SetAmount(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_Irrigation) Params() (Params_Irrigation_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_Irrigation_Parameters{Struct: p.Struct()}, err
}

func (s Params_Irrigation) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s Params_Irrigation) SetParams(v Params_Irrigation_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_Irrigation_Parameters struct, preferring placement in s's segment.
func (s Params_Irrigation) NewParams() (Params_Irrigation_Parameters, error) {
	ss, err := NewParams_Irrigation_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_Irrigation_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Params_Irrigation_List is a list of Params_Irrigation.
type Params_Irrigation_List struct{ capnp.List }

// NewParams_Irrigation creates a new list of Params_Irrigation.
func NewParams_Irrigation_List(s *capnp.Segment, sz int32) (Params_Irrigation_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Params_Irrigation_List{l}, err
}

func (s Params_Irrigation_List) At(i int) Params_Irrigation {
	return Params_Irrigation{s.List.Struct(i)}
}

func (s Params_Irrigation_List) Set(i int, v Params_Irrigation) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Irrigation_List) String() string {
	str, _ := text.MarshalList(0xd90939a58e404ff8, s.List)
	return str
}

// Params_Irrigation_Future is a wrapper for a Params_Irrigation promised by a client call.
type Params_Irrigation_Future struct{ *capnp.Future }

func (p Params_Irrigation_Future) Struct() (Params_Irrigation, error) {
	s, err := p.Future.Struct()
	return Params_Irrigation{s}, err
}

func (p Params_Irrigation_Future) Params() Params_Irrigation_Parameters_Future {
	return Params_Irrigation_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type Params_Irrigation_Parameters struct{ capnp.Struct }

// Params_Irrigation_Parameters_TypeID is the unique identifier for the type Params_Irrigation_Parameters.
const Params_Irrigation_Parameters_TypeID = 0xaec9e089e87f1599

func NewParams_Irrigation_Parameters(s *capnp.Segment) (Params_Irrigation_Parameters, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Params_Irrigation_Parameters{st}, err
}

func NewRootParams_Irrigation_Parameters(s *capnp.Segment) (Params_Irrigation_Parameters, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Params_Irrigation_Parameters{st}, err
}

func ReadRootParams_Irrigation_Parameters(msg *capnp.Message) (Params_Irrigation_Parameters, error) {
	root, err := msg.Root()
	return Params_Irrigation_Parameters{root.Struct()}, err
}

func (s Params_Irrigation_Parameters) String() string {
	str, _ := text.Marshal(0xaec9e089e87f1599, s.Struct)
	return str
}

func (s Params_Irrigation_Parameters) NitrateConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Params_Irrigation_Parameters) SetNitrateConcentration(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Params_Irrigation_Parameters) SulfateConcentration() float64 {
	return math.Float64frombits(s.Struct.Uint64(8))
}

func (s Params_Irrigation_Parameters) SetSulfateConcentration(v float64) {
	s.Struct.SetUint64(8, math.Float64bits(v))
}

// Params_Irrigation_Parameters_List is a list of Params_Irrigation_Parameters.
type Params_Irrigation_Parameters_List struct{ capnp.List }

// NewParams_Irrigation_Parameters creates a new list of Params_Irrigation_Parameters.
func NewParams_Irrigation_Parameters_List(s *capnp.Segment, sz int32) (Params_Irrigation_Parameters_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Params_Irrigation_Parameters_List{l}, err
}

func (s Params_Irrigation_Parameters_List) At(i int) Params_Irrigation_Parameters {
	return Params_Irrigation_Parameters{s.List.Struct(i)}
}

func (s Params_Irrigation_Parameters_List) Set(i int, v Params_Irrigation_Parameters) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Params_Irrigation_Parameters_List) String() string {
	str, _ := text.MarshalList(0xaec9e089e87f1599, s.List)
	return str
}

// Params_Irrigation_Parameters_Future is a wrapper for a Params_Irrigation_Parameters promised by a client call.
type Params_Irrigation_Parameters_Future struct{ *capnp.Future }

func (p Params_Irrigation_Parameters_Future) Struct() (Params_Irrigation_Parameters, error) {
	s, err := p.Future.Struct()
	return Params_Irrigation_Parameters{s}, err
}

type FertilizerService struct{ Client *capnp.Client }

// FertilizerService_TypeID is the unique identifier for the type FertilizerService.
const FertilizerService_TypeID = 0xe3da81cc36d5741d

func (c FertilizerService) MineralFertilizerPartitionFor(ctx context.Context, params func(FertilizerService_mineralFertilizerPartitionFor_Params) error) (FertilizerService_mineralFertilizerPartitionFor_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizerPartitionFor",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_mineralFertilizerPartitionFor_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_mineralFertilizerPartitionFor_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) OrganicFertilizerParametersFor(ctx context.Context, params func(FertilizerService_organicFertilizerParametersFor_Params) error) (FertilizerService_organicFertilizerParametersFor_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      1,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizerParametersFor",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_organicFertilizerParametersFor_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_organicFertilizerParametersFor_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) AvailableMineralFertilizers(ctx context.Context, params func(FertilizerService_availableMineralFertilizers_Params) error) (FertilizerService_availableMineralFertilizers_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      2,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableMineralFertilizers",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_availableMineralFertilizers_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_availableMineralFertilizers_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) AvailableOrganicFertilizers(ctx context.Context, params func(FertilizerService_availableOrganicFertilizers_Params) error) (FertilizerService_availableOrganicFertilizers_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      3,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableOrganicFertilizers",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error {
			return params(FertilizerService_availableOrganicFertilizers_Params{Struct: s})
		}
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_availableOrganicFertilizers_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) MineralFertilizer(ctx context.Context, params func(FertilizerService_mineralFertilizer_Params) error) (FertilizerService_mineralFertilizer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      4,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(FertilizerService_mineralFertilizer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_mineralFertilizer_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) OrganicFertilizer(ctx context.Context, params func(FertilizerService_organicFertilizer_Params) error) (FertilizerService_organicFertilizer_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      5,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(FertilizerService_organicFertilizer_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return FertilizerService_organicFertilizer_Results_Future{Future: ans.Future()}, release
}
func (c FertilizerService) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c FertilizerService) AddRef() FertilizerService {
	return FertilizerService{
		Client: c.Client.AddRef(),
	}
}

func (c FertilizerService) Release() {
	c.Client.Release()
}

// A FertilizerService_Server is a FertilizerService with a local implementation.
type FertilizerService_Server interface {
	MineralFertilizerPartitionFor(context.Context, FertilizerService_mineralFertilizerPartitionFor) error

	OrganicFertilizerParametersFor(context.Context, FertilizerService_organicFertilizerParametersFor) error

	AvailableMineralFertilizers(context.Context, FertilizerService_availableMineralFertilizers) error

	AvailableOrganicFertilizers(context.Context, FertilizerService_availableOrganicFertilizers) error

	MineralFertilizer(context.Context, FertilizerService_mineralFertilizer) error

	OrganicFertilizer(context.Context, FertilizerService_organicFertilizer) error

	Info(context.Context, common.Identifiable_info) error
}

// FertilizerService_NewServer creates a new Server from an implementation of FertilizerService_Server.
func FertilizerService_NewServer(s FertilizerService_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(FertilizerService_Methods(nil, s), s, c, policy)
}

// FertilizerService_ServerToClient creates a new Client from an implementation of FertilizerService_Server.
// The caller is responsible for calling Release on the returned Client.
func FertilizerService_ServerToClient(s FertilizerService_Server, policy *server.Policy) FertilizerService {
	return FertilizerService{Client: capnp.NewClient(FertilizerService_NewServer(s, policy))}
}

// FertilizerService_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func FertilizerService_Methods(methods []server.Method, s FertilizerService_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 7)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizerPartitionFor",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MineralFertilizerPartitionFor(ctx, FertilizerService_mineralFertilizerPartitionFor{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      1,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizerParametersFor",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OrganicFertilizerParametersFor(ctx, FertilizerService_organicFertilizerParametersFor{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      2,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableMineralFertilizers",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AvailableMineralFertilizers(ctx, FertilizerService_availableMineralFertilizers{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      3,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "availableOrganicFertilizers",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.AvailableOrganicFertilizers(ctx, FertilizerService_availableOrganicFertilizers{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      4,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "mineralFertilizer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.MineralFertilizer(ctx, FertilizerService_mineralFertilizer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe3da81cc36d5741d,
			MethodID:      5,
			InterfaceName: "model/monica/monica_management.capnp:FertilizerService",
			MethodName:    "organicFertilizer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OrganicFertilizer(ctx, FertilizerService_organicFertilizer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// FertilizerService_mineralFertilizerPartitionFor holds the state for a server call to FertilizerService.mineralFertilizerPartitionFor.
// See server.Call for documentation.
type FertilizerService_mineralFertilizerPartitionFor struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_mineralFertilizerPartitionFor) Args() FertilizerService_mineralFertilizerPartitionFor_Params {
	return FertilizerService_mineralFertilizerPartitionFor_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_mineralFertilizerPartitionFor) AllocResults() (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{Struct: r}, err
}

// FertilizerService_organicFertilizerParametersFor holds the state for a server call to FertilizerService.organicFertilizerParametersFor.
// See server.Call for documentation.
type FertilizerService_organicFertilizerParametersFor struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_organicFertilizerParametersFor) Args() FertilizerService_organicFertilizerParametersFor_Params {
	return FertilizerService_organicFertilizerParametersFor_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_organicFertilizerParametersFor) AllocResults() (FertilizerService_organicFertilizerParametersFor_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{Struct: r}, err
}

// FertilizerService_availableMineralFertilizers holds the state for a server call to FertilizerService.availableMineralFertilizers.
// See server.Call for documentation.
type FertilizerService_availableMineralFertilizers struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_availableMineralFertilizers) Args() FertilizerService_availableMineralFertilizers_Params {
	return FertilizerService_availableMineralFertilizers_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_availableMineralFertilizers) AllocResults() (FertilizerService_availableMineralFertilizers_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableMineralFertilizers_Results{Struct: r}, err
}

// FertilizerService_availableOrganicFertilizers holds the state for a server call to FertilizerService.availableOrganicFertilizers.
// See server.Call for documentation.
type FertilizerService_availableOrganicFertilizers struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_availableOrganicFertilizers) Args() FertilizerService_availableOrganicFertilizers_Params {
	return FertilizerService_availableOrganicFertilizers_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_availableOrganicFertilizers) AllocResults() (FertilizerService_availableOrganicFertilizers_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableOrganicFertilizers_Results{Struct: r}, err
}

// FertilizerService_mineralFertilizer holds the state for a server call to FertilizerService.mineralFertilizer.
// See server.Call for documentation.
type FertilizerService_mineralFertilizer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_mineralFertilizer) Args() FertilizerService_mineralFertilizer_Params {
	return FertilizerService_mineralFertilizer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_mineralFertilizer) AllocResults() (FertilizerService_mineralFertilizer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Results{Struct: r}, err
}

// FertilizerService_organicFertilizer holds the state for a server call to FertilizerService.organicFertilizer.
// See server.Call for documentation.
type FertilizerService_organicFertilizer struct {
	*server.Call
}

// Args returns the call's arguments.
func (c FertilizerService_organicFertilizer) Args() FertilizerService_organicFertilizer_Params {
	return FertilizerService_organicFertilizer_Params{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c FertilizerService_organicFertilizer) AllocResults() (FertilizerService_organicFertilizer_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Results{Struct: r}, err
}

type FertilizerService_Entry struct{ capnp.Struct }

// FertilizerService_Entry_TypeID is the unique identifier for the type FertilizerService_Entry.
const FertilizerService_Entry_TypeID = 0xf54586500e2b72cd

func NewFertilizerService_Entry(s *capnp.Segment) (FertilizerService_Entry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FertilizerService_Entry{st}, err
}

func NewRootFertilizerService_Entry(s *capnp.Segment) (FertilizerService_Entry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FertilizerService_Entry{st}, err
}

func ReadRootFertilizerService_Entry(msg *capnp.Message) (FertilizerService_Entry, error) {
	root, err := msg.Root()
	return FertilizerService_Entry{root.Struct()}, err
}

func (s FertilizerService_Entry) String() string {
	str, _ := text.Marshal(0xf54586500e2b72cd, s.Struct)
	return str
}

func (s FertilizerService_Entry) Info() (common.IdInformation, error) {
	p, err := s.Struct.Ptr(0)
	return common.IdInformation{Struct: p.Struct()}, err
}

func (s FertilizerService_Entry) HasInfo() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_Entry) SetInfo(v common.IdInformation) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated common.IdInformation struct, preferring placement in s's segment.
func (s FertilizerService_Entry) NewInfo() (common.IdInformation, error) {
	ss, err := common.NewIdInformation(s.Struct.Segment())
	if err != nil {
		return common.IdInformation{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s FertilizerService_Entry) Ref() common.AnyValueHolder {
	p, _ := s.Struct.Ptr(1)
	return common.AnyValueHolder{Client: p.Interface().Client()}
}

func (s FertilizerService_Entry) HasRef() bool {
	return s.Struct.HasPtr(1)
}

func (s FertilizerService_Entry) SetRef(v common.AnyValueHolder) error {
	if !v.Client.IsValid() {
		return s.Struct.SetPtr(1, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(1, in.ToPtr())
}

// FertilizerService_Entry_List is a list of FertilizerService_Entry.
type FertilizerService_Entry_List struct{ capnp.List }

// NewFertilizerService_Entry creates a new list of FertilizerService_Entry.
func NewFertilizerService_Entry_List(s *capnp.Segment, sz int32) (FertilizerService_Entry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FertilizerService_Entry_List{l}, err
}

func (s FertilizerService_Entry_List) At(i int) FertilizerService_Entry {
	return FertilizerService_Entry{s.List.Struct(i)}
}

func (s FertilizerService_Entry_List) Set(i int, v FertilizerService_Entry) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_Entry_List) String() string {
	str, _ := text.MarshalList(0xf54586500e2b72cd, s.List)
	return str
}

// FertilizerService_Entry_Future is a wrapper for a FertilizerService_Entry promised by a client call.
type FertilizerService_Entry_Future struct{ *capnp.Future }

func (p FertilizerService_Entry_Future) Struct() (FertilizerService_Entry, error) {
	s, err := p.Future.Struct()
	return FertilizerService_Entry{s}, err
}

func (p FertilizerService_Entry_Future) Info() common.IdInformation_Future {
	return common.IdInformation_Future{Future: p.Future.Field(0, nil)}
}

func (p FertilizerService_Entry_Future) Ref() common.AnyValueHolder {
	return common.AnyValueHolder{Client: p.Future.Field(1, nil).Client()}
}

type FertilizerService_mineralFertilizerPartitionFor_Params struct{ capnp.Struct }

// FertilizerService_mineralFertilizerPartitionFor_Params_TypeID is the unique identifier for the type FertilizerService_mineralFertilizerPartitionFor_Params.
const FertilizerService_mineralFertilizerPartitionFor_Params_TypeID = 0xba3900305e908e31

func NewFertilizerService_mineralFertilizerPartitionFor_Params(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_mineralFertilizerPartitionFor_Params{st}, err
}

func NewRootFertilizerService_mineralFertilizerPartitionFor_Params(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_mineralFertilizerPartitionFor_Params{st}, err
}

func ReadRootFertilizerService_mineralFertilizerPartitionFor_Params(msg *capnp.Message) (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizerPartitionFor_Params{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) String() string {
	str, _ := text.Marshal(0xba3900305e908e31, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) MinFert() MineralFertilizer {
	return MineralFertilizer(s.Struct.Uint16(0))
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params) SetMinFert(v MineralFertilizer) {
	s.Struct.SetUint16(0, uint16(v))
}

// FertilizerService_mineralFertilizerPartitionFor_Params_List is a list of FertilizerService_mineralFertilizerPartitionFor_Params.
type FertilizerService_mineralFertilizerPartitionFor_Params_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizerPartitionFor_Params creates a new list of FertilizerService_mineralFertilizerPartitionFor_Params.
func NewFertilizerService_mineralFertilizerPartitionFor_Params_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizerPartitionFor_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FertilizerService_mineralFertilizerPartitionFor_Params_List{l}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) At(i int) FertilizerService_mineralFertilizerPartitionFor_Params {
	return FertilizerService_mineralFertilizerPartitionFor_Params{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) Set(i int, v FertilizerService_mineralFertilizerPartitionFor_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Params_List) String() string {
	str, _ := text.MarshalList(0xba3900305e908e31, s.List)
	return str
}

// FertilizerService_mineralFertilizerPartitionFor_Params_Future is a wrapper for a FertilizerService_mineralFertilizerPartitionFor_Params promised by a client call.
type FertilizerService_mineralFertilizerPartitionFor_Params_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizerPartitionFor_Params_Future) Struct() (FertilizerService_mineralFertilizerPartitionFor_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizerPartitionFor_Params{s}, err
}

type FertilizerService_mineralFertilizerPartitionFor_Results struct{ capnp.Struct }

// FertilizerService_mineralFertilizerPartitionFor_Results_TypeID is the unique identifier for the type FertilizerService_mineralFertilizerPartitionFor_Results.
const FertilizerService_mineralFertilizerPartitionFor_Results_TypeID = 0xbdb5eaa658c7abab

func NewFertilizerService_mineralFertilizerPartitionFor_Results(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{st}, err
}

func NewRootFertilizerService_mineralFertilizerPartitionFor_Results(s *capnp.Segment) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizerPartitionFor_Results{st}, err
}

func ReadRootFertilizerService_mineralFertilizerPartitionFor_Results(msg *capnp.Message) (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizerPartitionFor_Results{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) String() string {
	str, _ := text.Marshal(0xbdb5eaa658c7abab, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) Partition() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) HasPartition() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results) SetPartition(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPartition sets the partition field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_mineralFertilizerPartitionFor_Results) NewPartition() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_mineralFertilizerPartitionFor_Results_List is a list of FertilizerService_mineralFertilizerPartitionFor_Results.
type FertilizerService_mineralFertilizerPartitionFor_Results_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizerPartitionFor_Results creates a new list of FertilizerService_mineralFertilizerPartitionFor_Results.
func NewFertilizerService_mineralFertilizerPartitionFor_Results_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizerPartitionFor_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizerPartitionFor_Results_List{l}, err
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) At(i int) FertilizerService_mineralFertilizerPartitionFor_Results {
	return FertilizerService_mineralFertilizerPartitionFor_Results{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) Set(i int, v FertilizerService_mineralFertilizerPartitionFor_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizerPartitionFor_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb5eaa658c7abab, s.List)
	return str
}

// FertilizerService_mineralFertilizerPartitionFor_Results_Future is a wrapper for a FertilizerService_mineralFertilizerPartitionFor_Results promised by a client call.
type FertilizerService_mineralFertilizerPartitionFor_Results_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizerPartitionFor_Results_Future) Struct() (FertilizerService_mineralFertilizerPartitionFor_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizerPartitionFor_Results{s}, err
}

func (p FertilizerService_mineralFertilizerPartitionFor_Results_Future) Partition() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type FertilizerService_organicFertilizerParametersFor_Params struct{ capnp.Struct }

// FertilizerService_organicFertilizerParametersFor_Params_TypeID is the unique identifier for the type FertilizerService_organicFertilizerParametersFor_Params.
const FertilizerService_organicFertilizerParametersFor_Params_TypeID = 0xead8c24402f189b4

func NewFertilizerService_organicFertilizerParametersFor_Params(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_organicFertilizerParametersFor_Params{st}, err
}

func NewRootFertilizerService_organicFertilizerParametersFor_Params(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FertilizerService_organicFertilizerParametersFor_Params{st}, err
}

func ReadRootFertilizerService_organicFertilizerParametersFor_Params(msg *capnp.Message) (FertilizerService_organicFertilizerParametersFor_Params, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizerParametersFor_Params{root.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Params) String() string {
	str, _ := text.Marshal(0xead8c24402f189b4, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizerParametersFor_Params) OrgFert() OrganicFertilizer {
	return OrganicFertilizer(s.Struct.Uint16(0))
}

func (s FertilizerService_organicFertilizerParametersFor_Params) SetOrgFert(v OrganicFertilizer) {
	s.Struct.SetUint16(0, uint16(v))
}

// FertilizerService_organicFertilizerParametersFor_Params_List is a list of FertilizerService_organicFertilizerParametersFor_Params.
type FertilizerService_organicFertilizerParametersFor_Params_List struct{ capnp.List }

// NewFertilizerService_organicFertilizerParametersFor_Params creates a new list of FertilizerService_organicFertilizerParametersFor_Params.
func NewFertilizerService_organicFertilizerParametersFor_Params_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizerParametersFor_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FertilizerService_organicFertilizerParametersFor_Params_List{l}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) At(i int) FertilizerService_organicFertilizerParametersFor_Params {
	return FertilizerService_organicFertilizerParametersFor_Params{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) Set(i int, v FertilizerService_organicFertilizerParametersFor_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizerParametersFor_Params_List) String() string {
	str, _ := text.MarshalList(0xead8c24402f189b4, s.List)
	return str
}

// FertilizerService_organicFertilizerParametersFor_Params_Future is a wrapper for a FertilizerService_organicFertilizerParametersFor_Params promised by a client call.
type FertilizerService_organicFertilizerParametersFor_Params_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizerParametersFor_Params_Future) Struct() (FertilizerService_organicFertilizerParametersFor_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizerParametersFor_Params{s}, err
}

type FertilizerService_organicFertilizerParametersFor_Results struct{ capnp.Struct }

// FertilizerService_organicFertilizerParametersFor_Results_TypeID is the unique identifier for the type FertilizerService_organicFertilizerParametersFor_Results.
const FertilizerService_organicFertilizerParametersFor_Results_TypeID = 0xf6b53f1a4cf29599

func NewFertilizerService_organicFertilizerParametersFor_Results(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{st}, err
}

func NewRootFertilizerService_organicFertilizerParametersFor_Results(s *capnp.Segment) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizerParametersFor_Results{st}, err
}

func ReadRootFertilizerService_organicFertilizerParametersFor_Results(msg *capnp.Message) (FertilizerService_organicFertilizerParametersFor_Results, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizerParametersFor_Results{root.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results) String() string {
	str, _ := text.Marshal(0xf6b53f1a4cf29599, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizerParametersFor_Results) Params() (Params_OrganicFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results) HasParams() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizerParametersFor_Results) SetParams(v Params_OrganicFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewParams sets the params field to a newly
// allocated Params_OrganicFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_organicFertilizerParametersFor_Results) NewParams() (Params_OrganicFertilization_Parameters, error) {
	ss, err := NewParams_OrganicFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_organicFertilizerParametersFor_Results_List is a list of FertilizerService_organicFertilizerParametersFor_Results.
type FertilizerService_organicFertilizerParametersFor_Results_List struct{ capnp.List }

// NewFertilizerService_organicFertilizerParametersFor_Results creates a new list of FertilizerService_organicFertilizerParametersFor_Results.
func NewFertilizerService_organicFertilizerParametersFor_Results_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizerParametersFor_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizerParametersFor_Results_List{l}, err
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) At(i int) FertilizerService_organicFertilizerParametersFor_Results {
	return FertilizerService_organicFertilizerParametersFor_Results{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) Set(i int, v FertilizerService_organicFertilizerParametersFor_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizerParametersFor_Results_List) String() string {
	str, _ := text.MarshalList(0xf6b53f1a4cf29599, s.List)
	return str
}

// FertilizerService_organicFertilizerParametersFor_Results_Future is a wrapper for a FertilizerService_organicFertilizerParametersFor_Results promised by a client call.
type FertilizerService_organicFertilizerParametersFor_Results_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizerParametersFor_Results_Future) Struct() (FertilizerService_organicFertilizerParametersFor_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizerParametersFor_Results{s}, err
}

func (p FertilizerService_organicFertilizerParametersFor_Results_Future) Params() Params_OrganicFertilization_Parameters_Future {
	return Params_OrganicFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type FertilizerService_availableMineralFertilizers_Params struct{ capnp.Struct }

// FertilizerService_availableMineralFertilizers_Params_TypeID is the unique identifier for the type FertilizerService_availableMineralFertilizers_Params.
const FertilizerService_availableMineralFertilizers_Params_TypeID = 0xa9b89d473e06f2c7

func NewFertilizerService_availableMineralFertilizers_Params(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableMineralFertilizers_Params{st}, err
}

func NewRootFertilizerService_availableMineralFertilizers_Params(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableMineralFertilizers_Params{st}, err
}

func ReadRootFertilizerService_availableMineralFertilizers_Params(msg *capnp.Message) (FertilizerService_availableMineralFertilizers_Params, error) {
	root, err := msg.Root()
	return FertilizerService_availableMineralFertilizers_Params{root.Struct()}, err
}

func (s FertilizerService_availableMineralFertilizers_Params) String() string {
	str, _ := text.Marshal(0xa9b89d473e06f2c7, s.Struct)
	return str
}

// FertilizerService_availableMineralFertilizers_Params_List is a list of FertilizerService_availableMineralFertilizers_Params.
type FertilizerService_availableMineralFertilizers_Params_List struct{ capnp.List }

// NewFertilizerService_availableMineralFertilizers_Params creates a new list of FertilizerService_availableMineralFertilizers_Params.
func NewFertilizerService_availableMineralFertilizers_Params_List(s *capnp.Segment, sz int32) (FertilizerService_availableMineralFertilizers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FertilizerService_availableMineralFertilizers_Params_List{l}, err
}

func (s FertilizerService_availableMineralFertilizers_Params_List) At(i int) FertilizerService_availableMineralFertilizers_Params {
	return FertilizerService_availableMineralFertilizers_Params{s.List.Struct(i)}
}

func (s FertilizerService_availableMineralFertilizers_Params_List) Set(i int, v FertilizerService_availableMineralFertilizers_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableMineralFertilizers_Params_List) String() string {
	str, _ := text.MarshalList(0xa9b89d473e06f2c7, s.List)
	return str
}

// FertilizerService_availableMineralFertilizers_Params_Future is a wrapper for a FertilizerService_availableMineralFertilizers_Params promised by a client call.
type FertilizerService_availableMineralFertilizers_Params_Future struct{ *capnp.Future }

func (p FertilizerService_availableMineralFertilizers_Params_Future) Struct() (FertilizerService_availableMineralFertilizers_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableMineralFertilizers_Params{s}, err
}

type FertilizerService_availableMineralFertilizers_Results struct{ capnp.Struct }

// FertilizerService_availableMineralFertilizers_Results_TypeID is the unique identifier for the type FertilizerService_availableMineralFertilizers_Results.
const FertilizerService_availableMineralFertilizers_Results_TypeID = 0xbd608077a7cec156

func NewFertilizerService_availableMineralFertilizers_Results(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableMineralFertilizers_Results{st}, err
}

func NewRootFertilizerService_availableMineralFertilizers_Results(s *capnp.Segment) (FertilizerService_availableMineralFertilizers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableMineralFertilizers_Results{st}, err
}

func ReadRootFertilizerService_availableMineralFertilizers_Results(msg *capnp.Message) (FertilizerService_availableMineralFertilizers_Results, error) {
	root, err := msg.Root()
	return FertilizerService_availableMineralFertilizers_Results{root.Struct()}, err
}

func (s FertilizerService_availableMineralFertilizers_Results) String() string {
	str, _ := text.Marshal(0xbd608077a7cec156, s.Struct)
	return str
}

func (s FertilizerService_availableMineralFertilizers_Results) Entries() (FertilizerService_Entry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FertilizerService_Entry_List{List: p.List()}, err
}

func (s FertilizerService_availableMineralFertilizers_Results) HasEntries() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_availableMineralFertilizers_Results) SetEntries(v FertilizerService_Entry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated FertilizerService_Entry_List, preferring placement in s's segment.
func (s FertilizerService_availableMineralFertilizers_Results) NewEntries(n int32) (FertilizerService_Entry_List, error) {
	l, err := NewFertilizerService_Entry_List(s.Struct.Segment(), n)
	if err != nil {
		return FertilizerService_Entry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FertilizerService_availableMineralFertilizers_Results_List is a list of FertilizerService_availableMineralFertilizers_Results.
type FertilizerService_availableMineralFertilizers_Results_List struct{ capnp.List }

// NewFertilizerService_availableMineralFertilizers_Results creates a new list of FertilizerService_availableMineralFertilizers_Results.
func NewFertilizerService_availableMineralFertilizers_Results_List(s *capnp.Segment, sz int32) (FertilizerService_availableMineralFertilizers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_availableMineralFertilizers_Results_List{l}, err
}

func (s FertilizerService_availableMineralFertilizers_Results_List) At(i int) FertilizerService_availableMineralFertilizers_Results {
	return FertilizerService_availableMineralFertilizers_Results{s.List.Struct(i)}
}

func (s FertilizerService_availableMineralFertilizers_Results_List) Set(i int, v FertilizerService_availableMineralFertilizers_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableMineralFertilizers_Results_List) String() string {
	str, _ := text.MarshalList(0xbd608077a7cec156, s.List)
	return str
}

// FertilizerService_availableMineralFertilizers_Results_Future is a wrapper for a FertilizerService_availableMineralFertilizers_Results promised by a client call.
type FertilizerService_availableMineralFertilizers_Results_Future struct{ *capnp.Future }

func (p FertilizerService_availableMineralFertilizers_Results_Future) Struct() (FertilizerService_availableMineralFertilizers_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableMineralFertilizers_Results{s}, err
}

type FertilizerService_availableOrganicFertilizers_Params struct{ capnp.Struct }

// FertilizerService_availableOrganicFertilizers_Params_TypeID is the unique identifier for the type FertilizerService_availableOrganicFertilizers_Params.
const FertilizerService_availableOrganicFertilizers_Params_TypeID = 0x9437da695f7567e7

func NewFertilizerService_availableOrganicFertilizers_Params(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableOrganicFertilizers_Params{st}, err
}

func NewRootFertilizerService_availableOrganicFertilizers_Params(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FertilizerService_availableOrganicFertilizers_Params{st}, err
}

func ReadRootFertilizerService_availableOrganicFertilizers_Params(msg *capnp.Message) (FertilizerService_availableOrganicFertilizers_Params, error) {
	root, err := msg.Root()
	return FertilizerService_availableOrganicFertilizers_Params{root.Struct()}, err
}

func (s FertilizerService_availableOrganicFertilizers_Params) String() string {
	str, _ := text.Marshal(0x9437da695f7567e7, s.Struct)
	return str
}

// FertilizerService_availableOrganicFertilizers_Params_List is a list of FertilizerService_availableOrganicFertilizers_Params.
type FertilizerService_availableOrganicFertilizers_Params_List struct{ capnp.List }

// NewFertilizerService_availableOrganicFertilizers_Params creates a new list of FertilizerService_availableOrganicFertilizers_Params.
func NewFertilizerService_availableOrganicFertilizers_Params_List(s *capnp.Segment, sz int32) (FertilizerService_availableOrganicFertilizers_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FertilizerService_availableOrganicFertilizers_Params_List{l}, err
}

func (s FertilizerService_availableOrganicFertilizers_Params_List) At(i int) FertilizerService_availableOrganicFertilizers_Params {
	return FertilizerService_availableOrganicFertilizers_Params{s.List.Struct(i)}
}

func (s FertilizerService_availableOrganicFertilizers_Params_List) Set(i int, v FertilizerService_availableOrganicFertilizers_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableOrganicFertilizers_Params_List) String() string {
	str, _ := text.MarshalList(0x9437da695f7567e7, s.List)
	return str
}

// FertilizerService_availableOrganicFertilizers_Params_Future is a wrapper for a FertilizerService_availableOrganicFertilizers_Params promised by a client call.
type FertilizerService_availableOrganicFertilizers_Params_Future struct{ *capnp.Future }

func (p FertilizerService_availableOrganicFertilizers_Params_Future) Struct() (FertilizerService_availableOrganicFertilizers_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableOrganicFertilizers_Params{s}, err
}

type FertilizerService_availableOrganicFertilizers_Results struct{ capnp.Struct }

// FertilizerService_availableOrganicFertilizers_Results_TypeID is the unique identifier for the type FertilizerService_availableOrganicFertilizers_Results.
const FertilizerService_availableOrganicFertilizers_Results_TypeID = 0xab49546abd2a478a

func NewFertilizerService_availableOrganicFertilizers_Results(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableOrganicFertilizers_Results{st}, err
}

func NewRootFertilizerService_availableOrganicFertilizers_Results(s *capnp.Segment) (FertilizerService_availableOrganicFertilizers_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_availableOrganicFertilizers_Results{st}, err
}

func ReadRootFertilizerService_availableOrganicFertilizers_Results(msg *capnp.Message) (FertilizerService_availableOrganicFertilizers_Results, error) {
	root, err := msg.Root()
	return FertilizerService_availableOrganicFertilizers_Results{root.Struct()}, err
}

func (s FertilizerService_availableOrganicFertilizers_Results) String() string {
	str, _ := text.Marshal(0xab49546abd2a478a, s.Struct)
	return str
}

func (s FertilizerService_availableOrganicFertilizers_Results) Entries() (FertilizerService_Entry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FertilizerService_Entry_List{List: p.List()}, err
}

func (s FertilizerService_availableOrganicFertilizers_Results) HasEntries() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_availableOrganicFertilizers_Results) SetEntries(v FertilizerService_Entry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated FertilizerService_Entry_List, preferring placement in s's segment.
func (s FertilizerService_availableOrganicFertilizers_Results) NewEntries(n int32) (FertilizerService_Entry_List, error) {
	l, err := NewFertilizerService_Entry_List(s.Struct.Segment(), n)
	if err != nil {
		return FertilizerService_Entry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FertilizerService_availableOrganicFertilizers_Results_List is a list of FertilizerService_availableOrganicFertilizers_Results.
type FertilizerService_availableOrganicFertilizers_Results_List struct{ capnp.List }

// NewFertilizerService_availableOrganicFertilizers_Results creates a new list of FertilizerService_availableOrganicFertilizers_Results.
func NewFertilizerService_availableOrganicFertilizers_Results_List(s *capnp.Segment, sz int32) (FertilizerService_availableOrganicFertilizers_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_availableOrganicFertilizers_Results_List{l}, err
}

func (s FertilizerService_availableOrganicFertilizers_Results_List) At(i int) FertilizerService_availableOrganicFertilizers_Results {
	return FertilizerService_availableOrganicFertilizers_Results{s.List.Struct(i)}
}

func (s FertilizerService_availableOrganicFertilizers_Results_List) Set(i int, v FertilizerService_availableOrganicFertilizers_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_availableOrganicFertilizers_Results_List) String() string {
	str, _ := text.MarshalList(0xab49546abd2a478a, s.List)
	return str
}

// FertilizerService_availableOrganicFertilizers_Results_Future is a wrapper for a FertilizerService_availableOrganicFertilizers_Results promised by a client call.
type FertilizerService_availableOrganicFertilizers_Results_Future struct{ *capnp.Future }

func (p FertilizerService_availableOrganicFertilizers_Results_Future) Struct() (FertilizerService_availableOrganicFertilizers_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_availableOrganicFertilizers_Results{s}, err
}

type FertilizerService_mineralFertilizer_Params struct{ capnp.Struct }

// FertilizerService_mineralFertilizer_Params_TypeID is the unique identifier for the type FertilizerService_mineralFertilizer_Params.
const FertilizerService_mineralFertilizer_Params_TypeID = 0x9ead0b36096d9073

func NewFertilizerService_mineralFertilizer_Params(s *capnp.Segment) (FertilizerService_mineralFertilizer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Params{st}, err
}

func NewRootFertilizerService_mineralFertilizer_Params(s *capnp.Segment) (FertilizerService_mineralFertilizer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Params{st}, err
}

func ReadRootFertilizerService_mineralFertilizer_Params(msg *capnp.Message) (FertilizerService_mineralFertilizer_Params, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizer_Params{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizer_Params) String() string {
	str, _ := text.Marshal(0x9ead0b36096d9073, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizer_Params) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FertilizerService_mineralFertilizer_Params) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizer_Params) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FertilizerService_mineralFertilizer_Params) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

// FertilizerService_mineralFertilizer_Params_List is a list of FertilizerService_mineralFertilizer_Params.
type FertilizerService_mineralFertilizer_Params_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizer_Params creates a new list of FertilizerService_mineralFertilizer_Params.
func NewFertilizerService_mineralFertilizer_Params_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizer_Params_List{l}, err
}

func (s FertilizerService_mineralFertilizer_Params_List) At(i int) FertilizerService_mineralFertilizer_Params {
	return FertilizerService_mineralFertilizer_Params{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizer_Params_List) Set(i int, v FertilizerService_mineralFertilizer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizer_Params_List) String() string {
	str, _ := text.MarshalList(0x9ead0b36096d9073, s.List)
	return str
}

// FertilizerService_mineralFertilizer_Params_Future is a wrapper for a FertilizerService_mineralFertilizer_Params promised by a client call.
type FertilizerService_mineralFertilizer_Params_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizer_Params_Future) Struct() (FertilizerService_mineralFertilizer_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizer_Params{s}, err
}

type FertilizerService_mineralFertilizer_Results struct{ capnp.Struct }

// FertilizerService_mineralFertilizer_Results_TypeID is the unique identifier for the type FertilizerService_mineralFertilizer_Results.
const FertilizerService_mineralFertilizer_Results_TypeID = 0x82a3c6bf1cc5ad84

func NewFertilizerService_mineralFertilizer_Results(s *capnp.Segment) (FertilizerService_mineralFertilizer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Results{st}, err
}

func NewRootFertilizerService_mineralFertilizer_Results(s *capnp.Segment) (FertilizerService_mineralFertilizer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_mineralFertilizer_Results{st}, err
}

func ReadRootFertilizerService_mineralFertilizer_Results(msg *capnp.Message) (FertilizerService_mineralFertilizer_Results, error) {
	root, err := msg.Root()
	return FertilizerService_mineralFertilizer_Results{root.Struct()}, err
}

func (s FertilizerService_mineralFertilizer_Results) String() string {
	str, _ := text.Marshal(0x82a3c6bf1cc5ad84, s.Struct)
	return str
}

func (s FertilizerService_mineralFertilizer_Results) Fert() (Params_MineralFertilization_Parameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_MineralFertilization_Parameters{Struct: p.Struct()}, err
}

func (s FertilizerService_mineralFertilizer_Results) HasFert() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_mineralFertilizer_Results) SetFert(v Params_MineralFertilization_Parameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewFert sets the fert field to a newly
// allocated Params_MineralFertilization_Parameters struct, preferring placement in s's segment.
func (s FertilizerService_mineralFertilizer_Results) NewFert() (Params_MineralFertilization_Parameters, error) {
	ss, err := NewParams_MineralFertilization_Parameters(s.Struct.Segment())
	if err != nil {
		return Params_MineralFertilization_Parameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_mineralFertilizer_Results_List is a list of FertilizerService_mineralFertilizer_Results.
type FertilizerService_mineralFertilizer_Results_List struct{ capnp.List }

// NewFertilizerService_mineralFertilizer_Results creates a new list of FertilizerService_mineralFertilizer_Results.
func NewFertilizerService_mineralFertilizer_Results_List(s *capnp.Segment, sz int32) (FertilizerService_mineralFertilizer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_mineralFertilizer_Results_List{l}, err
}

func (s FertilizerService_mineralFertilizer_Results_List) At(i int) FertilizerService_mineralFertilizer_Results {
	return FertilizerService_mineralFertilizer_Results{s.List.Struct(i)}
}

func (s FertilizerService_mineralFertilizer_Results_List) Set(i int, v FertilizerService_mineralFertilizer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_mineralFertilizer_Results_List) String() string {
	str, _ := text.MarshalList(0x82a3c6bf1cc5ad84, s.List)
	return str
}

// FertilizerService_mineralFertilizer_Results_Future is a wrapper for a FertilizerService_mineralFertilizer_Results promised by a client call.
type FertilizerService_mineralFertilizer_Results_Future struct{ *capnp.Future }

func (p FertilizerService_mineralFertilizer_Results_Future) Struct() (FertilizerService_mineralFertilizer_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_mineralFertilizer_Results{s}, err
}

func (p FertilizerService_mineralFertilizer_Results_Future) Fert() Params_MineralFertilization_Parameters_Future {
	return Params_MineralFertilization_Parameters_Future{Future: p.Future.Field(0, nil)}
}

type FertilizerService_organicFertilizer_Params struct{ capnp.Struct }

// FertilizerService_organicFertilizer_Params_TypeID is the unique identifier for the type FertilizerService_organicFertilizer_Params.
const FertilizerService_organicFertilizer_Params_TypeID = 0xd945095e4d1d3ad4

func NewFertilizerService_organicFertilizer_Params(s *capnp.Segment) (FertilizerService_organicFertilizer_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Params{st}, err
}

func NewRootFertilizerService_organicFertilizer_Params(s *capnp.Segment) (FertilizerService_organicFertilizer_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Params{st}, err
}

func ReadRootFertilizerService_organicFertilizer_Params(msg *capnp.Message) (FertilizerService_organicFertilizer_Params, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizer_Params{root.Struct()}, err
}

func (s FertilizerService_organicFertilizer_Params) String() string {
	str, _ := text.Marshal(0xd945095e4d1d3ad4, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizer_Params) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FertilizerService_organicFertilizer_Params) HasId() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizer_Params) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FertilizerService_organicFertilizer_Params) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

// FertilizerService_organicFertilizer_Params_List is a list of FertilizerService_organicFertilizer_Params.
type FertilizerService_organicFertilizer_Params_List struct{ capnp.List }

// NewFertilizerService_organicFertilizer_Params creates a new list of FertilizerService_organicFertilizer_Params.
func NewFertilizerService_organicFertilizer_Params_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizer_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizer_Params_List{l}, err
}

func (s FertilizerService_organicFertilizer_Params_List) At(i int) FertilizerService_organicFertilizer_Params {
	return FertilizerService_organicFertilizer_Params{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizer_Params_List) Set(i int, v FertilizerService_organicFertilizer_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizer_Params_List) String() string {
	str, _ := text.MarshalList(0xd945095e4d1d3ad4, s.List)
	return str
}

// FertilizerService_organicFertilizer_Params_Future is a wrapper for a FertilizerService_organicFertilizer_Params promised by a client call.
type FertilizerService_organicFertilizer_Params_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizer_Params_Future) Struct() (FertilizerService_organicFertilizer_Params, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizer_Params{s}, err
}

type FertilizerService_organicFertilizer_Results struct{ capnp.Struct }

// FertilizerService_organicFertilizer_Results_TypeID is the unique identifier for the type FertilizerService_organicFertilizer_Results.
const FertilizerService_organicFertilizer_Results_TypeID = 0xcf94305221c00752

func NewFertilizerService_organicFertilizer_Results(s *capnp.Segment) (FertilizerService_organicFertilizer_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Results{st}, err
}

func NewRootFertilizerService_organicFertilizer_Results(s *capnp.Segment) (FertilizerService_organicFertilizer_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FertilizerService_organicFertilizer_Results{st}, err
}

func ReadRootFertilizerService_organicFertilizer_Results(msg *capnp.Message) (FertilizerService_organicFertilizer_Results, error) {
	root, err := msg.Root()
	return FertilizerService_organicFertilizer_Results{root.Struct()}, err
}

func (s FertilizerService_organicFertilizer_Results) String() string {
	str, _ := text.Marshal(0xcf94305221c00752, s.Struct)
	return str
}

func (s FertilizerService_organicFertilizer_Results) Fert() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	p, err := s.Struct.Ptr(0)
	return Params_OrganicFertilization_OrganicMatterParameters{Struct: p.Struct()}, err
}

func (s FertilizerService_organicFertilizer_Results) HasFert() bool {
	return s.Struct.HasPtr(0)
}

func (s FertilizerService_organicFertilizer_Results) SetFert(v Params_OrganicFertilization_OrganicMatterParameters) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewFert sets the fert field to a newly
// allocated Params_OrganicFertilization_OrganicMatterParameters struct, preferring placement in s's segment.
func (s FertilizerService_organicFertilizer_Results) NewFert() (Params_OrganicFertilization_OrganicMatterParameters, error) {
	ss, err := NewParams_OrganicFertilization_OrganicMatterParameters(s.Struct.Segment())
	if err != nil {
		return Params_OrganicFertilization_OrganicMatterParameters{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FertilizerService_organicFertilizer_Results_List is a list of FertilizerService_organicFertilizer_Results.
type FertilizerService_organicFertilizer_Results_List struct{ capnp.List }

// NewFertilizerService_organicFertilizer_Results creates a new list of FertilizerService_organicFertilizer_Results.
func NewFertilizerService_organicFertilizer_Results_List(s *capnp.Segment, sz int32) (FertilizerService_organicFertilizer_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FertilizerService_organicFertilizer_Results_List{l}, err
}

func (s FertilizerService_organicFertilizer_Results_List) At(i int) FertilizerService_organicFertilizer_Results {
	return FertilizerService_organicFertilizer_Results{s.List.Struct(i)}
}

func (s FertilizerService_organicFertilizer_Results_List) Set(i int, v FertilizerService_organicFertilizer_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FertilizerService_organicFertilizer_Results_List) String() string {
	str, _ := text.MarshalList(0xcf94305221c00752, s.List)
	return str
}

// FertilizerService_organicFertilizer_Results_Future is a wrapper for a FertilizerService_organicFertilizer_Results promised by a client call.
type FertilizerService_organicFertilizer_Results_Future struct{ *capnp.Future }

func (p FertilizerService_organicFertilizer_Results_Future) Struct() (FertilizerService_organicFertilizer_Results, error) {
	s, err := p.Future.Struct()
	return FertilizerService_organicFertilizer_Results{s}, err
}

func (p FertilizerService_organicFertilizer_Results_Future) Fert() Params_OrganicFertilization_OrganicMatterParameters_Future {
	return Params_OrganicFertilization_OrganicMatterParameters_Future{Future: p.Future.Field(0, nil)}
}

type Service struct{ Client *capnp.Client }

// Service_TypeID is the unique identifier for the type Service.
const Service_TypeID = 0xbfda1920aff38c07

func (c Service) ManagementAt(ctx context.Context, params func(geo.LatLonCoord) error) (Service_managementAt_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbfda1920aff38c07,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:Service",
			MethodName:    "managementAt",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 16, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(geo.LatLonCoord{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return Service_managementAt_Results_Future{Future: ans.Future()}, release
}
func (c Service) Info(ctx context.Context, params func(common.Identifiable_info_Params) error) (common.IdInformation_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(common.Identifiable_info_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return common.IdInformation_Future{Future: ans.Future()}, release
}

func (c Service) AddRef() Service {
	return Service{
		Client: c.Client.AddRef(),
	}
}

func (c Service) Release() {
	c.Client.Release()
}

// A Service_Server is a Service with a local implementation.
type Service_Server interface {
	ManagementAt(context.Context, Service_managementAt) error

	Info(context.Context, common.Identifiable_info) error
}

// Service_NewServer creates a new Server from an implementation of Service_Server.
func Service_NewServer(s Service_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(Service_Methods(nil, s), s, c, policy)
}

// Service_ServerToClient creates a new Client from an implementation of Service_Server.
// The caller is responsible for calling Release on the returned Client.
func Service_ServerToClient(s Service_Server, policy *server.Policy) Service {
	return Service{Client: capnp.NewClient(Service_NewServer(s, policy))}
}

// Service_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func Service_Methods(methods []server.Method, s Service_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbfda1920aff38c07,
			MethodID:      0,
			InterfaceName: "model/monica/monica_management.capnp:Service",
			MethodName:    "managementAt",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ManagementAt(ctx, Service_managementAt{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb2afd1cb599c48d5,
			MethodID:      0,
			InterfaceName: "common.capnp:Identifiable",
			MethodName:    "info",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Info(ctx, common.Identifiable_info{call})
		},
	})

	return methods
}

// Service_managementAt holds the state for a server call to Service.managementAt.
// See server.Call for documentation.
type Service_managementAt struct {
	*server.Call
}

// Args returns the call's arguments.
func (c Service_managementAt) Args() geo.LatLonCoord {
	return geo.LatLonCoord{Struct: c.Call.Args()}
}

// AllocResults allocates the results struct.
func (c Service_managementAt) AllocResults() (Service_managementAt_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{Struct: r}, err
}

type Service_managementAt_Results struct{ capnp.Struct }

// Service_managementAt_Results_TypeID is the unique identifier for the type Service_managementAt_Results.
const Service_managementAt_Results_TypeID = 0xf32d7a3fdc567bdb

func NewService_managementAt_Results(s *capnp.Segment) (Service_managementAt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{st}, err
}

func NewRootService_managementAt_Results(s *capnp.Segment) (Service_managementAt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Service_managementAt_Results{st}, err
}

func ReadRootService_managementAt_Results(msg *capnp.Message) (Service_managementAt_Results, error) {
	root, err := msg.Root()
	return Service_managementAt_Results{root.Struct()}, err
}

func (s Service_managementAt_Results) String() string {
	str, _ := text.Marshal(0xf32d7a3fdc567bdb, s.Struct)
	return str
}

func (s Service_managementAt_Results) Mgmt() (Event_List, error) {
	p, err := s.Struct.Ptr(0)
	return Event_List{List: p.List()}, err
}

func (s Service_managementAt_Results) HasMgmt() bool {
	return s.Struct.HasPtr(0)
}

func (s Service_managementAt_Results) SetMgmt(v Event_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMgmt sets the mgmt field to a newly
// allocated Event_List, preferring placement in s's segment.
func (s Service_managementAt_Results) NewMgmt(n int32) (Event_List, error) {
	l, err := NewEvent_List(s.Struct.Segment(), n)
	if err != nil {
		return Event_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Service_managementAt_Results_List is a list of Service_managementAt_Results.
type Service_managementAt_Results_List struct{ capnp.List }

// NewService_managementAt_Results creates a new list of Service_managementAt_Results.
func NewService_managementAt_Results_List(s *capnp.Segment, sz int32) (Service_managementAt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Service_managementAt_Results_List{l}, err
}

func (s Service_managementAt_Results_List) At(i int) Service_managementAt_Results {
	return Service_managementAt_Results{s.List.Struct(i)}
}

func (s Service_managementAt_Results_List) Set(i int, v Service_managementAt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Service_managementAt_Results_List) String() string {
	str, _ := text.MarshalList(0xf32d7a3fdc567bdb, s.List)
	return str
}

// Service_managementAt_Results_Future is a wrapper for a Service_managementAt_Results promised by a client call.
type Service_managementAt_Results_Future struct{ *capnp.Future }

func (p Service_managementAt_Results_Future) Struct() (Service_managementAt_Results, error) {
	s, err := p.Future.Struct()
	return Service_managementAt_Results{s}, err
}

const schema_93337c65a295d42f = "x\xda\xccZ\x0ft\x15\xe5\x95\xbfw\xe6=\x86\x00\xe1" +
	"\xe5cB\x83\x11x\x80PL@\x84\x84\x96\xc2\xa9\x0d" +
	"\x09\x09\x10\x96H&\x0fTX\xb1L\xde\xfb\xf22\xfa" +
	"\xde\xcccf^B\xac\x94\xc2j+\x1ci\x8b\x8b\xdb" +
	"\xd2\xad]\xb5\xa5]\xc0V\xb1\xbaG8R\xc5-\xfe" +
	"\xad\xdbb\xf5\x9cjekm\xddV\xb7\xedY\xe9\xe9" +
	"\xdf\x15g\xcf\xfd\xe6\xbd7\x93\x97\x80\x89\xba{\x96s" +
	"8\xf3r\xbfo\xbe\xb9\xdf\xfd\xee\x9f\xdf\xbd\xf7\x9b1" +
	"q\xb9\xb4(\xda4\x0d \xb1\x1e\xa3c\xbc\x9b\xbf}" +
	"j\xea\xa3O|}\x17\xb0%\x08\x10E\x05\xa0\xf1\x96" +
	"\x89{$@\xf5\xe0\xc4&@\xef\xa5O{G\x9ex" +
	"y\xcb\xcd\xa0\xcdG\xf4\xa2\x9f\xab\xe8\xa9~m\xc6\xb3" +
	"\x85\x99\xa7&\xde\x83\xea\x99\x89K\x00\xd4s\x13\xfb\x01" +
	"\xbd\xd3\x9f=\xda\xe8^e\xdd\x0c\xda\xc7Q\xf6\x12\xfb" +
	"\xb7\xebO\x9f|\xf44Dh\xf2\xf6X\x8b\xa4\xde\x19" +
	"S\x00\xd4\x03\xb1\xfb\x00\xbd\xdeo\x9c\xcdM\xdb\xff\x9f" +
	"_\x18v\xe9\x8e\xaa{P\xe5Us\x01\xd4[\xaah" +
	"\xe9_\xa5\xf3\x9f4^^\xb2\xdf\xe7T\xac\xf8F\xd5" +
	"\xf3\x12D\xbc\xdaq\x8fn\xba\xe8\xab\x87\xf7\x03\x9b#" +
	"y\x97\xbfp\xc7=\xfc\xa6\xc6\xbf\x07\xc0\xc6\xdfV\x1d" +
	"G5\xcah*\xb2\xcf!\xa0w\x1d\xff\xe8[\xab\xea" +
	"~\xbc\x1f\xd8b)\xd8\x1a`\xe3\xeb\xec\x19Tq\x12" +
	"1w\x8e\xad\x03\xf4\x96\xe0\x96o\xeaO<w\x07h" +
	"\xcdX\xe9\xdd\xdf\xf9\xdb\x1d\xb7\xfd\xdd\xed\x0f\xfa\xdf\x9d" +
	"<\xe9\x19Im\xa6\xc9\x8dWL\xfa\x99\x04\xe89_" +
	"\xccV|t\xfc\xb7\xbf\x16\x16\xe3\xce\xc9\xbbH\x8cw" +
	"N&1~q\xce]\xbfk\xf8\xa7\xbf\xdc\x0dl\x0e" +
	"\x06<F\xa34\xf1\xc4d\x1b\xd5\xd3\x93\xe9\xe7s\x93" +
	"\xe3\xc4\xe6\x89\x7f\xdf\xf6\xf3\x0f?\x9f\xfc\xfa\xb0\x92y" +
	"\xe3C\xe3$\xb5\xa2\xa6\x06@\x9d\\C\x92\xc1%\xff" +
	"0}\xff#\x87\x0e\x89M\x95\x84\x0a\xd8\x98\xaf9\x8b" +
	"\xea\xbe\x1a\xda\xd4\xde\x9a%\x80\xde\x93g\xc7|b\xd5" +
	"\x9d\x0f\x1f\x0a\xc9\xf0\xce\x1a!\xc3\x8d\xf3?qe\xed" +
	"\xce\xf6\xc3e_\x14S\xee\xae\xb9\x07\xd5cb\x99\x87" +
	"jh3{V\xd5\x9f\xb8~}\xfb\x91\xf0n_\xac" +
	"y\x99v\xfb\x171\xe1\xc0\xe4\x1d\xbf\xde\xfd\xea\xd3\xdf" +
	"\x01m\x09J\xde\x9f\xd7-\xff\xfc\xc1\xa5\x15/\xf9\xab" +
	"\xd5M\x99$\xa9\xedSh\xb5\xb6)\xc4~\xfe\x17}" +
	"\xdf\xfb\xc7#\xed\xf7\x81\xb6\x18\xa3\x01\xffb\xf2\xd1)" +
	"\x0d\x92zz\x8a\x10\xcd\x94\xabI4'/\x1e\xb8z" +
	"\xc3\xb2G\x1f\x006O\xf2\"\xfd+\x07\xbe[\x9f\xfe" +
	"!m\xb6\xbd\xf6\x01T\xf5ZZwsm\x1a\xd0\x9b" +
	"/\xfdl\xed\x8cU\x8b\xbf;D-\xf6\xd5\xeeB\xf5" +
	"\xa0\x98yw\xed\x97\x00\x83\xd3\xd5\xe6\xa3T.\xee\xd7" +
	"k\xc7Ij\xf4bR\xc49\x17\x93\xda~\xa3\xf7\xf5" +
	"\xe4\xbfVU\x1d\x03m\x1eb\xc0B\xab\"!6\x9e" +
	"\xbcx\x17\xaa/^Lk\x9f\xbe\x98vw\xaen\xef" +
	"\xce\x1f\xb2\x09\xc7\x815\x87>\x14\x95i\xe9\x8fL\xed" +
	"\x96\xd4\x8dSi\xf2\x86\xa9\xf7\x01\xfel\xd1\xe7\xbfx" +
	"\xdd\xc2\xa5\xc7\xb5%X<\x9e\xdfN}\x8d\xc4\xca\xa6" +
	"\x91X\xaf:\xf9o\xdf\xea\xff\xcc\x96\x13a\xb9/\x9a" +
	"&\xe4\xbeAL8r\xe4\xc9k\xbe\xf9\xe6C\x83&" +
	"\xdc2\xedM\x9apHL\xb8\xee\x9a\x1b&~\xea\xc8" +
	"\xbf|\xaf\x8c\xf7\xc9\x11\x05I\xc4\xd3\xf6 \xa0zf" +
	"\x1a1\xae\xdc\xf6\xfb\xfbf\\\xf4\xf2\xa3\xc0\xe6\xc8\x83" +
	"\xc4\xb7t\xfa\xf5\xa8vL'\xae\xdb\xa7\xafR\xf3\xd3" +
	"k\x00\xbcW\xaa\x7f\xa3N\xad\xbc\xf5\x89a5\x96O" +
	"\xff\x0a\xaa\xdb\xc5\x1b\x03\xd3I\x84\x97]{\xff\x1bg" +
	"\xaf\xfb\xdb'\xc9\xb8\xe4@\xdb\xc5\x8e/\x8awK\xea" +
	"\x15q\x9a\xbc4N\x93\xa7\xae|\xee\xd5\xdb\xaf<\xf9" +
	"$--\x97/\xfdb|\x9c\xa4\xfeA\xcc~+\xfe" +
	"+@\xef\xed\xa3_\xae\x89}m\xd5S\xc3\xef\xf0\xe9" +
	"\x19_\xa1\x1d\xbe4\x83vXZj\x90M\x0a&\x96" +
	"\xce\xecF\xb5c\xe6\xb7@\x0e\x96\xd0\xe6`hZ[" +
	"D\x91\x11\x1b\x9f\x9e\xb9\x09\xd533\x97\x004Fg" +
	"}\x81\x14\xb4Kylf\xd7\xc2\xfd?\x0c\x9f\xc1\x15" +
	"\x97\x08\x8f\xba\xf9\x12:\x83\xfb\xcf\xbe\xb1\xf7\xbe\xca\xba" +
	"\x1f\x0d\xd1\xcb\xed\x97\xdc\x88\xea\xbeK\xe8\x85\xbd\x97\xcc" +
	"\xa5\xb5J\x0eT\x9b\x8fcC[\x97h\x8e>\xfb5" +
	"T\xb7\xcf\xae\x01h\xdc={\x09y\xa1\x92\xa1\x0dw" +
	"\x08\xe7>|\x1c\xd5\xc9s\xc9m\xcc\x9cK\xdb\x7fa" +
	"\xd9\xb4\x8e\xeb*\xda^\x0a3\xba}\xae\xf0Y\x07\xe6" +
	"\x12\xa3\x7f\xfd\x9b\xc9\xbf\x7f\xd6]\xf9\xd3\xe1Eyl" +
	"\xaeM\xa2<%\xa6Ns_\xfc\xe8\x0fv\xbe\xfc\x8b" +
	"!\xca\xf2\xfa\xdc\xe3\xa8\x9e\xa3\xaf6F/\xfd\x1c\xaa" +
	"\x1f\xa9#m\xf9V\xf3\x1d\x0f|\xe6O\xad\xbf\x1c\xe2" +
	"\x86\xe7\xd4\x1dG\xf5\x8a:q\xf8u\xe4\xb1^e\xbf" +
	"SOu\xac~}\x88\xb9_Q\xf78\xaa\x1b\xc4L" +
	"\xad\xeeO\x80\xde\x83\xbb\xdf\x92Z\x1f\xff\xc9\x9b\x10\xb2" +
	"\x9esuB\xf7g\xd6\x13\x8f?\xfd\xd4U\xaf4\xdd" +
	"x\xd9\xef\x81]V\xdaos\xfd$\x9a\xb0QLx" +
	"\xce\x9e7\xb1\xf3\xb3m\x7f \x81\x04;\xf2\x85\xbd\xbb" +
	"\xfeMT\x0f\xd6\x0b\x9fQO\xd2;p\xc7\xd9\xb5\xb5" +
	"M\x0f\xfd1,\xbds\xf5g\xc5\xe7\xe6\xd1j\x92\xf2" +
	"\xf0\x91\xcb\x9f\x8f\xfe\x99\x0e#Z~\x18\xcd\xf3\xdeD" +
	"u\xf3<\xfa\xb9q\x9e\xf0k\x97,;\xf6\xec\xdb\xaf" +
	"\xbc\xfeW\xf2\x82r \x13\xb1\x8d\x93\xf3\x9fA\xf5\xcc" +
	"|\xfa\xf9\xd2|\x11 \xfe\xeb\xb6\xf1\xdf\xe1\xa9\xf4\xb9" +
	"!:\xf4\x87\xcb\x8e\xa3Z\xb9\x80\xa6V,X%\x81" +
	"\x07{\xbd\xac\x95\xe2\x99\xcb\xb3V\x85i$\xf5\xcb\xb3" +
	"\x16=>\x99\xd5M=\xcd\xb3\xdct\x17$\xf5\x9c\x99" +
	"[\xb6\x92\xdb\xae\x911n\xe4v\x82\xdb}F\x92/" +
	"\xc8\x1a&\xb7\xf5L00\xbb\x8b;\xf9\x8c\xeb\x00h" +
	"\x119\x02\x10A\x00VY\x0f\xa0\x8d\x95Q\xab\x960" +
	"\xd6\xc3m\x17\xab\x02\xfb\x06\xc4*\xc0\x12\x07\xd1\x0br" +
	"\xd0\xa9\xdbz\xd6Y\xb0\"\xef\xba\x8aa\xa6\xb5\x09\x88" +
	"!Ma\xb5\xa1\xe8]Y\x1f\x08\x8cU\xd4\xcb+\xd6" +
	"\xc66\x98\x86\x1bK\xe4xR\x1b[\xe2\xad\xae\x1b@" +
	"\xbbTF\xadUB\xc4j\xd2\x8bE\xcd\xe3\x10@[" +
	"+\xa3v\x8d\x84^2\xef\xba\x86\x99N\x80\x92\xe3I" +
	"\x9c\x08\xd8)#V\x05\x8b\x03\x12\x91\xa6u\xe8\xdb\x9a" +
	"\x1d\xd91\xb2FFw\x0d\xcb\xec\xd2]\xde\xc9\xed$" +
	"7]=\xcd\x01p<H8>\xb4\xd9\xb1#\xd9l" +
	"s\xde\xb5\xb2\xbak$\x13V\xbfa\xa6\x174\xf7\xa5" +
	"\x13\x96\x91Y\xcf\xb39\xe8D\xd4&\xf8{Adm" +
	"\x0f\x00h\xabe\xd4\xd6K\xc80\"6\xc3\xb4\xc3\x00" +
	"\xdaz\x19\xb5-\x122I\xaaF\x09\x80m~\x06@" +
	"K\xc9\xa8\xe5$\xf4\x1c\xcb\xc8\xb4\xf2\x9c\x8b\xbd+-" +
	"\xbb\xb9\x8f\xdbq=m\x98i\x9f[\xafQ\xfc\xfbq" +
	"\x13\x00x)}\xc0i7\x13\x16\xfa\x9f\xbf\xda\x88\x99" +
	")\xab\x1f\x15\x90P!\x88#\x18l\xef\x91\x9a\xbb\xad" +
	">\x1e\xe6s\xe8\xd6Gt\xce\xabu\xbbO\xe1\x8e\xab" +
	"\x8d\xc50\x86\xa9\xe8\x0a\x10\x01\xab\xb8\xdd[a[\xb9" +
	"\x0d\x8e\x9e\x06\xe4\xde\xba\x9c\xbbB\xb7\xbb-4;\xd2" +
	"Y\xb7UwQ/\x9e6\"\xab[S8\xed\xc5\xa5" +
	"\xd3f\x8bv\x01h\x0be\xd4>.\xa1\xc7\xb7\xe5," +
	"\xdb\xe5)\xa0c\x05)\x8adJ\x96\xbff\x07\xfa+" +
	"\xea\x80U\x01\x03e\xfa;n\x94\x16\xa4\xf7\xe9FF" +
	"\xef\xce\xf0uvZ7\x8dd0\xc3\x99-\xa4\x80\xce" +
	"\x08e\xd6\x11\xd8b\x93\xbf\x02i\xc7rq\xde\xc7\xea" +
	"\x89Ov\xb4\x01\x00%v\xa8\x16\x00ev7=\"" +
	"\xec\x00=\xa2l\xdf,\x00\x1c\xc3v\xd3Ca;\xe9" +
	"1\x96\x0d\xd0\xa3\x82m\xa5\xc78f\xd0c<\xd3\xe9" +
	"\x85\x09l\xe3$\x00\xacd\x1a\x11'\xb2vz\xc4X" +
	"\xf3,\x80\x98\xde\x9bq\xe2z\xe6F\xcb\x94uS\xd6" +
	"s\xb2\xee(\xba\xd3\xab${\x16+\xc9\xdc\"%\x99" +
	"kP\x92\xb9F\xc5\xcc\xdd \x9b\x0e\xe6\x95\xbcn*" +
	"y\xddQ\xf2\xa6Q\xda\xec\x98\x91:\x02\xb2\x09\xb2l" +
	"\xf0\xadA\xecw\xda&\xb1\xdf\x8bZ\xc4~\xd9,\x00" +
	"/W0D\x90\xd3|G\xb7aeu\xc7Q2\xba" +
	"1\xc2\x93+|\xb0\xec\x94\x84\x99\x17\x89\x1d\xba\xebr" +
	"[L\xe4.\xb7\x1d\x9f\xa1\xc5EW\xa3n\xc6{\x00" +
	"\x12[P\xc6D\x06\xc9B}\x05T\x0d\xb4\x01\x12\xbd" +
	"Dw10Ru\xab\xa0\xe7\x88~\x13\xd1e\xb9\x1a" +
	"e\x02H\xf8\x15\x80\xc4MD\xbf\x95\xe8\x91H5F" +
	"(\x09\xc2\xc7\x01\x12\xb7\x12}?\xd1\xa3\xd1j\x8c\x02" +
	"\xa8\xfb\x04}?\xd1\xef\"\xfa\x981\xd58\x06@\xbd" +
	"\x13\xf7\x00$\xee\"\xfa\xbdDW\x94j\x8a<\xea!" +
	"A\xbf\x97\xe8\x0f\x13}\xec\xd8j\x1cK\xc8\x1eo\x04" +
	"H<H\xf4\xc7\x88^QQ\x8d\x15\x00\xea\x09A\x7f" +
	"\x84\xe8O\x11}\xdc\xb8j\x1c\x07\xa0\x9e\xc2\xc3\x00\x89" +
	"\xa7\x88\xfe\x02\xd1\xc7\x8f\xaf\xc6\xf1\x84z\x05\xfd\x05\xa2" +
	"\xbfJ\xf4\x09\x13\xaaq\x02\x80zF\xac\xf3\x0a\xd1\x7f" +
	"\x8d\x12z\xba\x95m\xb5\x07:t$\xb1\xae\xb0LW" +
	"\xe1\xa6[r$\xba\x95\xbdr\xf5\xe2\x15\x16\xc4M\xb7" +
	"\x9c\xbe\xaeqX:\x19\xb1\x8eY#E\x8bqy\xf0" +
	"`\"c\xf5\xb7J<\xb9\xc2\xe2==\x09W7S" +
	"\xba\x9d\x82\xf0\x8c\x95\xba\xe3^`FN\xb7\xdd\xe6u" +
	"\x1d\xeb\xd1j^\xd7A\xab\xc1y\xc6h\x9d\xd0X\x92" +
	"\xe2\x84a5C\x93\xff\xda\xb0\x03\xf4N\xf9j\x09\xcc" +
	"X\xfd\xeb\xadDGKl\xd0{C\x87\x07\xbdm\xae" +
	"\xb0L\xb2\x04h\xb2\x85\xfa\x0eq\xcd\xef\x1f\x04\xf8\xc6" +
	"2\x08\x02\xd4\x06\x10@6R8\x01$\x9c\x10\xfaf" +
	"\xe4\x82\xdfl_\xdb\x15o\xd5]\xee\x90AU\x97\x16" +
	"\xdd\xbe\x0c@\xdb&\xa3vs`Ml\xe7\x8d\x00\xda" +
	"gd\xd4n\x0b\xc5\xbb\xdd\xd7\x03h\xb7\xca\xa8\xed\x0f" +
	"\xec\x88\xedk\x01\xd0n\x93Q\xfbr`D\xec\x0e\x1b" +
	"@\xdb/\xa3v\x97\x84M~@\xc3*o/\x9b%" +
	"\xdf\xfb\xce\x7f|\xa9\xe8\xed\xb9ng\x0c\xee\xb8\xd0\x94" +
	"8\xdf\x94\x0c\xf1\xeb&,\x88\x0d?aG\xafn\xf7" +
	"q\xc7=\xef\xab\xabu\x88\x9foFQl\xcaH|" +
	"V\xc7\xe0\xf3\x11\x87N\xf8\x0cCY\x16\xc3M^\xd1" +
	"s\x81l;a\x84\xd45L\xcc$\xc9\xcf\x97Q\xfb" +
	"\x98\xe4\xeb\x9b\xe1\x1a\x16\xa09\x14\xd85\xe9Y+\x1f" +
	"\xb2\xb4Q\xb9\xf7\xd5\xbe\x88\x16P\x80\x8fS\x84\xe7\xa4" +
	"\x00c\xc5\x91\xb2n\xe1\xe2+o\x07\xf0\xd26\xe7f" +
	"\x87n\x82\x92\xb7\xb9Wp\xee\x9dh[\xa9|\xd25" +
	",4\xdf\x7fx\xee(W\xf2\xd1\x86\xe7\xc2\x96\xd6\x1b" +
	"\x99\x8cR\xd8H\xa4\x84K*\x1b\x02\xf3\x88\xa7x\xce" +
	"\xed\x1d\x06}\xfdo@\x0c\x01\xd7e\xd7\x09\x9bjK" +
	"\x81\x97\xd9\x12\xee\xe0\xa6k\x1b\xdc\x09`o)\x03*" +
	"\xc0\xdeQib\xbbm\x1bi?f\x96\xc2$\x0a\xa3" +
	"\x0e\xa9\xdb\xe1@\xb5JF\xfd\x11\"~\xccG\xe9\x9e" +
	"i\xb8\xb6\xee\xf2\x15\xe8\xfb1[\x8f\x0drcN>" +
	"\xd3s\x81\xe1Q1\\T\xc0\"\xaa$P\x19\x17\x18" +
	"\x90\x98\x9eR:\xbf\x03\x84\xbc\xbf*\xa3\xf6\xcfE\xa6" +
	"\x11\xd9A\x02\xd9\xf7\xca\xa8=L\x9e\x08\xabQBd" +
	"\x0f\x915=(\xa3\xf6\x18y\"\xa9\x1aeDvb" +
	"\x13\x80\xf6\x88\x8c\xdaS\xe4\x89\xe4j\x8c \xb2S\xb4" +
	"\xe7\xa7d\xd4^\xa0X\x1e\xa9\xc6(\";\xfd<\x80" +
	"\xf6\x13\x19\xb5_J%\\j!\xb9t\x87\xdb}q" +
	"\xdf\xa1#H\x02\xb7&m+\xd7\x9e\xcd\xe9R\xd2]" +
	"g\xae\xceg\xf3N\x8b\x9e\xd1\xcdd8\x15I\x06\xd8" +
	"\x19c\x01\xc6\x06\x8c\xc6h\x09\x9b;F*\xcfW\x83" +
	"\xcc\xb7\x96\xde\xb1\x0az\x84EE\x8a\xd9\xabC\xc3Y" +
	"}[\x17\xbd&\xe5y\x17OZ}\xdc^i\xeb\xbe" +
	"\x1d\x8e2\x0dh\xeb\xa3\xdf\x9d\xbd\xdc\xb4\xe2\x09\xb7`" +
	"5U\xc2\xfc\xc9+!\xb29]\x02\xe1\xcd\\#\x10" +
	"\xed\xb45\x00\x1e\xcfr;\xcd\xcd$e\x03=\x19\xab" +
	"\x9f\xdb\x86\x09\x98\xf6t\xd3\xed\xe5\x8e\xe1\x08S\xd2\xdd" +
	"\xbcm\xb8\x03a\xb3z\x17\xf3\xcd\xe8\xa6+\x0cH\xa0" +
	"\xba)\x82\x89f\x1fV/\xad\x17L,j\x10L\xd4" +
	"5\x08X=s\x99\x80\xd5\x175\x00\xc4l\xcbrc" +
	"\x19\xae\xf7\xc4\x9d^\xcbr\xe3=v\xdep\x9b\x1c\xd7" +
	"\xce\xdf\xe0\xc6\x9d|Z\xb7G\xa7\x96\xc3\xa1P2Z" +
	"\x0c\x15\xa5Y\xc5\xe3\xa1\xcab\xe5&\xaf\x88R\xe5r" +
	"\x98Z\xfcIn\x7fB\xc9\x0e\xdb\xc8\xc5/\x97Q[" +
	"\x1b\xb8\xfdv\xa2\xb5\xca\xa8u\x92F/\xf75\xba\xc3" +
	"\x0e\x92\xe5\xa6\x9c`\x10\xab\x82O\x0f\x1f\x06\x0c3i" +
	"\xd99\xcb\x862\x95\x1d\x8d^\xac\x1f\xc8q(8\x8f" +
	"\x09\x9e\xe7{\x8fP\x82W\x89\xefx\x85p\xb5fP" +
	"\x8a\xe7r\xdb\xd43\x94\xe2\xc5\x82\xea\x11 \xc6\x04c" +
	"\xe1\xd1R)\xb90:\xaa\xc4}\xd8\\\xa1 l\x85" +
	"\xdbN(y/\x93w\xc9\xef\xb5\xd7\x86\x05^\x003" +
	"\x1d\xf5A\x9a\x1f\x08\xbct\xf0\xbe\xc0C +f\xea" +
	"Y>\x04q\x8d{\xbf(\xaf\xb3\x10\xf6\xcd\x95\x96@" +
	"|\x8a\x9e\x1d6\x8cTK\xb8#k\x98\xf4\"\xc6\x82" +
	"NL\x99D?\xc8\xc0\xfc\x81\x05\xb5\x0fVF]\xdc" +
	"\x89\xe53\x83\xd9\xa2h0AFm\xca\xbb\xe1\xa8Q" +
	"Y\x86\xde\xe3r[l8R\x85\"\x09\x14^I\x9b" +
	"-\xa3\xb6\x90\xd4K\x12\x19 \xbb\xac>\xb0\x968\xa7" +
	"W\xb1*h^\xf8\x1f\x8e\xa5\xf4\x01\xa7T\xe2\x19\x19" +
	"^Op;F\x02\xf1AN\x14\xc0\xfb\xef/\xfc`" +
	"\xe9\xc2\xb7\xdf\xfa\x0d\x16K\xac\x8c]\x0f\x12\xabP\xbc" +
	"\xe2\xcb\x103\xddfw9\x0a\\\xfa\xe2\xea\xafn|" +
	"\xf6\xf4}\x0f\x8c\xc2?\xfb6Gp\\6\xd3e\xa6" +
	"\xb5&dE\xc5\xe8\xdcq}\xe0\xb6\xb0`Y\x1bH" +
	"\x1e\x9d2j\xd7\x8a\xba_\xc65\xfat\xdb\xf7\x04\x0f" +
	"\xbe\x96\x1a\xdbu\xff\xce3E\xbd\xcdQ<h\xe5&" +
	"\xc4\x1c\xc3\x1d(\xca'F\xe1\x14\x99w\xf3\xb5\x8f\xce" +
	"\xfe\xfa\x97\xf6\xfeZ\x84\x87\xd1\xfa\x8d\xe1\xf0\xfa\x05\xfc" +
	"\xc6\x90\xcd\x91\x8b\x98\x15\xaa\x04\x16\xfd\x866+\\\xd5" +
	"\xa4\\8k\x88BW\xc1)+f\xef\xe2\xe0\xb7\xd5" +
	"\xf8\xde \xd3\x95\xad<\xab\x9b\xa9\xb2\xd8$\x02w\x89" +
	"g\x9d\xac\xf1Z\x19\xb5\xde \xb6\xf0\xae\xa0$\xe9\xa3" +
	"%\x00\x96%\xad\xed\x95Qs\x09-U\xf9hi+" +
	"\x1132j\xdb$\xdca\xfa\x9f\x1b\x94\xfc\x9e\xd7\x88" +
	"\xc2\xd0\x1a0\xee\x10\xa4\xc01 E\xc7\x8c6\xf6t" +
	"s\xb7\x9f\xcb\xdc,\x9a\x98\\\x16{\x84\x89E\xca3" +
	"\xa5R\xda\x0804\xa9k\xf2\xd3\xbe\x0bd{\x91w" +
	"\x93\xbfp\xc1\x97\"\x06\xbd6\xd6\xbe,h\x11\xb1\xb6" +
	"]A\xf3\x94\xb5\xb5\x04\x0d\x08\xd6\xbc'h(\xd0H" +
	"\xa9\xe1\xc6\x9a\x0f\x07\xed5\xd6v8hP\xb2\xf6\xc3" +
	"AO\x98u\xb4\x04\xbd%\xd6\xbe\xa9\x90\x17{\xc5\xe2" +
	"u\xa4P\xbd\x86\x02\xa2\x86RU\xbbH\x80\x1d\x85b" +
	"\x9eW\xd4\xff\"\xbc\xf4\x01\xbcWT\xac2\xf2\xba2" +
	"0\xea\x93wP\x9e\xa5\xa7\xb9WL9@\xb6\xcc\x11" +
	"\x0a\xb2\xad\x8f\xcb\xa6+z\x0bAo\x89]\x1f\xea+" +
	"\xb3M\x81\x97d\xac\xdek+B\x8a\x18a\x12O\x00" +
	"\xd6\x84_j\x14\x14mjI\xf5\x1f\"\x17s\xbf\x8c" +
	"\xda#\x81\xea\x1f\xab\x0fr\x82J\xc9\xf30\xd4Xc" +
	"'jA\xaa\x94\xdf!b\xa9q\xc9\x0e\xb6\x80T\x19" +
	"9G\xc4R\xbf\x96\xedm\x00\x89EeQ\xc4cy" +
	"\xd2\xbb\x9c\x8c\xdaM\x12\xb21\x0bE\x05\x8f\x0d\xec\x0a" +
	"\x0a&1w \xc7\x87\x02\xa0\x98a\xf6XX\xe5\xfd" +
	"\xf8e\xf9\x9dg?\xfd\xec\x0bE8\xa1\xbb;\x84\xce" +
	"s3.\xa2K\x11xL\x02\x09'Q\xa2\x907\x9b" +
	"\xdd\x84\xab\xa3\xed\xae\xebi\xd5\x07`\x08\xa4\x1bmY" +
	"\xc9*\xcfVG\xdc[*\x83B#?\xf6&\xd3\xa5" +
	"\xe3\"g\xb5\xd0\xaf\x1b-\x13\x1e|\xe7.\x01\xf0\xb7" +
	"\xb7\x08\x80\x9f\xdf#\x00~~\x93\x00\xf8[[D\xdd" +
	"\xdc8,\xea\xe6\xe21\xd6\x7fT0\xa3E\xd4\xcd\xf5" +
	"5\xa2n\xbe\xb9\x0b\xa0PR\xf2\xf4r\xbb(T\x83" +
	"@\x1fb\x17\x9e\x11R\xe1\x1dnA\xaf\xada\xd5\xde" +
	"\xcb\x0eo;\xe6\xb0\xb6\xb3\xa3\xd0\xda\xf2\x1c\xee^\xa5" +
	"g\xf2\x9c\xc2\xad\xa3\xf7\xf1\x84\xab\xbb\x94>\x8d\xaaX" +
	"\x13\xeeS\x89\xe6\x1c\x05\xf2\xd2m\x1f\x86\xdd^\xb1#" +
	"\x04\x0a\xcf\xe6\xb4K\xe5\x08\xa2(\x8cW\x88\x82\xf3\x04" +
	"\x9411E\x14\xc0\xfd\xd6\x95:Y\xd0\xa7\x10}6" +
	"\x16\xd2e\x09Q\x9d)\x0a\xe33\x88>\x1f\x0b\x19\xb3" +
	"\x8c\xa8\xd6\x09\xfa\xa5D_\x8c\x85\xa49\x02\xa0.\x12" +
	"\xeb,&\xfarQ\x00/\x14\xc6\xaf\xc0\xe3\x00\x89\xe5" +
	"D_+\x0a\xe0\x85\xc2x\xbb(P\xaf%\xfa5\xa2" +
	"\x00^(\x8co\xc05\xe2R\x94\x8c\x89-\xc4H\x85" +
	"_\x17\xdf\x8c\xdd\x00\x89k\x89\xdc\x8b\x12R8\xa8\x00" +
	"P9.\x0b\x97\xfb\xe9h\xd6\xf3ln=\xf6\xda\xdc" +
	"\xe9\xb52\xa9P\x16\xee7\xd6\xd6s\xcc\xe6\xae6\xcc" +
	"\x94\xa8\x1d\x97 \x97a\x8a&\"\xc4M\xb79qu" +
	"8\xcd\x1eJ\x7fl\xe3r\x91\xdenkL\xe9\x03\x9d" +
	"h\xf3\xa4\x91K\xe4\xb3\xe1\x06\x9c\xbemE\xde\xb69" +
	"\x9an\xab>\xd0i\xf3&\x7fJi\x82\xcb\xb3\xf4w" +
	"3v[}\xbcEwx\x8c\xd8.\x0dw\xeb\x0e\xf7" +
	"{z\xa1\xe2x\xf8`\xb1*8\xf5Bd+\xd5Q" +
	"Kq\xe9\xbdt}\xc9\x957\xf9\xe5#\xa1[\xa5+" +
	"D\x17*^.\x0b`o\xd1\xdd^\xb6,\x88\xd3e" +
	"yi\x90N\x95\x16/\xe3\xf4\xfd{\xb1\x0f\xba8\xde" +
	"\xd6\xc7\xe3\x84\xf9]Z\xb1\xaa\x00\x9c\x06\xb9\xc5\x94\xee" +
	"\xf2\x0b\xc0\x8a\xe8H\xb7\xd4\xe4\xefI\x08?\xb8\x09\x81" +
	"\x0d\xf16\xd3\xb5\x07\xb4)r\x14#\xc5\x0bJ\xa1\x8b" +
	"FG\xcf\x82\xc4\x8e*\x18-]\xc0\xc0\xe2\xd5\x08v" +
	"\xf0\xaf \xb1\x83\x0a@\xe9\xe2\x19\x16\xaf0\xb1\x03\xaf" +
	"\x81\xc4\x0e((\x95.\xf6a\xf1Z\x19\xdbKc{" +
	"\x15\x0c\xee\xd5a\xf1\x9e\"\xdby;Hl\xbb\x82r" +
	"\xe9\xfe\x0a\x16o\xdc\xb0\xad4\x96UJ~R*O" +
	"\xd5\xe2\"W[\x1e\x14\xb9\x06\xcd \x15k\xe2\xb6\xe3" +
	"O)\xe6\xa0Ry\x12J(}\xd0xY)\xa00" +
	"^\xee\xac9\x86?<\x88\xfa\xfe\xb2\"BVM\x86" +
	"\x99^\xb0bm\xa8\x80>K\xc4\xb6\x8az\x00%\x99" +
	"wc\x19\xde\xe3\x8e\xd0\xe3\xfb\x18\xb8\x88zJu\x98" +
	"K\xc5\xba[\xfd\x98i\xf81\x93\xfb1s\xb3\x1f3" +
	"7\xfb1s\xa3\x1f35?fj~\xcc\xd4\xfc\x98" +
	"\xa9\xb5\xfc\x7f\x8d\x92\xef\xb5*0\xc4\x05\x04\xb57\xbf" +
	"t\x12\xb3/P:\xb1\xect\xa1tR\xba\xd1SV" +
	":Q\xde-\x17\xf7k\x13\xa5\x81f\xb7\x80\xa4\xd0\x19" +
	"\x0eH\xcd\x960\x96Mg\xdd\xa0<\x12\xbaT5\xa8" +
	"<2f\x94\x82h\x8b\x91\x9f(+\xf7\xd7\x87\xeb\x12" +
	"E\x0f=+\xf0\xd0\xe7\x01\xa4\x8a\xcd{\x90yx\xf2" +
	"\xa6\x8f\x9d9\xf5\xc7\xdd\xe5\x89\xf6\x07|F]<\xee" +
	"\x94\x97n\x96\x05\x87t\xde\xb2\xe7{DP\xabu;" +
	"Fj]h2\xf80\x89\x1d\xb0\x01\xb4/\xcb\xa8}" +
	"\xa3\x90!#\"\xbb\x9b\x88w\xc9\xa8\xdd[\x04H\x00" +
	"\xec\xd0\x9eP\xe7!Rhw>t\x1c@{XF" +
	"\xed\xfb\x04\x8d\xaa\xfc&\xc3\xc9n\x00\xed1\x19\xb5\x1f" +
	"H\x08\xe0\x97\x8a\x9e&\xf5\xfb\xbe\x8c\xda\x8f\xa4\xff{" +
	"\xf4Q\xb0\xf0\xf5\xa0\x18Y>\xb8\x02\x1b\x8d\xc9\x83\xda" +
	"\xa6\xa1{\xcc\xa3\x97u\xf1\xe6H\"\xc7\x93~y\"" +
	"\xd4Wn\x18\xae\xafL\xc4\x9bd\xd4n\x0dusn" +
	"\xa9\x0f5\x9b\x8b\xdd\x9c\xdd]\xa1fsD\xf2\x05\xbd" +
	"oO\xd0W\x8e\x0bm\xc3Xp\xff\xd8\xb7\xe8x\x1f" +
	"\x81\xf0\xa2(by\xd3 \xb3/]i+\x98}2" +
	"\xef\xae\xb3\xd7\xf2\x1e@\x1a-\xdd~+\x8c\xfa\x17\x98" +
	":9\x96_;+\x9c\xcd\x88\xc2F(\\\x85\xae\x12" +
	"m\x11\xb7R.B\x117T\x86\xe22\x91Z!\xfe" +
	"\x96U\x14\xcf\x08\xfb\xcb,\xe1\xe2\xdfj\x10.\xfe\x0d" +
	"\xff:\xd1\xcf\x1b\x84\x8b\x7f\xa9V\xb8\xf8\xd3\xb5\"-" +
	"z\xda\xbfNt\xb2A\\':6K\\':\xea" +
	"_':\xe4_'\xba\x9b\xc6\xaa\xd8\x01\xfa\x8b\xb1}" +
	"\xf4\xd7$\xff\x8a\x92\xea_Q\xaaf\x03\xb4\xd8dQ" +
	"\x14\xc2\x0f1\x83\x1e5\xe2\x8a\x92\xa2;\xbd\xf1\xa4\x9e" +
	"\xcad\x95\xa4N\xff\x1d%\xa9\xe7\xe3\xa94Q\xd2\xfd" +
	"\xc9x\xaf\x95\xcad\xe5lR\xce:\x8ae$\xe39" +
	"\x83Fr\x06\xfdw\x94\x9c\x91\x8f\xe7\x8c|\xea\x06%" +
	"\x97\xe9\x8f\xe7,1fe\x15\xc7\x1a\x90\x1d'\xee\xe6" +
	"S\x99l\xbc\x9f\xf3\x94#\xf7;\xff\x13\x00\x00\xff\xff" +
	"c\x036\xeb"

func init() {
	schemas.Register(schema_93337c65a295d42f,
		0x82a3c6bf1cc5ad84,
		0x8460dac6abff7ed9,
		0x846f567433b186d1,
		0x8feb941d70f2a468,
		0x9437da695f7567e7,
		0x94aa9c195abf0a1a,
		0x94d32947f136655e,
		0x95cdc661a6600137,
		0x9ead0b36096d9073,
		0xa1f99f32eea02590,
		0xa363d226e178debd,
		0xa9a9bc941e963701,
		0xa9b89d473e06f2c7,
		0xaa49811a4e3e2c59,
		0xab49546abd2a478a,
		0xaec9e089e87f1599,
		0xaf49ab9bbe76e375,
		0xb2bf3a5557791bc1,
		0xb33447204cdf022c,
		0xb492838c7fed50b0,
		0xb91010c363e568a4,
		0xba0c11cf818d29fd,
		0xba3900305e908e31,
		0xbd608077a7cec156,
		0xbdb5eaa658c7abab,
		0xbeb6ab7b0e6b585e,
		0xbfda1920aff38c07,
		0xc6880d1c13ec14dc,
		0xc75b5ef2e9b05c2d,
		0xc7c14e92e0cd461c,
		0xc8479e0f1798b1fc,
		0xcb20e21466098705,
		0xcf672ab379467704,
		0xcf94305221c00752,
		0xd0290daf8de9f2b0,
		0xd1bfc1c9617d9453,
		0xd90939a58e404ff8,
		0xd945095e4d1d3ad4,
		0xdb4674cbf3154bfa,
		0xe3da81cc36d5741d,
		0xe444f780b29541a7,
		0xe5484dc513ee11e0,
		0xead8c24402f189b4,
		0xf32d7a3fdc567bdb,
		0xf54586500e2b72cd,
		0xf6b53f1a4cf29599,
		0xf805d22fabb80702,
		0xfae5dcfccbb93a23,
		0xfd676465ae0b8cf0)
}
