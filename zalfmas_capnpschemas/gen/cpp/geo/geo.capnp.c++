// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: geo.capnp

#include "geo.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<29> b_e529b4deb322ece8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232, 236,  34, 179, 222, 180,  41, 229,
     10,   0,   0,   0,   2,   0,   0,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 111, 114, 100,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 107,   0,   0,   0,   0,   0,   0,
    117, 116, 109,   0,   0,   0,   0,   0,
    108,  97, 116, 108, 111, 110,   0,   0, }
};
::capnp::word const* const bp_e529b4deb322ece8 = b_e529b4deb322ece8.words;
#if !CAPNP_LITE
static const uint16_t m_e529b4deb322ece8[] = {0, 2, 1};
const ::capnp::_::RawSchema s_e529b4deb322ece8 = {
  0xe529b4deb322ece8, b_e529b4deb322ece8.words, 29, nullptr, m_e529b4deb322ece8,
  0, 3, nullptr, nullptr, nullptr, { &s_e529b4deb322ece8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(CoordType_e529b4deb322ece8, e529b4deb322ece8);
static const ::capnp::_::AlignedData<33> b_b79427a74eb97fc0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
     10,   0,   0,   0,   1,   0,   0,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   0,   0,   0,
     25,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,   0,   0,
     24,   0,   0,   0,   1,   0,   1,   0,
    125,  43, 159, 120, 196, 100, 175, 205,
     41,   0,   0,   0,  50,   0,   0,   0,
    133,   8,  71,  30, 152,  83, 251, 200,
     37,   0,   0,   0,  58,   0,   0,   0,
    243, 226, 151, 148, 230, 222, 103, 204,
     33,   0,   0,   0,  58,   0,   0,   0,
    225, 151, 135, 108,  53,   2, 140, 149,
     29,   0,   0,   0,  34,   0,   0,   0,
     29,  81, 194, 222, 221, 221, 175, 228,
     25,   0,   0,   0,  34,   0,   0,   0,
    134, 173,  56, 112,  48, 232, 185, 245,
     21,   0,   0,   0,  34,   0,   0,   0,
    119, 103, 115,  56,  52,   0,   0,   0,
    117, 116, 109,  50,  49,  83,   0,   0,
    117, 116, 109,  51,  50,  78,   0,   0,
    103, 107,  53,   0,   0,   0,   0,   0,
    103, 107,  52,   0,   0,   0,   0,   0,
    103, 107,  51,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b79427a74eb97fc0 = b_b79427a74eb97fc0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b79427a74eb97fc0 = {
  0xb79427a74eb97fc0, b_b79427a74eb97fc0.words, 33, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b79427a74eb97fc0, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<23> b_cdaf64c4789f2b7d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125,  43, 159, 120, 196, 100, 175, 205,
     15,   0,   0,   0,   4,   0,   0,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,  46, 119,
    103, 115,  56,  52,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 230,  16,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cdaf64c4789f2b7d = b_cdaf64c4789f2b7d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cdaf64c4789f2b7d = {
  0xcdaf64c4789f2b7d, b_cdaf64c4789f2b7d.words, 23, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cdaf64c4789f2b7d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<23> b_c8fb53981e470885 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    133,   8,  71,  30, 152,  83, 251, 200,
     15,   0,   0,   0,   4,   0,   0,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,  46, 117,
    116, 109,  50,  49,  83,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 209, 127,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c8fb53981e470885 = b_c8fb53981e470885.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c8fb53981e470885 = {
  0xc8fb53981e470885, b_c8fb53981e470885.words, 23, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c8fb53981e470885, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<23> b_cc67dee69497e2f3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    243, 226, 151, 148, 230, 222, 103, 204,
     15,   0,   0,   0,   4,   0,   0,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,  46, 117,
    116, 109,  51,  50,  78,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 232, 100,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cc67dee69497e2f3 = b_cc67dee69497e2f3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cc67dee69497e2f3 = {
  0xcc67dee69497e2f3, b_cc67dee69497e2f3.words, 23, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cc67dee69497e2f3, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<23> b_958c02356c8797e1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    225, 151, 135, 108,  53,   2, 140, 149,
     15,   0,   0,   0,   4,   0,   0,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,  46, 103,
    107,  53,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 237, 122,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_958c02356c8797e1 = b_958c02356c8797e1.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_958c02356c8797e1 = {
  0x958c02356c8797e1, b_958c02356c8797e1.words, 23, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_958c02356c8797e1, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<23> b_e4afdddddec2511d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  81, 194, 222, 221, 221, 175, 228,
     15,   0,   0,   0,   4,   0,   0,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,  46, 103,
    107,  52,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 236, 122,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4afdddddec2511d = b_e4afdddddec2511d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e4afdddddec2511d = {
  0xe4afdddddec2511d, b_e4afdddddec2511d.words, 23, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e4afdddddec2511d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<23> b_f5b9e8307038ad86 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 173,  56, 112,  48, 232, 185, 245,
     15,   0,   0,   0,   4,   0,   0,   0,
    192, 127, 185,  78, 167,  39, 148, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  69,  80,  83,  71,  46, 103,
    107,  51,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0, 235, 122,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f5b9e8307038ad86 = b_f5b9e8307038ad86.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f5b9e8307038ad86 = {
  0xf5b9e8307038ad86, b_f5b9e8307038ad86.words, 23, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f5b9e8307038ad86, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_eb1acd255e40f049 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     73, 240,  64,  94,  37, 205,  26, 235,
     10,   0,   0,   0,   1,   0,   3,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  85,  84,  77,  67, 111, 111,
    114, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    122, 111, 110, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116, 105, 116, 117, 100, 101,
     66,  97, 110, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eb1acd255e40f049 = b_eb1acd255e40f049.words;
#if !CAPNP_LITE
static const uint16_t m_eb1acd255e40f049[] = {3, 1, 2, 0};
static const uint16_t i_eb1acd255e40f049[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_eb1acd255e40f049 = {
  0xeb1acd255e40f049, b_eb1acd255e40f049.words, 78, nullptr, m_eb1acd255e40f049,
  0, 4, i_eb1acd255e40f049, nullptr, nullptr, { &s_eb1acd255e40f049, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_ecf1fc3039cc8ffb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    251, 143, 204,  57,  48, 252, 241, 236,
     10,   0,   0,   0,   1,   0,   2,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  76,  97, 116,  76, 111, 110,
     67, 111, 111, 114, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    108,  97, 116,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ecf1fc3039cc8ffb = b_ecf1fc3039cc8ffb.words;
#if !CAPNP_LITE
static const uint16_t m_ecf1fc3039cc8ffb[] = {0, 1};
static const uint16_t i_ecf1fc3039cc8ffb[] = {0, 1};
const ::capnp::_::RawSchema s_ecf1fc3039cc8ffb = {
  0xecf1fc3039cc8ffb, b_ecf1fc3039cc8ffb.words, 47, nullptr, m_ecf1fc3039cc8ffb,
  0, 2, i_ecf1fc3039cc8ffb, nullptr, nullptr, { &s_ecf1fc3039cc8ffb, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_97ff7d61786091ae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 145,  96, 120,  97, 125, 255, 151,
     10,   0,   0,   0,   1,   0,   3,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  71,  75,  67, 111, 111, 114,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 114, 105, 100, 105,  97, 110,
     78, 111,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_97ff7d61786091ae = b_97ff7d61786091ae.words;
#if !CAPNP_LITE
static const uint16_t m_97ff7d61786091ae[] = {2, 0, 1};
static const uint16_t i_97ff7d61786091ae[] = {0, 1, 2};
const ::capnp::_::RawSchema s_97ff7d61786091ae = {
  0x97ff7d61786091ae, b_97ff7d61786091ae.words, 63, nullptr, m_97ff7d61786091ae,
  0, 3, i_97ff7d61786091ae, nullptr, nullptr, { &s_97ff7d61786091ae, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_c88fb91c1e6986e2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    226, 134, 105,  30,  28, 185, 143, 200,
     10,   0,   0,   0,   1,   0,   2,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  80, 111, 105, 110, 116,  50,
     68,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c88fb91c1e6986e2 = b_c88fb91c1e6986e2.words;
#if !CAPNP_LITE
static const uint16_t m_c88fb91c1e6986e2[] = {0, 1};
static const uint16_t i_c88fb91c1e6986e2[] = {0, 1};
const ::capnp::_::RawSchema s_c88fb91c1e6986e2 = {
  0xc88fb91c1e6986e2, b_c88fb91c1e6986e2.words, 47, nullptr, m_c88fb91c1e6986e2,
  0, 2, i_c88fb91c1e6986e2, nullptr, nullptr, { &s_c88fb91c1e6986e2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_b0c6993e13e314ad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173,  20, 227,  19,  62, 153, 198, 176,
     10,   0,   0,   0,   1,   0,   2,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  82, 111, 119,  67, 111, 108,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    114, 111, 119,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 108,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0c6993e13e314ad = b_b0c6993e13e314ad.words;
#if !CAPNP_LITE
static const uint16_t m_b0c6993e13e314ad[] = {1, 0};
static const uint16_t i_b0c6993e13e314ad[] = {0, 1};
const ::capnp::_::RawSchema s_b0c6993e13e314ad = {
  0xb0c6993e13e314ad, b_b0c6993e13e314ad.words, 47, nullptr, m_b0c6993e13e314ad,
  0, 2, i_b0c6993e13e314ad, nullptr, nullptr, { &s_b0c6993e13e314ad, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<91> b_b8f6a6192a7359f8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248,  89, 115,  42,  25, 166, 246, 184,
     10,   0,   0,   0,   1,   0,   1,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      1,   0,   7,   0,   0,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 111, 114, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    103, 107,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    174, 145,  96, 120,  97, 125, 255, 151,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 116, 108, 111, 110,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    251, 143, 204,  57,  48, 252, 241, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 116, 109,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     73, 240,  64,  94,  37, 205,  26, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  50,  68,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    226, 134, 105,  30,  28, 185, 143, 200,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 119,  99, 111, 108,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    173,  20, 227,  19,  62, 153, 198, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8f6a6192a7359f8 = b_b8f6a6192a7359f8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b8f6a6192a7359f8[] = {
  &s_97ff7d61786091ae,
  &s_b0c6993e13e314ad,
  &s_c88fb91c1e6986e2,
  &s_eb1acd255e40f049,
  &s_ecf1fc3039cc8ffb,
};
static const uint16_t m_b8f6a6192a7359f8[] = {0, 1, 3, 4, 2};
static const uint16_t i_b8f6a6192a7359f8[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_b8f6a6192a7359f8 = {
  0xb8f6a6192a7359f8, b_b8f6a6192a7359f8.words, 91, d_b8f6a6192a7359f8, m_b8f6a6192a7359f8,
  5, 5, i_b8f6a6192a7359f8, nullptr, nullptr, { &s_b8f6a6192a7359f8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_b952dbe83866da4a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     74, 218, 102,  56, 232, 219,  82, 185,
     10,   0,   0,   0,   1,   0,   0,   0,
     36, 252, 199, 121,  32,  84, 144, 144,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  15,   0,   0,   0,
    103, 101, 111,  46,  99,  97, 112, 110,
    112,  58,  82, 101,  99, 116,  66, 111,
    117, 110, 100, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116, 108,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     74, 218, 102,  56, 232, 219,  82, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     74, 218, 102,  56, 232, 219,  82, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0, 122,   0,   0,   0,
     67, 111, 111, 114, 100, 105, 110,  97,
    116, 101,  84, 121, 112, 101,   0,   0, }
};
::capnp::word const* const bp_b952dbe83866da4a = b_b952dbe83866da4a.words;
#if !CAPNP_LITE
static const uint16_t m_b952dbe83866da4a[] = {1, 0};
static const uint16_t i_b952dbe83866da4a[] = {0, 1};
const ::capnp::_::RawSchema s_b952dbe83866da4a = {
  0xb952dbe83866da4a, b_b952dbe83866da4a.words, 51, nullptr, m_b952dbe83866da4a,
  0, 2, i_b952dbe83866da4a, nullptr, nullptr, { &s_b952dbe83866da4a, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mas {
namespace schema {
namespace geo {

// EPSG
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t EPSG::_capnpPrivate::dataWordSize;
constexpr uint16_t EPSG::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind EPSG::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* EPSG::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr  ::uint32_t EPSG::WGS84;
#endif
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr  ::uint32_t EPSG::UTM21_S;
#endif
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr  ::uint32_t EPSG::UTM32_N;
#endif
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr  ::uint32_t EPSG::GK5;
#endif
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr  ::uint32_t EPSG::GK4;
#endif
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr  ::uint32_t EPSG::GK3;
#endif
// UTMCoord
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t UTMCoord::_capnpPrivate::dataWordSize;
constexpr uint16_t UTMCoord::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind UTMCoord::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UTMCoord::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LatLonCoord
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LatLonCoord::_capnpPrivate::dataWordSize;
constexpr uint16_t LatLonCoord::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LatLonCoord::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LatLonCoord::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// GKCoord
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t GKCoord::_capnpPrivate::dataWordSize;
constexpr uint16_t GKCoord::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind GKCoord::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GKCoord::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Point2D
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Point2D::_capnpPrivate::dataWordSize;
constexpr uint16_t Point2D::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Point2D::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Point2D::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// RowCol
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t RowCol::_capnpPrivate::dataWordSize;
constexpr uint16_t RowCol::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind RowCol::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RowCol::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Coord
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Coord::_capnpPrivate::dataWordSize;
constexpr uint16_t Coord::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Coord::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Coord::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

