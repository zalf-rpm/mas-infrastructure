// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: soil_params.capnp

#include "soil_params.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<43> b_fc682227304e2281 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    129,  34,  78,  48,  39,  34, 104, 252,
     31,   0,   0,   0,   1,   0,   0,   0,
    171, 150, 121, 116, 160, 172,  60, 248,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 115, 111, 105,
    108,  95, 112,  97, 114,  97, 109, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    111, 105, 108,  67, 104,  97, 114,  97,
     99, 116, 101, 114, 105, 115, 116, 105,
     99,  68,  97, 116,  97,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     99, 219,  37, 224,  87, 171, 250, 234,
      1,   0,   0,   0,  42,   0,   0,   0,
     68,  97, 116,  97,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     99, 219,  37, 224,  87, 171, 250, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fc682227304e2281 = b_fc682227304e2281.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fc682227304e2281[] = {
  &s_eafaab57e025db63,
};
static const uint16_t m_fc682227304e2281[] = {0};
static const uint16_t i_fc682227304e2281[] = {0};
const ::capnp::_::RawSchema s_fc682227304e2281 = {
  0xfc682227304e2281, b_fc682227304e2281.words, 43, d_fc682227304e2281, m_fc682227304e2281,
  1, 1, i_fc682227304e2281, nullptr, nullptr, { &s_fc682227304e2281, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<102> b_eafaab57e025db63 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 219,  37, 224,  87, 171, 250, 234,
     54,   0,   0,   0,   1,   0,   1,   0,
    129,  34,  78,  48,  39,  34, 104, 252,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 115, 111, 105,
    108,  95, 112,  97, 114,  97, 109, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    111, 105, 108,  67, 104,  97, 114,  97,
     99, 116, 101, 114, 105, 115, 116, 105,
     99,  68,  97, 116,  97,  46,  68,  97,
    116,  97,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 105, 108,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 105, 108,  82,  97, 119,  68,
    101, 110, 115, 105, 116, 121,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 105, 114,  67,  97, 112,  97,  99,
    105, 116, 121,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 101, 108, 100,  67,  97, 112,
     97,  99, 105, 116, 121,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  70, 105, 101, 108, 100,  67,  97,
    112,  97,  99, 105, 116, 121,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eafaab57e025db63 = b_eafaab57e025db63.words;
#if !CAPNP_LITE
static const uint16_t m_eafaab57e025db63[] = {2, 3, 4, 1, 0};
static const uint16_t i_eafaab57e025db63[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_eafaab57e025db63 = {
  0xeafaab57e025db63, b_eafaab57e025db63.words, 102, nullptr, m_eafaab57e025db63,
  0, 5, i_eafaab57e025db63, nullptr, nullptr, { &s_eafaab57e025db63, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<44> b_e4eb0a9bb0e5bb53 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83, 187, 229, 176, 155,  10, 235, 228,
     31,   0,   0,   0,   1,   0,   0,   0,
    171, 150, 121, 116, 160, 172,  60, 248,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   1,   0,   0,
     49,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 115, 111, 105,
    108,  95, 112,  97, 114,  97, 109, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    111, 105, 108,  67, 104,  97, 114,  97,
     99, 116, 101, 114, 105, 115, 116, 105,
     99,  77, 111, 100, 105, 102, 105, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    180, 177, 232, 205, 108, 164, 104, 169,
      1,   0,   0,   0,  42,   0,   0,   0,
     68,  97, 116,  97,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    180, 177, 232, 205, 108, 164, 104, 169,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4eb0a9bb0e5bb53 = b_e4eb0a9bb0e5bb53.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e4eb0a9bb0e5bb53[] = {
  &s_a968a46ccde8b1b4,
};
static const uint16_t m_e4eb0a9bb0e5bb53[] = {0};
static const uint16_t i_e4eb0a9bb0e5bb53[] = {0};
const ::capnp::_::RawSchema s_e4eb0a9bb0e5bb53 = {
  0xe4eb0a9bb0e5bb53, b_e4eb0a9bb0e5bb53.words, 44, d_e4eb0a9bb0e5bb53, m_e4eb0a9bb0e5bb53,
  1, 1, i_e4eb0a9bb0e5bb53, nullptr, nullptr, { &s_e4eb0a9bb0e5bb53, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<102> b_a968a46ccde8b1b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180, 177, 232, 205, 108, 164, 104, 169,
     58,   0,   0,   0,   1,   0,   1,   0,
     83, 187, 229, 176, 155,  10, 235, 228,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 115, 111, 105,
    108,  95, 112,  97, 114,  97, 109, 115,
     46,  99,  97, 112, 110, 112,  58,  83,
    111, 105, 108,  67, 104,  97, 114,  97,
     99, 116, 101, 114, 105, 115, 116, 105,
     99,  77, 111, 100, 105, 102, 105, 101,
    114,  46,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 105, 108,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 103,  97, 110, 105,  99,  77,
     97, 116, 116, 101, 114,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 105, 114,  67,  97, 112,  97,  99,
    105, 116, 121,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 105, 101, 108, 100,  67,  97, 112,
     97,  99, 105, 116, 121,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  70, 105, 101, 108, 100,  67,  97,
    112,  97,  99, 105, 116, 121,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a968a46ccde8b1b4 = b_a968a46ccde8b1b4.words;
#if !CAPNP_LITE
static const uint16_t m_a968a46ccde8b1b4[] = {2, 3, 4, 1, 0};
static const uint16_t i_a968a46ccde8b1b4[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_a968a46ccde8b1b4 = {
  0xa968a46ccde8b1b4, b_a968a46ccde8b1b4.words, 102, nullptr, m_a968a46ccde8b1b4,
  0, 5, i_a968a46ccde8b1b4, nullptr, nullptr, { &s_a968a46ccde8b1b4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<43> b_9b169bc96bb3d24b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75, 210, 179, 107, 201, 155,  22, 155,
     31,   0,   0,   0,   1,   0,   0,   0,
    171, 150, 121, 116, 160, 172,  60, 248,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 115, 111, 105,
    108,  95, 112,  97, 114,  97, 109, 115,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 112, 105, 108, 108,  97, 114, 121,
     82, 105, 115, 101,  82,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     93, 136, 173, 143, 197, 137, 138, 183,
      1,   0,   0,   0,  42,   0,   0,   0,
     68,  97, 116,  97,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     93, 136, 173, 143, 197, 137, 138, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b169bc96bb3d24b = b_9b169bc96bb3d24b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9b169bc96bb3d24b[] = {
  &s_b78a89c58fad885d,
};
static const uint16_t m_9b169bc96bb3d24b[] = {0};
static const uint16_t i_9b169bc96bb3d24b[] = {0};
const ::capnp::_::RawSchema s_9b169bc96bb3d24b = {
  0x9b169bc96bb3d24b, b_9b169bc96bb3d24b.words, 43, d_9b169bc96bb3d24b, m_9b169bc96bb3d24b,
  1, 1, i_9b169bc96bb3d24b, nullptr, nullptr, { &s_9b169bc96bb3d24b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_b78a89c58fad885d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 136, 173, 143, 197, 137, 138, 183,
     49,   0,   0,   0,   1,   0,   1,   0,
     75, 210, 179, 107, 201, 155,  22, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  47, 109, 111,
    110, 105,  99,  97,  47, 115, 111, 105,
    108,  95, 112,  97, 114,  97, 109, 115,
     46,  99,  97, 112, 110, 112,  58,  67,
     97, 112, 105, 108, 108,  97, 114, 121,
     82, 105, 115, 101,  82,  97, 116, 101,
     46,  68,  97, 116,  97,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    115, 111, 105, 108,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 116,  97, 110,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114,  97, 116, 101,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b78a89c58fad885d = b_b78a89c58fad885d.words;
#if !CAPNP_LITE
static const uint16_t m_b78a89c58fad885d[] = {1, 2, 0};
static const uint16_t i_b78a89c58fad885d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b78a89c58fad885d = {
  0xb78a89c58fad885d, b_b78a89c58fad885d.words, 68, nullptr, m_b78a89c58fad885d,
  0, 3, i_b78a89c58fad885d, nullptr, nullptr, { &s_b78a89c58fad885d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mas {
namespace schema {
namespace soil {

// SoilCharacteristicData
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SoilCharacteristicData::_capnpPrivate::dataWordSize;
constexpr uint16_t SoilCharacteristicData::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SoilCharacteristicData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SoilCharacteristicData::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SoilCharacteristicData::Data
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SoilCharacteristicData::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t SoilCharacteristicData::Data::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SoilCharacteristicData::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SoilCharacteristicData::Data::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SoilCharacteristicModifier
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SoilCharacteristicModifier::_capnpPrivate::dataWordSize;
constexpr uint16_t SoilCharacteristicModifier::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SoilCharacteristicModifier::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SoilCharacteristicModifier::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SoilCharacteristicModifier::Data
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SoilCharacteristicModifier::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t SoilCharacteristicModifier::Data::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SoilCharacteristicModifier::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SoilCharacteristicModifier::Data::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CapillaryRiseRate
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CapillaryRiseRate::_capnpPrivate::dataWordSize;
constexpr uint16_t CapillaryRiseRate::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CapillaryRiseRate::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapillaryRiseRate::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CapillaryRiseRate::Data
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CapillaryRiseRate::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t CapillaryRiseRate::Data::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CapillaryRiseRate::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CapillaryRiseRate::Data::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
}  // namespace

