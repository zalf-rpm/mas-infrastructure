#pragma checksum "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d7d56059000178ddc36b5f406d9fa6f5120fe50b"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorApp1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using BlazorApp1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\_Imports.razor"
using BlazorApp1.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
using Capnp.Rpc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
using Mas.Rpc;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/capnp")]
    public partial class CapnpTest : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1>Hello, Cap\'n Proto!</h1>\r\n\r\nWelcome to the Cap\'n Proto test site.\r\n\r\n");
            __builder.OpenElement(1, "p");
            __builder.AddMarkupContent(2, "\r\n    Simulation:\r\n    ");
            __builder.OpenElement(3, "select");
            __builder.AddAttribute(4, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 12 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                       UpdateScenariosOnSimulationChanged

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(5, "\r\n");
#nullable restore
#line 13 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
         foreach (var sim in Simulations)
        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(6, "            ");
            __builder.OpenElement(7, "option");
            __builder.AddAttribute(8, "value", 
#nullable restore
#line 15 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                           sim.Key

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(9, 
#nullable restore
#line 15 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                                    sim.Value.Item2.Name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(10, "\r\n");
#nullable restore
#line 16 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(11, "    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(13, "\r\n");
            __builder.OpenElement(14, "p");
            __builder.AddMarkupContent(15, "\r\n    Scenario:\r\n    ");
            __builder.OpenElement(16, "select");
            __builder.AddAttribute(17, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 21 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                       UpdateRealizationsOnScenarioChanged

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(18, "\r\n");
#nullable restore
#line 22 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
         foreach (var scen in Scenarios)
        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(19, "            ");
            __builder.OpenElement(20, "option");
            __builder.AddAttribute(21, "value", 
#nullable restore
#line 24 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                           scen.Key

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(22, 
#nullable restore
#line 24 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                                     scen.Value.Item2.Name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(23, "\r\n");
#nullable restore
#line 25 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(24, "    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(25, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(26, "\r\n");
            __builder.OpenElement(27, "p");
            __builder.AddMarkupContent(28, "\r\n    Realization:\r\n    ");
            __builder.OpenElement(29, "select");
            __builder.AddAttribute(30, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 30 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                       UpdateTimeseriesOnRealizationChanged

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(31, "\r\n");
#nullable restore
#line 31 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
         foreach (var real in Realizations)
        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(32, "        ");
            __builder.OpenElement(33, "option");
            __builder.AddAttribute(34, "value", 
#nullable restore
#line 33 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                       real.Key

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(35, 
#nullable restore
#line 33 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                                 real.Value.Item2.Name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(36, "\r\n");
#nullable restore
#line 34 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(37, "    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(38, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(39, "\r\n");
            __builder.OpenElement(40, "p");
            __builder.AddMarkupContent(41, "\r\n    TimeSeries:\r\n    ");
            __builder.OpenElement(42, "select");
            __builder.AddAttribute(43, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 39 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                       UpdateTimeseriesCSVOnTimeseriesChanged

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(44, "\r\n");
#nullable restore
#line 40 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
         foreach (var ts in Timeseries)
        {

#line default
#line hidden
#nullable disable
            __builder.AddContent(45, "            ");
            __builder.OpenElement(46, "option");
            __builder.AddAttribute(47, "value", 
#nullable restore
#line 42 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                           ts.Key

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(48, 
#nullable restore
#line 42 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                                    ts.Value.Item2.Item1.ToString("yyyy-MM-dd") 
                + "-" + ts.Value.Item2.Item2.ToString("yyyy-MM-dd")

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(49, "\r\n");
#nullable restore
#line 44 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
        }

#line default
#line hidden
#nullable disable
            __builder.AddContent(50, "    ");
            __builder.CloseElement();
            __builder.AddMarkupContent(51, "\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(52, "\r\n\r\n");
            __builder.OpenElement(53, "p");
            __builder.AddMarkupContent(54, "\r\n    ");
            __builder.OpenElement(55, "textarea");
            __builder.AddAttribute(56, "style", "width:100%");
            __builder.AddAttribute(57, "readonly", "readonly");
            __builder.AddContent(58, 
#nullable restore
#line 49 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
                                                      CsvTimeseries

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(59, "\r\n\r\n");
            __builder.CloseElement();
            __builder.AddMarkupContent(60, "\r\n\r\n");
            __builder.OpenElement(61, "ul");
            __builder.AddMarkupContent(62, "\r\n");
#nullable restore
#line 54 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
     foreach (var name in ElemNames)
    {

#line default
#line hidden
#nullable disable
            __builder.AddContent(63, "        ");
            __builder.OpenElement(64, "li");
            __builder.AddContent(65, 
#nullable restore
#line 56 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
             name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(66, "\r\n");
#nullable restore
#line 57 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 60 "C:\Users\berg.ZALF-AD\GitHub\climate_data_server_csharp\BlazorApp1\Pages\CapnpTest.razor"
       
    private Capnp.Rpc.TcpRpcClient ClimateDataServiceClient;

    private Dictionary<string, Tuple<ClimateData.ISimulation, Common.IdInformation>> Simulations = new Dictionary<string, Tuple<ClimateData.ISimulation, Common.IdInformation>>();
    private Dictionary<string, Tuple<ClimateData.IScenario, Common.IdInformation>> Scenarios = new Dictionary<string, Tuple<ClimateData.IScenario, Common.IdInformation>>();
    private Dictionary<string, Tuple<ClimateData.IRealization, Common.IdInformation>> Realizations = new Dictionary<string, Tuple<ClimateData.IRealization, Common.IdInformation>>();
    private Dictionary<int, Tuple<ClimateData.ITimeSeries, Tuple<DateTime, DateTime>>> Timeseries = new Dictionary<int, Tuple<ClimateData.ITimeSeries, Tuple<DateTime, DateTime>>>();

    private Capnp.Rpc.TcpRpcClient CsvTimeSeriesClient;
    private List<string> ElemNames = new List<string>();

    private String CsvTimeseries = "";

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync");
        /*
        if (CsvTimeSeriesClient == null)
        {
            CsvTimeSeriesClient = new TcpRpcClient("localhost", 11000);
            await Task.WhenAll(CsvTimeSeriesClient.WhenConnected);
        }
        */
        if (ClimateDataServiceClient == null)
        {
            ClimateDataServiceClient = new TcpRpcClient("login01.cluster.zalf.de", 11001);
            await Task.WhenAll(ClimateDataServiceClient.WhenConnected);
        }

        /*
        if (ElemNames.Count == 0 && CsvTimeSeriesClient.State == ConnectionState.Active)
        {
            var csvTimeSeries = CsvTimeSeriesClient.GetMain<ClimateData.ITimeSeries>();
            var header = await csvTimeSeries.Header();
            foreach (var elem in header)
            {
                ElemNames.Add(elem.ToString());
                Console.WriteLine(elem);
            }
        }
        */

        if (Simulations.Count == 0  && ClimateDataServiceClient.State == ConnectionState.Active)
        {
            var service = ClimateDataServiceClient.GetMain<Mas.Rpc.ClimateData.IService>();
            await UpdateSimulations(service);
        }
        //forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }


    private async Task UpdateSimulations(ClimateData.IService service)
    {
        Console.WriteLine("UpdateSimulations");
        Simulations.Clear();

        var sims = await service.GetAvailableSimulations();
        foreach (var sim in sims)
        {
            var simInfo = await sim.Info();
            Simulations.Add(simInfo.Id, new Tuple<ClimateData.ISimulation, Common.IdInformation>(sim, simInfo));
        }
        if(sims.Count > 0) await UpdateScenarios(sims[0]);
    }

    private async Task UpdateScenariosOnSimulationChanged(ChangeEventArgs arg)
    {
        Console.WriteLine("UpdateScenariosOnSimulationChanged");
        await UpdateScenarios(Simulations[arg.Value.ToString()].Item1);
    }

    private async Task UpdateScenarios(ClimateData.ISimulation sim)
    {
        Console.WriteLine("UpdateScenarios");
        Scenarios.Clear();

        var scens = await sim.Scenarios();
        foreach (var scen in scens)
        {
            var scenInfo = await scen.Info();
            Scenarios.Add(scenInfo.Id, new Tuple<ClimateData.IScenario, Common.IdInformation>(scen, scenInfo));
        }

        if(scens.Count > 0) await UpdateRealizations(scens[0]);
    }

    private async Task UpdateRealizationsOnScenarioChanged(ChangeEventArgs arg)
    {
        Console.WriteLine("UpdateRealizationsOnScenarioChanged");
        await UpdateRealizations(Scenarios[arg.Value.ToString()].Item1);
    }

    private async Task UpdateRealizations(ClimateData.IScenario scen)
    {
        Console.WriteLine("UpdateRealizations");
        Realizations.Clear();

        var reals = await scen.Realizations();
        foreach (var real in reals)
        {
            var realInfo = await real.Info();
            Realizations.Add(realInfo.Id, new Tuple<ClimateData.IRealization, Common.IdInformation>(real, realInfo));
        }

        if (reals.Count > 0) await UpdateTimeseries(reals[0]);
    }

    private async Task UpdateTimeseriesOnRealizationChanged(ChangeEventArgs arg)
    {
        Console.WriteLine("UpdateTimeseriesOnRealizationChanged");
        await UpdateTimeseries(Realizations[arg.Value.ToString()].Item1);
    }

    private async Task UpdateTimeseries(ClimateData.IRealization real)
    {
        Console.WriteLine("UpdateTimeseries");
        Timeseries.Clear();
        CsvTimeseries = "";

        var coord = new Geo.Coord();
        coord.Latlon = new Geo.LatLonCoord();
        coord.Latlon.Lat = 46.51412;
        coord.Latlon.Lon = 12.81895;
        var tss = await real.ClosestTimeSeriesAt(coord);
        var firstStart = DateTime.Today;
        var firstEnd = firstStart;
        foreach (var it in tss.Select((x, i) => new { timeseries = x, Index = i }))
        {
            var range = await it.timeseries.Range();
            var s = range.Item1;
            var e = range.Item2;
            var start = new DateTime(s.Year, s.Month, s.Day);
            var end = new DateTime(e.Year, e.Month, e.Day);
            if(it.Index == 0)
            {
                firstStart = start;
                firstEnd = end;
            }
            Timeseries.Add(it.Index, Tuple.Create(it.timeseries, Tuple.Create(start, end)));
        }

        if (tss.Count > 0) await UpdateTimeseriesCSV(tss[0], firstStart, firstEnd);
    }

    private async Task UpdateTimeseriesCSVOnTimeseriesChanged(ChangeEventArgs arg)
    {
        Console.WriteLine("UpdateTimeseriesCSVOnTimeseriesChanged");
        var id = Int32.Parse(arg.Value.ToString());
        var range = Timeseries[id].Item2;
        await UpdateTimeseriesCSV(Timeseries[id].Item1, range.Item1, range.Item2);
    }

    private async Task UpdateTimeseriesCSV(ClimateData.ITimeSeries ts, DateTime from, DateTime to)
    {
        Console.WriteLine("UpdateTimeseriesCSV");
        var csv = "iso-date";
        var header = await ts.Header();
        foreach(var elem in header)
        {
            csv += ", " + elem.ToString();
        }
        csv += "\n";

        return;
        var data = await ts.Data();
        var currentDate = from;
        foreach(var daysData in data)
        {
            csv += currentDate.ToString("yyyy-MM-dd");
            foreach(var elem in daysData)
            {
                csv += ", " + elem.ToString();
            }
            csv += "\n";
            currentDate = currentDate.AddDays(1);
        }

        CsvTimeseries = csv;
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
